ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Clock_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Clock_1_Start,"ax",%progbits
  20              		.align	2
  21              		.global	Clock_1_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	Clock_1_Start, %function
  25              	Clock_1_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Clock_1.c"
   1:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Clock_1.c **** * File Name: Clock_1.c
   3:Generated_Source\PSoC5/Clock_1.c **** * Version 2.20
   4:Generated_Source\PSoC5/Clock_1.c **** *
   5:Generated_Source\PSoC5/Clock_1.c **** *  Description:
   6:Generated_Source\PSoC5/Clock_1.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/Clock_1.c **** *
   8:Generated_Source\PSoC5/Clock_1.c **** *  Note:
   9:Generated_Source\PSoC5/Clock_1.c **** *
  10:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Clock_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Clock_1.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Clock_1.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Clock_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Clock_1.c **** 
  17:Generated_Source\PSoC5/Clock_1.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/Clock_1.c **** #include "Clock_1.h"
  19:Generated_Source\PSoC5/Clock_1.c **** 
  20:Generated_Source\PSoC5/Clock_1.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/Clock_1.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/Clock_1.c **** 
  27:Generated_Source\PSoC5/Clock_1.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/Clock_1.c **** 
  29:Generated_Source\PSoC5/Clock_1.c **** 
  30:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 2


  31:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Start
  32:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  33:Generated_Source\PSoC5/Clock_1.c **** *
  34:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  35:Generated_Source\PSoC5/Clock_1.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:Generated_Source\PSoC5/Clock_1.c **** *  "Start on Reset" option is enabled in the DWR.
  37:Generated_Source\PSoC5/Clock_1.c **** *
  38:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  39:Generated_Source\PSoC5/Clock_1.c **** *  None
  40:Generated_Source\PSoC5/Clock_1.c **** *
  41:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  42:Generated_Source\PSoC5/Clock_1.c **** *  None
  43:Generated_Source\PSoC5/Clock_1.c **** *
  44:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  45:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Start(void) 
  46:Generated_Source\PSoC5/Clock_1.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  47:Generated_Source\PSoC5/Clock_1.c ****     /* Set the bit to enable the clock. */
  48:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN |= Clock_1_CLKEN_MASK;
  33              		.loc 1 48 0
  34 0000 054A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00203 		orr	r3, r3, #2
  37 0008 1370     		strb	r3, [r2]
  49:Generated_Source\PSoC5/Clock_1.c **** 	Clock_1_CLKSTBY |= Clock_1_CLKSTBY_MASK;
  38              		.loc 1 49 0
  39 000a 1032     		adds	r2, r2, #16
  40 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41 000e 43F00203 		orr	r3, r3, #2
  42 0012 1370     		strb	r3, [r2]
  43 0014 7047     		bx	lr
  44              	.L3:
  45 0016 00BF     		.align	2
  46              	.L2:
  47 0018 A2430040 		.word	1073759138
  48              		.cfi_endproc
  49              	.LFE0:
  50              		.size	Clock_1_Start, .-Clock_1_Start
  51              		.section	.text.Clock_1_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	Clock_1_Stop
  54              		.thumb
  55              		.thumb_func
  56              		.type	Clock_1_Stop, %function
  57              	Clock_1_Stop:
  58              	.LFB1:
  50:Generated_Source\PSoC5/Clock_1.c **** }
  51:Generated_Source\PSoC5/Clock_1.c **** 
  52:Generated_Source\PSoC5/Clock_1.c **** 
  53:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  54:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Stop
  55:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  56:Generated_Source\PSoC5/Clock_1.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 3


  57:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  58:Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and returns immediately. This API does not require the
  59:Generated_Source\PSoC5/Clock_1.c **** *  source clock to be running but may return before the hardware is actually
  60:Generated_Source\PSoC5/Clock_1.c **** *  disabled. If the settings of the clock are changed after calling this
  61:Generated_Source\PSoC5/Clock_1.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:Generated_Source\PSoC5/Clock_1.c **** *  glitch, use the StopBlock function.
  63:Generated_Source\PSoC5/Clock_1.c **** *
  64:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  65:Generated_Source\PSoC5/Clock_1.c **** *  None
  66:Generated_Source\PSoC5/Clock_1.c **** *
  67:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  68:Generated_Source\PSoC5/Clock_1.c **** *  None
  69:Generated_Source\PSoC5/Clock_1.c **** *
  70:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Stop(void) 
  72:Generated_Source\PSoC5/Clock_1.c **** {
  59              		.loc 1 72 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  73:Generated_Source\PSoC5/Clock_1.c ****     /* Clear the bit to disable the clock. */
  74:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN &= (uint8)(~Clock_1_CLKEN_MASK);
  64              		.loc 1 74 0
  65 0000 054A     		ldr	r2, .L5
  66 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0004 03F0FD03 		and	r3, r3, #253
  68 0008 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/Clock_1.c **** 	Clock_1_CLKSTBY &= (uint8)(~Clock_1_CLKSTBY_MASK);
  69              		.loc 1 75 0
  70 000a 1032     		adds	r2, r2, #16
  71 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  72 000e 03F0FD03 		and	r3, r3, #253
  73 0012 1370     		strb	r3, [r2]
  74 0014 7047     		bx	lr
  75              	.L6:
  76 0016 00BF     		.align	2
  77              	.L5:
  78 0018 A2430040 		.word	1073759138
  79              		.cfi_endproc
  80              	.LFE1:
  81              		.size	Clock_1_Stop, .-Clock_1_Stop
  82              		.section	.text.Clock_1_StopBlock,"ax",%progbits
  83              		.align	2
  84              		.global	Clock_1_StopBlock
  85              		.thumb
  86              		.thumb_func
  87              		.type	Clock_1_StopBlock, %function
  88              	Clock_1_StopBlock:
  89              	.LFB2:
  76:Generated_Source\PSoC5/Clock_1.c **** }
  77:Generated_Source\PSoC5/Clock_1.c **** 
  78:Generated_Source\PSoC5/Clock_1.c **** 
  79:Generated_Source\PSoC5/Clock_1.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:Generated_Source\PSoC5/Clock_1.c **** 
  81:Generated_Source\PSoC5/Clock_1.c **** 
  82:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 4


  83:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StopBlock
  84:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  85:Generated_Source\PSoC5/Clock_1.c **** *
  86:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  87:Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:Generated_Source\PSoC5/Clock_1.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:Generated_Source\PSoC5/Clock_1.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:Generated_Source\PSoC5/Clock_1.c **** *  Note that the source clock must be running or this API will never return as
  91:Generated_Source\PSoC5/Clock_1.c **** *  a stopped clock cannot be disabled.
  92:Generated_Source\PSoC5/Clock_1.c **** *
  93:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  94:Generated_Source\PSoC5/Clock_1.c **** *  None
  95:Generated_Source\PSoC5/Clock_1.c **** *
  96:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  97:Generated_Source\PSoC5/Clock_1.c **** *  None
  98:Generated_Source\PSoC5/Clock_1.c **** *
  99:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 100:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StopBlock(void) 
 101:Generated_Source\PSoC5/Clock_1.c **** {
  90              		.loc 1 101 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 102:Generated_Source\PSoC5/Clock_1.c ****     if ((Clock_1_CLKEN & Clock_1_CLKEN_MASK) != 0u)
  95              		.loc 1 102 0
  96 0000 164B     		ldr	r3, .L11
  97 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  98 0004 13F0020F 		tst	r3, #2
  99 0008 26D0     		beq	.L7
 100              	.LBB2:
 103:Generated_Source\PSoC5/Clock_1.c ****     {
 104:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 105:Generated_Source\PSoC5/Clock_1.c ****         uint16 oldDivider;
 106:Generated_Source\PSoC5/Clock_1.c **** 
 107:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0u;
 101              		.loc 1 107 0
 102 000a 154A     		ldr	r2, .L11+4
 103 000c 0023     		movs	r3, #0
 104 000e 1370     		strb	r3, [r2]
 108:Generated_Source\PSoC5/Clock_1.c **** 
 109:Generated_Source\PSoC5/Clock_1.c ****         /* Clear all the mask bits except ours. */
 110:Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 111:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 112:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = 0x00u;
 113:Generated_Source\PSoC5/Clock_1.c **** #else
 114:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
 105              		.loc 1 114 0
 106 0010 0220     		movs	r0, #2
 107 0012 1449     		ldr	r1, .L11+8
 108 0014 0870     		strb	r0, [r1]
 115:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = 0x00u;
 109              		.loc 1 115 0
 110 0016 0431     		adds	r1, r1, #4
 111 0018 0B70     		strb	r3, [r1]
 116:Generated_Source\PSoC5/Clock_1.c **** #endif /* Clock_1__CFG3 */
 117:Generated_Source\PSoC5/Clock_1.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 5


 118:Generated_Source\PSoC5/Clock_1.c ****         /* Clear mask of bus clock. */
 119:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 112              		.loc 1 119 0
 113 001a 0C39     		subs	r1, r1, #12
 114 001c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 115 001e 03F07F03 		and	r3, r3, #127
 116 0022 0B70     		strb	r3, [r1]
 120:Generated_Source\PSoC5/Clock_1.c **** 
 121:Generated_Source\PSoC5/Clock_1.c ****         oldDivider = CY_GET_REG16(Clock_1_DIV_PTR);
 117              		.loc 1 121 0
 118 0024 104B     		ldr	r3, .L11+12
 119 0026 1988     		ldrh	r1, [r3]
 120 0028 89B2     		uxth	r1, r1
 121              	.LVL0:
 122:Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 122              		.loc 1 122 0
 123 002a 823B     		subs	r3, r3, #130
 124 002c 1980     		strh	r1, [r3]	@ movhi
 123:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 125              		.loc 1 123 0
 126 002e 0723     		movs	r3, #7
 127 0030 1370     		strb	r3, [r2]
 128              	.L9:
 124:Generated_Source\PSoC5/Clock_1.c **** 
 125:Generated_Source\PSoC5/Clock_1.c ****         /* Wait for clock to be disabled */
 126:Generated_Source\PSoC5/Clock_1.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 129              		.loc 1 126 0 discriminator 1
 130 0032 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 131 0034 13F0010F 		tst	r3, #1
 132 0038 FBD1     		bne	.L9
 127:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:Generated_Source\PSoC5/Clock_1.c **** 
 129:Generated_Source\PSoC5/Clock_1.c ****         /* Clear the bit to disable the clock. */
 130:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKEN &= (uint8)(~Clock_1_CLKEN_MASK);
 133              		.loc 1 130 0
 134 003a 084A     		ldr	r2, .L11
 135 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 136 003e 03F0FD03 		and	r3, r3, #253
 137 0042 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY &= (uint8)(~Clock_1_CLKSTBY_MASK);
 138              		.loc 1 131 0
 139 0044 1032     		adds	r2, r2, #16
 140 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 141 0048 03F0FD03 		and	r3, r3, #253
 142 004c 1370     		strb	r3, [r2]
 132:Generated_Source\PSoC5/Clock_1.c **** 
 133:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 134:Generated_Source\PSoC5/Clock_1.c ****         /* Clear the disable bit */
 135:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0x00u;
 143              		.loc 1 135 0
 144 004e 0022     		movs	r2, #0
 145 0050 034B     		ldr	r3, .L11+4
 146 0052 1A70     		strb	r2, [r3]
 136:Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(Clock_1_DIV_PTR, oldDivider);
 147              		.loc 1 136 0
 148 0054 8333     		adds	r3, r3, #131
 149 0056 1980     		strh	r1, [r3]	@ movhi
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 6


 150              	.LVL1:
 151              	.L7:
 152 0058 7047     		bx	lr
 153              	.L12:
 154 005a 00BF     		.align	2
 155              	.L11:
 156 005c A2430040 		.word	1073759138
 157 0060 01400040 		.word	1073758209
 158 0064 10400040 		.word	1073758224
 159 0068 84400040 		.word	1073758340
 160              	.LBE2:
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	Clock_1_StopBlock, .-Clock_1_StopBlock
 164              		.section	.text.Clock_1_StandbyPower,"ax",%progbits
 165              		.align	2
 166              		.global	Clock_1_StandbyPower
 167              		.thumb
 168              		.thumb_func
 169              		.type	Clock_1_StandbyPower, %function
 170              	Clock_1_StandbyPower:
 171              	.LFB3:
 137:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:Generated_Source\PSoC5/Clock_1.c ****     }
 139:Generated_Source\PSoC5/Clock_1.c **** }
 140:Generated_Source\PSoC5/Clock_1.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:Generated_Source\PSoC5/Clock_1.c **** 
 142:Generated_Source\PSoC5/Clock_1.c **** 
 143:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StandbyPower
 145:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 146:Generated_Source\PSoC5/Clock_1.c **** *
 147:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 148:Generated_Source\PSoC5/Clock_1.c **** *  Sets whether the clock is active in standby mode.
 149:Generated_Source\PSoC5/Clock_1.c **** *
 150:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 151:Generated_Source\PSoC5/Clock_1.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:Generated_Source\PSoC5/Clock_1.c **** *
 153:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 154:Generated_Source\PSoC5/Clock_1.c **** *  None
 155:Generated_Source\PSoC5/Clock_1.c **** *
 156:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 157:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StandbyPower(uint8 state) 
 158:Generated_Source\PSoC5/Clock_1.c **** {
 172              		.loc 1 158 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.LVL2:
 159:Generated_Source\PSoC5/Clock_1.c ****     if(state == 0u)
 178              		.loc 1 159 0
 179 0000 28B9     		cbnz	r0, .L14
 160:Generated_Source\PSoC5/Clock_1.c ****     {
 161:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY &= (uint8)(~Clock_1_CLKSTBY_MASK);
 180              		.loc 1 161 0
 181 0002 064A     		ldr	r2, .L16
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 7


 182 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 0006 03F0FD03 		and	r3, r3, #253
 184 000a 1370     		strb	r3, [r2]
 185 000c 7047     		bx	lr
 186              	.L14:
 162:Generated_Source\PSoC5/Clock_1.c ****     }
 163:Generated_Source\PSoC5/Clock_1.c ****     else
 164:Generated_Source\PSoC5/Clock_1.c ****     {
 165:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY |= Clock_1_CLKSTBY_MASK;
 187              		.loc 1 165 0
 188 000e 034A     		ldr	r2, .L16
 189 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 190 0012 43F00203 		orr	r3, r3, #2
 191 0016 1370     		strb	r3, [r2]
 192 0018 7047     		bx	lr
 193              	.L17:
 194 001a 00BF     		.align	2
 195              	.L16:
 196 001c B2430040 		.word	1073759154
 197              		.cfi_endproc
 198              	.LFE3:
 199              		.size	Clock_1_StandbyPower, .-Clock_1_StandbyPower
 200              		.section	.text.Clock_1_SetDividerRegister,"ax",%progbits
 201              		.align	2
 202              		.global	Clock_1_SetDividerRegister
 203              		.thumb
 204              		.thumb_func
 205              		.type	Clock_1_SetDividerRegister, %function
 206              	Clock_1_SetDividerRegister:
 207              	.LFB4:
 166:Generated_Source\PSoC5/Clock_1.c ****     }
 167:Generated_Source\PSoC5/Clock_1.c **** }
 168:Generated_Source\PSoC5/Clock_1.c **** 
 169:Generated_Source\PSoC5/Clock_1.c **** 
 170:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 171:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetDividerRegister
 172:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 173:Generated_Source\PSoC5/Clock_1.c **** *
 174:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 175:Generated_Source\PSoC5/Clock_1.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:Generated_Source\PSoC5/Clock_1.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:Generated_Source\PSoC5/Clock_1.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:Generated_Source\PSoC5/Clock_1.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:Generated_Source\PSoC5/Clock_1.c **** *
 180:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 181:Generated_Source\PSoC5/Clock_1.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:Generated_Source\PSoC5/Clock_1.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:Generated_Source\PSoC5/Clock_1.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:Generated_Source\PSoC5/Clock_1.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:Generated_Source\PSoC5/Clock_1.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:Generated_Source\PSoC5/Clock_1.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:Generated_Source\PSoC5/Clock_1.c **** *   cycle.
 188:Generated_Source\PSoC5/Clock_1.c **** *
 189:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 190:Generated_Source\PSoC5/Clock_1.c **** *  None
 191:Generated_Source\PSoC5/Clock_1.c **** *
 192:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 8


 193:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:Generated_Source\PSoC5/Clock_1.c ****                                 
 195:Generated_Source\PSoC5/Clock_1.c **** {
 208              		.loc 1 195 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              	.LVL3:
 214 0000 70B4     		push	{r4, r5, r6}
 215              		.cfi_def_cfa_offset 12
 216              		.cfi_offset 4, -12
 217              		.cfi_offset 5, -8
 218              		.cfi_offset 6, -4
 219              	.LBB7:
 220              	.LBB8:
 196:Generated_Source\PSoC5/Clock_1.c ****     uint8 enabled;
 197:Generated_Source\PSoC5/Clock_1.c **** 
 198:Generated_Source\PSoC5/Clock_1.c ****     uint8 currSrc = Clock_1_GetSourceRegister();
 199:Generated_Source\PSoC5/Clock_1.c ****     uint16 oldDivider = Clock_1_GetDividerRegister();
 200:Generated_Source\PSoC5/Clock_1.c **** 
 201:Generated_Source\PSoC5/Clock_1.c ****     if (clkDivider != oldDivider)
 202:Generated_Source\PSoC5/Clock_1.c ****     {
 203:Generated_Source\PSoC5/Clock_1.c ****         enabled = Clock_1_CLKEN & Clock_1_CLKEN_MASK;
 204:Generated_Source\PSoC5/Clock_1.c **** 
 205:Generated_Source\PSoC5/Clock_1.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:Generated_Source\PSoC5/Clock_1.c ****         {
 207:Generated_Source\PSoC5/Clock_1.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:Generated_Source\PSoC5/Clock_1.c ****             if (oldDivider == 0u)
 209:Generated_Source\PSoC5/Clock_1.c ****             {
 210:Generated_Source\PSoC5/Clock_1.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:Generated_Source\PSoC5/Clock_1.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:Generated_Source\PSoC5/Clock_1.c ****                 /* divider is ignored while SSS is set.                                     */
 213:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 214:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:Generated_Source\PSoC5/Clock_1.c ****             }
 216:Generated_Source\PSoC5/Clock_1.c ****             else
 217:Generated_Source\PSoC5/Clock_1.c ****             {
 218:Generated_Source\PSoC5/Clock_1.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:Generated_Source\PSoC5/Clock_1.c ****                 /* it without bothering with the shadow load.                               */
 220:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC |= CYCLK_SSS;
 221:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 222:Generated_Source\PSoC5/Clock_1.c ****             }
 223:Generated_Source\PSoC5/Clock_1.c ****         }
 224:Generated_Source\PSoC5/Clock_1.c ****         else
 225:Generated_Source\PSoC5/Clock_1.c ****         {
 226:Generated_Source\PSoC5/Clock_1.c **** 			
 227:Generated_Source\PSoC5/Clock_1.c ****             if (enabled != 0u)
 228:Generated_Source\PSoC5/Clock_1.c ****             {
 229:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = 0x00u;
 230:Generated_Source\PSoC5/Clock_1.c **** 
 231:Generated_Source\PSoC5/Clock_1.c ****                 /* Clear all the mask bits except ours. */
 232:Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 233:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 234:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = 0x00u;
 235:Generated_Source\PSoC5/Clock_1.c **** #else
 236:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 9


 237:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = 0x00u;
 238:Generated_Source\PSoC5/Clock_1.c **** #endif /* Clock_1__CFG3 */
 239:Generated_Source\PSoC5/Clock_1.c ****                 /* Clear mask of bus clock. */
 240:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:Generated_Source\PSoC5/Clock_1.c **** 
 242:Generated_Source\PSoC5/Clock_1.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:Generated_Source\PSoC5/Clock_1.c ****                 if (((Clock_1_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:Generated_Source\PSoC5/Clock_1.c ****                 {
 245:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 246:Generated_Source\PSoC5/Clock_1.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:Generated_Source\PSoC5/Clock_1.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:Generated_Source\PSoC5/Clock_1.c **** 
 249:Generated_Source\PSoC5/Clock_1.c ****                     /* Wait for clock to be disabled */
 250:Generated_Source\PSoC5/Clock_1.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:Generated_Source\PSoC5/Clock_1.c **** 
 253:Generated_Source\PSoC5/Clock_1.c ****                     Clock_1_CLKEN &= (uint8)(~Clock_1_CLKEN_MASK);
 254:Generated_Source\PSoC5/Clock_1.c **** 
 255:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 256:Generated_Source\PSoC5/Clock_1.c ****                     /* Clear the disable bit */
 257:Generated_Source\PSoC5/Clock_1.c ****                     CLK_DIST_LD = 0x00u;
 258:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:Generated_Source\PSoC5/Clock_1.c ****                 }
 260:Generated_Source\PSoC5/Clock_1.c ****             }
 261:Generated_Source\PSoC5/Clock_1.c **** 
 262:Generated_Source\PSoC5/Clock_1.c ****             /* Load divide value. */
 263:Generated_Source\PSoC5/Clock_1.c ****             if ((Clock_1_CLKEN & Clock_1_CLKEN_MASK) != 0u)
 264:Generated_Source\PSoC5/Clock_1.c ****             {
 265:Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:Generated_Source\PSoC5/Clock_1.c **** 
 268:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:Generated_Source\PSoC5/Clock_1.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:Generated_Source\PSoC5/Clock_1.c ****             }
 271:Generated_Source\PSoC5/Clock_1.c ****             else
 272:Generated_Source\PSoC5/Clock_1.c ****             {
 273:Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is disabled, set the divider directly */
 274:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 275:Generated_Source\PSoC5/Clock_1.c **** 				Clock_1_CLKEN |= enabled;
 276:Generated_Source\PSoC5/Clock_1.c ****             }
 277:Generated_Source\PSoC5/Clock_1.c ****         }
 278:Generated_Source\PSoC5/Clock_1.c ****     }
 279:Generated_Source\PSoC5/Clock_1.c **** }
 280:Generated_Source\PSoC5/Clock_1.c **** 
 281:Generated_Source\PSoC5/Clock_1.c **** 
 282:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 283:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetDividerRegister
 284:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 285:Generated_Source\PSoC5/Clock_1.c **** *
 286:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 287:Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock divider register value.
 288:Generated_Source\PSoC5/Clock_1.c **** *
 289:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 290:Generated_Source\PSoC5/Clock_1.c **** *  None
 291:Generated_Source\PSoC5/Clock_1.c **** *
 292:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 293:Generated_Source\PSoC5/Clock_1.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 10


 294:Generated_Source\PSoC5/Clock_1.c **** *  divide by 2, the return value will be 1.
 295:Generated_Source\PSoC5/Clock_1.c **** *
 296:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/Clock_1.c **** uint16 Clock_1_GetDividerRegister(void) 
 298:Generated_Source\PSoC5/Clock_1.c **** {
 299:Generated_Source\PSoC5/Clock_1.c ****     return CY_GET_REG16(Clock_1_DIV_PTR);
 300:Generated_Source\PSoC5/Clock_1.c **** }
 301:Generated_Source\PSoC5/Clock_1.c **** 
 302:Generated_Source\PSoC5/Clock_1.c **** 
 303:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetModeRegister
 305:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 306:Generated_Source\PSoC5/Clock_1.c **** *
 307:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 308:Generated_Source\PSoC5/Clock_1.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:Generated_Source\PSoC5/Clock_1.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:Generated_Source\PSoC5/Clock_1.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 312:Generated_Source\PSoC5/Clock_1.c **** *
 313:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 314:Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 318:Generated_Source\PSoC5/Clock_1.c **** *                 value.
 319:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 321:Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
 322:Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 323:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 325:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:Generated_Source\PSoC5/Clock_1.c **** *
 328:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 329:Generated_Source\PSoC5/Clock_1.c **** *  None
 330:Generated_Source\PSoC5/Clock_1.c **** *
 331:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 332:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetModeRegister(uint8 modeBitMask) 
 333:Generated_Source\PSoC5/Clock_1.c **** {
 334:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC |= modeBitMask & (uint8)Clock_1_MODE_MASK;
 335:Generated_Source\PSoC5/Clock_1.c **** }
 336:Generated_Source\PSoC5/Clock_1.c **** 
 337:Generated_Source\PSoC5/Clock_1.c **** 
 338:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_ClearModeRegister
 340:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 341:Generated_Source\PSoC5/Clock_1.c **** *
 342:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 343:Generated_Source\PSoC5/Clock_1.c **** *  Clears flags that control the operating mode of the clock. This function
 344:Generated_Source\PSoC5/Clock_1.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:Generated_Source\PSoC5/Clock_1.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 347:Generated_Source\PSoC5/Clock_1.c **** *
 348:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 349:Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 11


 351:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 353:Generated_Source\PSoC5/Clock_1.c **** *                 value.
 354:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 356:Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
 357:Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 358:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 360:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:Generated_Source\PSoC5/Clock_1.c **** *
 363:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 364:Generated_Source\PSoC5/Clock_1.c **** *  None
 365:Generated_Source\PSoC5/Clock_1.c **** *
 366:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_ClearModeRegister(uint8 modeBitMask) 
 368:Generated_Source\PSoC5/Clock_1.c **** {
 369:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_1_MODE_MASK));
 370:Generated_Source\PSoC5/Clock_1.c **** }
 371:Generated_Source\PSoC5/Clock_1.c **** 
 372:Generated_Source\PSoC5/Clock_1.c **** 
 373:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetModeRegister
 375:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 376:Generated_Source\PSoC5/Clock_1.c **** *
 377:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 378:Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock mode register value.
 379:Generated_Source\PSoC5/Clock_1.c **** *
 380:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 381:Generated_Source\PSoC5/Clock_1.c **** *  None
 382:Generated_Source\PSoC5/Clock_1.c **** *
 383:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 384:Generated_Source\PSoC5/Clock_1.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:Generated_Source\PSoC5/Clock_1.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:Generated_Source\PSoC5/Clock_1.c **** *
 387:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetModeRegister(void) 
 389:Generated_Source\PSoC5/Clock_1.c **** {
 390:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & (uint8)(Clock_1_MODE_MASK);
 391:Generated_Source\PSoC5/Clock_1.c **** }
 392:Generated_Source\PSoC5/Clock_1.c **** 
 393:Generated_Source\PSoC5/Clock_1.c **** 
 394:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetSourceRegister
 396:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 397:Generated_Source\PSoC5/Clock_1.c **** *
 398:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 399:Generated_Source\PSoC5/Clock_1.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:Generated_Source\PSoC5/Clock_1.c **** *  changing the source. The old and new clock sources must be running.
 401:Generated_Source\PSoC5/Clock_1.c **** *
 402:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 403:Generated_Source\PSoC5/Clock_1.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:Generated_Source\PSoC5/Clock_1.c **** *   following input sources:
 405:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_IMO
 407:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALM
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 12


 408:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_ILO
 409:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_PLL
 410:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALK
 411:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details on clock sources.
 414:Generated_Source\PSoC5/Clock_1.c **** *
 415:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 416:Generated_Source\PSoC5/Clock_1.c **** *  None
 417:Generated_Source\PSoC5/Clock_1.c **** *
 418:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetSourceRegister(uint8 clkSource) 
 420:Generated_Source\PSoC5/Clock_1.c **** {
 421:Generated_Source\PSoC5/Clock_1.c ****     uint16 currDiv = Clock_1_GetDividerRegister();
 422:Generated_Source\PSoC5/Clock_1.c ****     uint8 oldSrc = Clock_1_GetSourceRegister();
 423:Generated_Source\PSoC5/Clock_1.c **** 
 424:Generated_Source\PSoC5/Clock_1.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:Generated_Source\PSoC5/Clock_1.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:Generated_Source\PSoC5/Clock_1.c ****     {
 427:Generated_Source\PSoC5/Clock_1.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:Generated_Source\PSoC5/Clock_1.c ****         /* then set the source so we are consistent.                                */
 429:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC |= CYCLK_SSS;
 430:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 431:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 432:Generated_Source\PSoC5/Clock_1.c ****     }
 433:Generated_Source\PSoC5/Clock_1.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:Generated_Source\PSoC5/Clock_1.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:Generated_Source\PSoC5/Clock_1.c ****     {
 436:Generated_Source\PSoC5/Clock_1.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:Generated_Source\PSoC5/Clock_1.c ****         /* lock when we clear SSS.                                                  */
 438:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 439:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 440:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:Generated_Source\PSoC5/Clock_1.c ****     }
 442:Generated_Source\PSoC5/Clock_1.c ****     else
 443:Generated_Source\PSoC5/Clock_1.c ****     {
 444:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 445:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 446:Generated_Source\PSoC5/Clock_1.c ****     }
 447:Generated_Source\PSoC5/Clock_1.c **** }
 448:Generated_Source\PSoC5/Clock_1.c **** 
 449:Generated_Source\PSoC5/Clock_1.c **** 
 450:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetSourceRegister
 452:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 453:Generated_Source\PSoC5/Clock_1.c **** *
 454:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 455:Generated_Source\PSoC5/Clock_1.c **** *  Gets the input source of the clock.
 456:Generated_Source\PSoC5/Clock_1.c **** *
 457:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 458:Generated_Source\PSoC5/Clock_1.c **** *  None
 459:Generated_Source\PSoC5/Clock_1.c **** *
 460:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 461:Generated_Source\PSoC5/Clock_1.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:Generated_Source\PSoC5/Clock_1.c **** *
 463:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 464:Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetSourceRegister(void) 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 13


 465:Generated_Source\PSoC5/Clock_1.c **** {
 466:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & Clock_1_SRC_SEL_MSK;
 221              		.loc 1 466 0
 222 0002 334B     		ldr	r3, .L33
 223 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224 0006 03F00704 		and	r4, r3, #7
 225              	.LBE8:
 226              	.LBE7:
 227              	.LBB9:
 228              	.LBB10:
 299:Generated_Source\PSoC5/Clock_1.c **** }
 229              		.loc 1 299 0
 230 000a 324B     		ldr	r3, .L33+4
 231 000c 1B88     		ldrh	r3, [r3]
 232 000e 9BB2     		uxth	r3, r3
 233              	.LBE10:
 234              	.LBE9:
 201:Generated_Source\PSoC5/Clock_1.c ****     {
 235              		.loc 1 201 0
 236 0010 9842     		cmp	r0, r3
 237 0012 5BD0     		beq	.L18
 203:Generated_Source\PSoC5/Clock_1.c **** 
 238              		.loc 1 203 0
 239 0014 304A     		ldr	r2, .L33+8
 240 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 241 0018 D2B2     		uxtb	r2, r2
 242              	.LVL4:
 205:Generated_Source\PSoC5/Clock_1.c ****         {
 243              		.loc 1 205 0
 244 001a 9CB9     		cbnz	r4, .L20
 205:Generated_Source\PSoC5/Clock_1.c ****         {
 245              		.loc 1 205 0 is_stmt 0 discriminator 1
 246 001c 0BB1     		cbz	r3, .L21
 205:Generated_Source\PSoC5/Clock_1.c ****         {
 247              		.loc 1 205 0 discriminator 2
 248 001e 40B1     		cbz	r0, .L22
 249 0020 10E0     		b	.L20
 250              	.L21:
 213:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC &= (uint8)(~CYCLK_SSS);
 251              		.loc 1 213 0 is_stmt 1
 252 0022 2C4B     		ldr	r3, .L33+4
 253 0024 1880     		strh	r0, [r3]	@ movhi
 214:Generated_Source\PSoC5/Clock_1.c ****             }
 254              		.loc 1 214 0
 255 0026 2A4A     		ldr	r2, .L33
 256              	.LVL5:
 257 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 258 002a 03F0BF03 		and	r3, r3, #191
 259 002e 1370     		strb	r3, [r2]
 260 0030 4CE0     		b	.L18
 261              	.LVL6:
 262              	.L22:
 220:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 263              		.loc 1 220 0
 264 0032 274A     		ldr	r2, .L33
 265              	.LVL7:
 266 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 14


 267 0036 43F04003 		orr	r3, r3, #64
 268 003a 1370     		strb	r3, [r2]
 221:Generated_Source\PSoC5/Clock_1.c ****             }
 269              		.loc 1 221 0
 270 003c 0022     		movs	r2, #0
 271 003e 254B     		ldr	r3, .L33+4
 272 0040 1A80     		strh	r2, [r3]	@ movhi
 273 0042 43E0     		b	.L18
 274              	.LVL8:
 275              	.L20:
 203:Generated_Source\PSoC5/Clock_1.c **** 
 276              		.loc 1 203 0
 277 0044 02F00202 		and	r2, r2, #2
 278              	.LVL9:
 227:Generated_Source\PSoC5/Clock_1.c ****             {
 279              		.loc 1 227 0
 280 0048 02F0FF04 		and	r4, r2, #255
 281 004c 22B3     		cbz	r2, .L23
 229:Generated_Source\PSoC5/Clock_1.c **** 
 282              		.loc 1 229 0
 283 004e 0022     		movs	r2, #0
 284 0050 224D     		ldr	r5, .L33+12
 285 0052 2A70     		strb	r2, [r5]
 236:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = 0x00u;
 286              		.loc 1 236 0
 287 0054 0226     		movs	r6, #2
 288 0056 0F35     		adds	r5, r5, #15
 289 0058 2E70     		strb	r6, [r5]
 237:Generated_Source\PSoC5/Clock_1.c **** #endif /* Clock_1__CFG3 */
 290              		.loc 1 237 0
 291 005a 0435     		adds	r5, r5, #4
 292 005c 2A70     		strb	r2, [r5]
 240:Generated_Source\PSoC5/Clock_1.c **** 
 293              		.loc 1 240 0
 294 005e 0C3D     		subs	r5, r5, #12
 295 0060 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 296 0062 02F07F02 		and	r2, r2, #127
 297 0066 2A70     		strb	r2, [r5]
 243:Generated_Source\PSoC5/Clock_1.c ****                 {
 298              		.loc 1 243 0
 299 0068 194A     		ldr	r2, .L33
 300 006a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 301 006c 12F0080F 		tst	r2, #8
 302 0070 00D0     		beq	.L24
 243:Generated_Source\PSoC5/Clock_1.c ****                 {
 303              		.loc 1 243 0 is_stmt 0 discriminator 1
 304 0072 88B9     		cbnz	r0, .L23
 305              	.L24:
 246:Generated_Source\PSoC5/Clock_1.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 306              		.loc 1 246 0 is_stmt 1
 307 0074 1A4A     		ldr	r2, .L33+16
 308 0076 1380     		strh	r3, [r2]	@ movhi
 247:Generated_Source\PSoC5/Clock_1.c **** 
 309              		.loc 1 247 0
 310 0078 0722     		movs	r2, #7
 311 007a 184B     		ldr	r3, .L33+12
 312 007c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 15


 250:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 313              		.loc 1 250 0
 314 007e 1A46     		mov	r2, r3
 315              	.L25:
 250:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 316              		.loc 1 250 0 is_stmt 0 discriminator 1
 317 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 318 0082 13F0010F 		tst	r3, #1
 319 0086 FBD1     		bne	.L25
 253:Generated_Source\PSoC5/Clock_1.c **** 
 320              		.loc 1 253 0 is_stmt 1
 321 0088 134A     		ldr	r2, .L33+8
 322 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 323 008c 03F0FD03 		and	r3, r3, #253
 324 0090 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 325              		.loc 1 257 0
 326 0092 0022     		movs	r2, #0
 327 0094 114B     		ldr	r3, .L33+12
 328 0096 1A70     		strb	r2, [r3]
 329              	.L23:
 263:Generated_Source\PSoC5/Clock_1.c ****             {
 330              		.loc 1 263 0
 331 0098 0F4B     		ldr	r3, .L33+8
 332 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 333 009c 13F0020F 		tst	r3, #2
 334 00a0 0DD0     		beq	.L26
 266:Generated_Source\PSoC5/Clock_1.c **** 
 335              		.loc 1 266 0
 336 00a2 0F4B     		ldr	r3, .L33+16
 337 00a4 1880     		strh	r0, [r3]	@ movhi
 268:Generated_Source\PSoC5/Clock_1.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 338              		.loc 1 268 0
 339 00a6 0029     		cmp	r1, #0
 340 00a8 14BF     		ite	ne
 341 00aa 0322     		movne	r2, #3
 342 00ac 0122     		moveq	r2, #1
 343 00ae 013B     		subs	r3, r3, #1
 344 00b0 1A70     		strb	r2, [r3]
 269:Generated_Source\PSoC5/Clock_1.c ****             }
 345              		.loc 1 269 0
 346 00b2 1A46     		mov	r2, r3
 347              	.L28:
 269:Generated_Source\PSoC5/Clock_1.c ****             }
 348              		.loc 1 269 0 is_stmt 0 discriminator 1
 349 00b4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 350 00b6 13F0010F 		tst	r3, #1
 351 00ba FBD1     		bne	.L28
 352 00bc 06E0     		b	.L18
 353              	.L26:
 274:Generated_Source\PSoC5/Clock_1.c **** 				Clock_1_CLKEN |= enabled;
 354              		.loc 1 274 0 is_stmt 1
 355 00be 054B     		ldr	r3, .L33+4
 356 00c0 1880     		strh	r0, [r3]	@ movhi
 275:Generated_Source\PSoC5/Clock_1.c ****             }
 357              		.loc 1 275 0
 358 00c2 03F21E33 		addw	r3, r3, #798
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 16


 359 00c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 360 00c8 1443     		orrs	r4, r4, r2
 361 00ca 1C70     		strb	r4, [r3]
 362              	.L18:
 279:Generated_Source\PSoC5/Clock_1.c **** 
 363              		.loc 1 279 0
 364 00cc 70BC     		pop	{r4, r5, r6}
 365              		.cfi_restore 6
 366              		.cfi_restore 5
 367              		.cfi_restore 4
 368              		.cfi_def_cfa_offset 0
 369 00ce 7047     		bx	lr
 370              	.L34:
 371              		.align	2
 372              	.L33:
 373 00d0 86400040 		.word	1073758342
 374 00d4 84400040 		.word	1073758340
 375 00d8 A2430040 		.word	1073759138
 376 00dc 01400040 		.word	1073758209
 377 00e0 02400040 		.word	1073758210
 378              		.cfi_endproc
 379              	.LFE4:
 380              		.size	Clock_1_SetDividerRegister, .-Clock_1_SetDividerRegister
 381              		.section	.text.Clock_1_GetDividerRegister,"ax",%progbits
 382              		.align	2
 383              		.global	Clock_1_GetDividerRegister
 384              		.thumb
 385              		.thumb_func
 386              		.type	Clock_1_GetDividerRegister, %function
 387              	Clock_1_GetDividerRegister:
 388              	.LFB5:
 298:Generated_Source\PSoC5/Clock_1.c ****     return CY_GET_REG16(Clock_1_DIV_PTR);
 389              		.loc 1 298 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 299:Generated_Source\PSoC5/Clock_1.c **** }
 394              		.loc 1 299 0
 395 0000 014B     		ldr	r3, .L36
 396 0002 1888     		ldrh	r0, [r3]
 300:Generated_Source\PSoC5/Clock_1.c **** 
 397              		.loc 1 300 0
 398 0004 80B2     		uxth	r0, r0
 399 0006 7047     		bx	lr
 400              	.L37:
 401              		.align	2
 402              	.L36:
 403 0008 84400040 		.word	1073758340
 404              		.cfi_endproc
 405              	.LFE5:
 406              		.size	Clock_1_GetDividerRegister, .-Clock_1_GetDividerRegister
 407              		.section	.text.Clock_1_SetModeRegister,"ax",%progbits
 408              		.align	2
 409              		.global	Clock_1_SetModeRegister
 410              		.thumb
 411              		.thumb_func
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 17


 412              		.type	Clock_1_SetModeRegister, %function
 413              	Clock_1_SetModeRegister:
 414              	.LFB6:
 333:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC |= modeBitMask & (uint8)Clock_1_MODE_MASK;
 415              		.loc 1 333 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420              	.LVL10:
 334:Generated_Source\PSoC5/Clock_1.c **** }
 421              		.loc 1 334 0
 422 0000 034B     		ldr	r3, .L39
 423 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 424 0004 00F0F800 		and	r0, r0, #248
 425              	.LVL11:
 426 0008 1043     		orrs	r0, r0, r2
 427 000a 1870     		strb	r0, [r3]
 428 000c 7047     		bx	lr
 429              	.L40:
 430 000e 00BF     		.align	2
 431              	.L39:
 432 0010 86400040 		.word	1073758342
 433              		.cfi_endproc
 434              	.LFE6:
 435              		.size	Clock_1_SetModeRegister, .-Clock_1_SetModeRegister
 436              		.section	.text.Clock_1_ClearModeRegister,"ax",%progbits
 437              		.align	2
 438              		.global	Clock_1_ClearModeRegister
 439              		.thumb
 440              		.thumb_func
 441              		.type	Clock_1_ClearModeRegister, %function
 442              	Clock_1_ClearModeRegister:
 443              	.LFB7:
 368:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_1_MODE_MASK));
 444              		.loc 1 368 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449              	.LVL12:
 369:Generated_Source\PSoC5/Clock_1.c **** }
 450              		.loc 1 369 0
 451 0000 034B     		ldr	r3, .L42
 452 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 453 0004 C043     		mvns	r0, r0
 454              	.LVL13:
 455 0006 40F00700 		orr	r0, r0, #7
 456 000a 1040     		ands	r0, r0, r2
 457 000c 1870     		strb	r0, [r3]
 458 000e 7047     		bx	lr
 459              	.L43:
 460              		.align	2
 461              	.L42:
 462 0010 86400040 		.word	1073758342
 463              		.cfi_endproc
 464              	.LFE7:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 18


 465              		.size	Clock_1_ClearModeRegister, .-Clock_1_ClearModeRegister
 466              		.section	.text.Clock_1_GetModeRegister,"ax",%progbits
 467              		.align	2
 468              		.global	Clock_1_GetModeRegister
 469              		.thumb
 470              		.thumb_func
 471              		.type	Clock_1_GetModeRegister, %function
 472              	Clock_1_GetModeRegister:
 473              	.LFB8:
 389:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & (uint8)(Clock_1_MODE_MASK);
 474              		.loc 1 389 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 390:Generated_Source\PSoC5/Clock_1.c **** }
 479              		.loc 1 390 0
 480 0000 024B     		ldr	r3, .L45
 481 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:Generated_Source\PSoC5/Clock_1.c **** 
 482              		.loc 1 391 0
 483 0004 00F0F800 		and	r0, r0, #248
 484 0008 7047     		bx	lr
 485              	.L46:
 486 000a 00BF     		.align	2
 487              	.L45:
 488 000c 86400040 		.word	1073758342
 489              		.cfi_endproc
 490              	.LFE8:
 491              		.size	Clock_1_GetModeRegister, .-Clock_1_GetModeRegister
 492              		.section	.text.Clock_1_SetSourceRegister,"ax",%progbits
 493              		.align	2
 494              		.global	Clock_1_SetSourceRegister
 495              		.thumb
 496              		.thumb_func
 497              		.type	Clock_1_SetSourceRegister, %function
 498              	Clock_1_SetSourceRegister:
 499              	.LFB9:
 420:Generated_Source\PSoC5/Clock_1.c ****     uint16 currDiv = Clock_1_GetDividerRegister();
 500              		.loc 1 420 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 505              	.LVL14:
 506              	.LBB15:
 507              	.LBB16:
 299:Generated_Source\PSoC5/Clock_1.c **** }
 508              		.loc 1 299 0
 509 0000 134B     		ldr	r3, .L51
 510 0002 1B88     		ldrh	r3, [r3]
 511 0004 9BB2     		uxth	r3, r3
 512              	.LBE16:
 513              	.LBE15:
 514              	.LBB17:
 515              	.LBB18:
 516              		.loc 1 466 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 19


 517 0006 134A     		ldr	r2, .L51+4
 518 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 519              	.LBE18:
 520              	.LBE17:
 424:Generated_Source\PSoC5/Clock_1.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 521              		.loc 1 424 0
 522 000a 12F0070F 		tst	r2, #7
 523 000e 0BD0     		beq	.L48
 424:Generated_Source\PSoC5/Clock_1.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 524              		.loc 1 424 0 is_stmt 0 discriminator 1
 525 0010 B8B9     		cbnz	r0, .L49
 425:Generated_Source\PSoC5/Clock_1.c ****     {
 526              		.loc 1 425 0 is_stmt 1
 527 0012 B3B9     		cbnz	r3, .L49
 429:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 528              		.loc 1 429 0
 529 0014 0F4B     		ldr	r3, .L51+4
 530 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 531 0018 42F04002 		orr	r2, r2, #64
 532 001c 1A70     		strb	r2, [r3]
 431:Generated_Source\PSoC5/Clock_1.c ****     }
 533              		.loc 1 431 0
 534 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 430:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 535              		.loc 1 430 0
 536 0020 02F0F802 		and	r2, r2, #248
 537 0024 1A70     		strb	r2, [r3]
 538 0026 7047     		bx	lr
 539              	.L48:
 433:Generated_Source\PSoC5/Clock_1.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 540              		.loc 1 433 0 discriminator 1
 541 0028 58B1     		cbz	r0, .L49
 434:Generated_Source\PSoC5/Clock_1.c ****     {
 542              		.loc 1 434 0
 543 002a 53B9     		cbnz	r3, .L49
 439:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC &= (uint8)(~CYCLK_SSS);
 544              		.loc 1 439 0
 545 002c 094B     		ldr	r3, .L51+4
 546 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 438:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 547              		.loc 1 438 0
 548 0030 02F0F802 		and	r2, r2, #248
 549 0034 1043     		orrs	r0, r0, r2
 550              	.LVL15:
 551 0036 1870     		strb	r0, [r3]
 440:Generated_Source\PSoC5/Clock_1.c ****     }
 552              		.loc 1 440 0
 553 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 554 003a 02F0BF02 		and	r2, r2, #191
 555 003e 1A70     		strb	r2, [r3]
 556 0040 7047     		bx	lr
 557              	.LVL16:
 558              	.L49:
 445:Generated_Source\PSoC5/Clock_1.c ****     }
 559              		.loc 1 445 0
 560 0042 044A     		ldr	r2, .L51+4
 561 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 20


 444:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 562              		.loc 1 444 0
 563 0046 03F0F803 		and	r3, r3, #248
 564 004a 1843     		orrs	r0, r0, r3
 565              	.LVL17:
 566 004c 1070     		strb	r0, [r2]
 567 004e 7047     		bx	lr
 568              	.L52:
 569              		.align	2
 570              	.L51:
 571 0050 84400040 		.word	1073758340
 572 0054 86400040 		.word	1073758342
 573              		.cfi_endproc
 574              	.LFE9:
 575              		.size	Clock_1_SetSourceRegister, .-Clock_1_SetSourceRegister
 576              		.section	.text.Clock_1_GetSourceRegister,"ax",%progbits
 577              		.align	2
 578              		.global	Clock_1_GetSourceRegister
 579              		.thumb
 580              		.thumb_func
 581              		.type	Clock_1_GetSourceRegister, %function
 582              	Clock_1_GetSourceRegister:
 583              	.LFB10:
 465:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & Clock_1_SRC_SEL_MSK;
 584              		.loc 1 465 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              		.loc 1 466 0
 590 0000 024B     		ldr	r3, .L54
 591 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:Generated_Source\PSoC5/Clock_1.c **** }
 592              		.loc 1 467 0
 593 0004 00F00700 		and	r0, r0, #7
 594 0008 7047     		bx	lr
 595              	.L55:
 596 000a 00BF     		.align	2
 597              	.L54:
 598 000c 86400040 		.word	1073758342
 599              		.cfi_endproc
 600              	.LFE10:
 601              		.size	Clock_1_GetSourceRegister, .-Clock_1_GetSourceRegister
 602              		.text
 603              	.Letext0:
 604              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 605              		.section	.debug_info,"",%progbits
 606              	.Ldebug_info0:
 607 0000 99020000 		.4byte	0x299
 608 0004 0400     		.2byte	0x4
 609 0006 00000000 		.4byte	.Ldebug_abbrev0
 610 000a 04       		.byte	0x4
 611 000b 01       		.uleb128 0x1
 612 000c A4010000 		.4byte	.LASF36
 613 0010 0C       		.byte	0xc
 614 0011 9A000000 		.4byte	.LASF37
 615 0015 92020000 		.4byte	.LASF38
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 21


 616 0019 00000000 		.4byte	.Ldebug_ranges0+0
 617 001d 00000000 		.4byte	0
 618 0021 00000000 		.4byte	.Ldebug_line0
 619 0025 02       		.uleb128 0x2
 620 0026 01       		.byte	0x1
 621 0027 06       		.byte	0x6
 622 0028 24010000 		.4byte	.LASF0
 623 002c 02       		.uleb128 0x2
 624 002d 01       		.byte	0x1
 625 002e 08       		.byte	0x8
 626 002f 0A010000 		.4byte	.LASF1
 627 0033 02       		.uleb128 0x2
 628 0034 02       		.byte	0x2
 629 0035 05       		.byte	0x5
 630 0036 1C000000 		.4byte	.LASF2
 631 003a 02       		.uleb128 0x2
 632 003b 02       		.byte	0x2
 633 003c 07       		.byte	0x7
 634 003d 6F010000 		.4byte	.LASF3
 635 0041 02       		.uleb128 0x2
 636 0042 04       		.byte	0x4
 637 0043 05       		.byte	0x5
 638 0044 E1000000 		.4byte	.LASF4
 639 0048 02       		.uleb128 0x2
 640 0049 04       		.byte	0x4
 641 004a 07       		.byte	0x7
 642 004b 37020000 		.4byte	.LASF5
 643 004f 02       		.uleb128 0x2
 644 0050 08       		.byte	0x8
 645 0051 05       		.byte	0x5
 646 0052 C1000000 		.4byte	.LASF6
 647 0056 02       		.uleb128 0x2
 648 0057 08       		.byte	0x8
 649 0058 07       		.byte	0x7
 650 0059 30010000 		.4byte	.LASF7
 651 005d 03       		.uleb128 0x3
 652 005e 04       		.byte	0x4
 653 005f 05       		.byte	0x5
 654 0060 696E7400 		.ascii	"int\000"
 655 0064 02       		.uleb128 0x2
 656 0065 04       		.byte	0x4
 657 0066 07       		.byte	0x7
 658 0067 47010000 		.4byte	.LASF8
 659 006b 04       		.uleb128 0x4
 660 006c 89000000 		.4byte	.LASF9
 661 0070 02       		.byte	0x2
 662 0071 E401     		.2byte	0x1e4
 663 0073 2C000000 		.4byte	0x2c
 664 0077 04       		.uleb128 0x4
 665 0078 73000000 		.4byte	.LASF10
 666 007c 02       		.byte	0x2
 667 007d E501     		.2byte	0x1e5
 668 007f 3A000000 		.4byte	0x3a
 669 0083 02       		.uleb128 0x2
 670 0084 04       		.byte	0x4
 671 0085 04       		.byte	0x4
 672 0086 BB000000 		.4byte	.LASF11
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 22


 673 008a 02       		.uleb128 0x2
 674 008b 08       		.byte	0x8
 675 008c 04       		.byte	0x4
 676 008d 6E020000 		.4byte	.LASF12
 677 0091 02       		.uleb128 0x2
 678 0092 01       		.byte	0x1
 679 0093 08       		.byte	0x8
 680 0094 82010000 		.4byte	.LASF13
 681 0098 04       		.uleb128 0x4
 682 0099 32020000 		.4byte	.LASF14
 683 009d 02       		.byte	0x2
 684 009e 8E02     		.2byte	0x28e
 685 00a0 A4000000 		.4byte	0xa4
 686 00a4 05       		.uleb128 0x5
 687 00a5 6B000000 		.4byte	0x6b
 688 00a9 04       		.uleb128 0x4
 689 00aa 16000000 		.4byte	.LASF15
 690 00ae 02       		.byte	0x2
 691 00af 8F02     		.2byte	0x28f
 692 00b1 B5000000 		.4byte	0xb5
 693 00b5 05       		.uleb128 0x5
 694 00b6 77000000 		.4byte	0x77
 695 00ba 06       		.uleb128 0x6
 696 00bb 00000000 		.4byte	.LASF16
 697 00bf 01       		.byte	0x1
 698 00c0 2D       		.byte	0x2d
 699 00c1 00000000 		.4byte	.LFB0
 700 00c5 1C000000 		.4byte	.LFE0-.LFB0
 701 00c9 01       		.uleb128 0x1
 702 00ca 9C       		.byte	0x9c
 703 00cb 06       		.uleb128 0x6
 704 00cc 49020000 		.4byte	.LASF17
 705 00d0 01       		.byte	0x1
 706 00d1 47       		.byte	0x47
 707 00d2 00000000 		.4byte	.LFB1
 708 00d6 1C000000 		.4byte	.LFE1-.LFB1
 709 00da 01       		.uleb128 0x1
 710 00db 9C       		.byte	0x9c
 711 00dc 07       		.uleb128 0x7
 712 00dd CF000000 		.4byte	.LASF18
 713 00e1 01       		.byte	0x1
 714 00e2 64       		.byte	0x64
 715 00e3 00000000 		.4byte	.LFB2
 716 00e7 6C000000 		.4byte	.LFE2-.LFB2
 717 00eb 01       		.uleb128 0x1
 718 00ec 9C       		.byte	0x9c
 719 00ed 0B010000 		.4byte	0x10b
 720 00f1 08       		.uleb128 0x8
 721 00f2 0A000000 		.4byte	.LBB2
 722 00f6 62000000 		.4byte	.LBE2-.LBB2
 723 00fa 09       		.uleb128 0x9
 724 00fb 99010000 		.4byte	.LASF26
 725 00ff 01       		.byte	0x1
 726 0100 69       		.byte	0x69
 727 0101 77000000 		.4byte	0x77
 728 0105 00000000 		.4byte	.LLST0
 729 0109 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 23


 730 010a 00       		.byte	0
 731 010b 07       		.uleb128 0x7
 732 010c 75020000 		.4byte	.LASF19
 733 0110 01       		.byte	0x1
 734 0111 9D       		.byte	0x9d
 735 0112 00000000 		.4byte	.LFB3
 736 0116 20000000 		.4byte	.LFE3-.LFB3
 737 011a 01       		.uleb128 0x1
 738 011b 9C       		.byte	0x9c
 739 011c 2E010000 		.4byte	0x12e
 740 0120 0A       		.uleb128 0xa
 741 0121 EA000000 		.4byte	.LASF23
 742 0125 01       		.byte	0x1
 743 0126 9D       		.byte	0x9d
 744 0127 6B000000 		.4byte	0x6b
 745 012b 01       		.uleb128 0x1
 746 012c 50       		.byte	0x50
 747 012d 00       		.byte	0
 748 012e 0B       		.uleb128 0xb
 749 012f 40000000 		.4byte	.LASF20
 750 0133 01       		.byte	0x1
 751 0134 2901     		.2byte	0x129
 752 0136 77000000 		.4byte	0x77
 753 013a 01       		.byte	0x1
 754 013b 0B       		.uleb128 0xb
 755 013c DE020000 		.4byte	.LASF21
 756 0140 01       		.byte	0x1
 757 0141 D001     		.2byte	0x1d0
 758 0143 6B000000 		.4byte	0x6b
 759 0147 01       		.byte	0x1
 760 0148 07       		.uleb128 0x7
 761 0149 54010000 		.4byte	.LASF22
 762 014d 01       		.byte	0x1
 763 014e C1       		.byte	0xc1
 764 014f 00000000 		.4byte	.LFB4
 765 0153 E4000000 		.4byte	.LFE4-.LFB4
 766 0157 01       		.uleb128 0x1
 767 0158 9C       		.byte	0x9c
 768 0159 BB010000 		.4byte	0x1bb
 769 015d 0A       		.uleb128 0xa
 770 015e 8F000000 		.4byte	.LASF24
 771 0162 01       		.byte	0x1
 772 0163 C1       		.byte	0xc1
 773 0164 77000000 		.4byte	0x77
 774 0168 01       		.uleb128 0x1
 775 0169 50       		.byte	0x50
 776 016a 0A       		.uleb128 0xa
 777 016b 7A000000 		.4byte	.LASF25
 778 016f 01       		.byte	0x1
 779 0170 C1       		.byte	0xc1
 780 0171 6B000000 		.4byte	0x6b
 781 0175 01       		.uleb128 0x1
 782 0176 51       		.byte	0x51
 783 0177 09       		.uleb128 0x9
 784 0178 8A020000 		.4byte	.LASF27
 785 017c 01       		.byte	0x1
 786 017d C4       		.byte	0xc4
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 24


 787 017e 6B000000 		.4byte	0x6b
 788 0182 13000000 		.4byte	.LLST1
 789 0186 0C       		.uleb128 0xc
 790 0187 91010000 		.4byte	.LASF28
 791 018b 01       		.byte	0x1
 792 018c C6       		.byte	0xc6
 793 018d 6B000000 		.4byte	0x6b
 794 0191 0C       		.uleb128 0xc
 795 0192 99010000 		.4byte	.LASF26
 796 0196 01       		.byte	0x1
 797 0197 C7       		.byte	0xc7
 798 0198 77000000 		.4byte	0x77
 799 019c 0D       		.uleb128 0xd
 800 019d 3B010000 		.4byte	0x13b
 801 01a1 02000000 		.4byte	.LBB7
 802 01a5 08000000 		.4byte	.LBE7-.LBB7
 803 01a9 01       		.byte	0x1
 804 01aa C6       		.byte	0xc6
 805 01ab 0D       		.uleb128 0xd
 806 01ac 2E010000 		.4byte	0x12e
 807 01b0 0A000000 		.4byte	.LBB9
 808 01b4 06000000 		.4byte	.LBE9-.LBB9
 809 01b8 01       		.byte	0x1
 810 01b9 C7       		.byte	0xc7
 811 01ba 00       		.byte	0
 812 01bb 0E       		.uleb128 0xe
 813 01bc 2E010000 		.4byte	0x12e
 814 01c0 00000000 		.4byte	.LFB5
 815 01c4 0C000000 		.4byte	.LFE5-.LFB5
 816 01c8 01       		.uleb128 0x1
 817 01c9 9C       		.byte	0x9c
 818 01ca 0F       		.uleb128 0xf
 819 01cb 56020000 		.4byte	.LASF29
 820 01cf 01       		.byte	0x1
 821 01d0 4C01     		.2byte	0x14c
 822 01d2 00000000 		.4byte	.LFB6
 823 01d6 14000000 		.4byte	.LFE6-.LFB6
 824 01da 01       		.uleb128 0x1
 825 01db 9C       		.byte	0x9c
 826 01dc F1010000 		.4byte	0x1f1
 827 01e0 10       		.uleb128 0x10
 828 01e1 18010000 		.4byte	.LASF30
 829 01e5 01       		.byte	0x1
 830 01e6 4C01     		.2byte	0x14c
 831 01e8 6B000000 		.4byte	0x6b
 832 01ec 48000000 		.4byte	.LLST2
 833 01f0 00       		.byte	0
 834 01f1 0F       		.uleb128 0xf
 835 01f2 26000000 		.4byte	.LASF31
 836 01f6 01       		.byte	0x1
 837 01f7 6F01     		.2byte	0x16f
 838 01f9 00000000 		.4byte	.LFB7
 839 01fd 14000000 		.4byte	.LFE7-.LFB7
 840 0201 01       		.uleb128 0x1
 841 0202 9C       		.byte	0x9c
 842 0203 18020000 		.4byte	0x218
 843 0207 10       		.uleb128 0x10
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 25


 844 0208 18010000 		.4byte	.LASF30
 845 020c 01       		.byte	0x1
 846 020d 6F01     		.2byte	0x16f
 847 020f 6B000000 		.4byte	0x6b
 848 0213 69000000 		.4byte	.LLST3
 849 0217 00       		.byte	0
 850 0218 11       		.uleb128 0x11
 851 0219 5B000000 		.4byte	.LASF39
 852 021d 01       		.byte	0x1
 853 021e 8401     		.2byte	0x184
 854 0220 6B000000 		.4byte	0x6b
 855 0224 00000000 		.4byte	.LFB8
 856 0228 10000000 		.4byte	.LFE8-.LFB8
 857 022c 01       		.uleb128 0x1
 858 022d 9C       		.byte	0x9c
 859 022e 0F       		.uleb128 0xf
 860 022f F0000000 		.4byte	.LASF32
 861 0233 01       		.byte	0x1
 862 0234 A301     		.2byte	0x1a3
 863 0236 00000000 		.4byte	.LFB9
 864 023a 58000000 		.4byte	.LFE9-.LFB9
 865 023e 01       		.uleb128 0x1
 866 023f 9C       		.byte	0x9c
 867 0240 8D020000 		.4byte	0x28d
 868 0244 10       		.uleb128 0x10
 869 0245 87010000 		.4byte	.LASF33
 870 0249 01       		.byte	0x1
 871 024a A301     		.2byte	0x1a3
 872 024c 6B000000 		.4byte	0x6b
 873 0250 8A000000 		.4byte	.LLST4
 874 0254 12       		.uleb128 0x12
 875 0255 0E000000 		.4byte	.LASF34
 876 0259 01       		.byte	0x1
 877 025a A501     		.2byte	0x1a5
 878 025c 77000000 		.4byte	0x77
 879 0260 12       		.uleb128 0x12
 880 0261 82000000 		.4byte	.LASF35
 881 0265 01       		.byte	0x1
 882 0266 A601     		.2byte	0x1a6
 883 0268 6B000000 		.4byte	0x6b
 884 026c 13       		.uleb128 0x13
 885 026d 2E010000 		.4byte	0x12e
 886 0271 00000000 		.4byte	.LBB15
 887 0275 06000000 		.4byte	.LBE15-.LBB15
 888 0279 01       		.byte	0x1
 889 027a A501     		.2byte	0x1a5
 890 027c 13       		.uleb128 0x13
 891 027d 3B010000 		.4byte	0x13b
 892 0281 06000000 		.4byte	.LBB17
 893 0285 04000000 		.4byte	.LBE17-.LBB17
 894 0289 01       		.byte	0x1
 895 028a A601     		.2byte	0x1a6
 896 028c 00       		.byte	0
 897 028d 0E       		.uleb128 0xe
 898 028e 3B010000 		.4byte	0x13b
 899 0292 00000000 		.4byte	.LFB10
 900 0296 10000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 26


 901 029a 01       		.uleb128 0x1
 902 029b 9C       		.byte	0x9c
 903 029c 00       		.byte	0
 904              		.section	.debug_abbrev,"",%progbits
 905              	.Ldebug_abbrev0:
 906 0000 01       		.uleb128 0x1
 907 0001 11       		.uleb128 0x11
 908 0002 01       		.byte	0x1
 909 0003 25       		.uleb128 0x25
 910 0004 0E       		.uleb128 0xe
 911 0005 13       		.uleb128 0x13
 912 0006 0B       		.uleb128 0xb
 913 0007 03       		.uleb128 0x3
 914 0008 0E       		.uleb128 0xe
 915 0009 1B       		.uleb128 0x1b
 916 000a 0E       		.uleb128 0xe
 917 000b 55       		.uleb128 0x55
 918 000c 17       		.uleb128 0x17
 919 000d 11       		.uleb128 0x11
 920 000e 01       		.uleb128 0x1
 921 000f 10       		.uleb128 0x10
 922 0010 17       		.uleb128 0x17
 923 0011 00       		.byte	0
 924 0012 00       		.byte	0
 925 0013 02       		.uleb128 0x2
 926 0014 24       		.uleb128 0x24
 927 0015 00       		.byte	0
 928 0016 0B       		.uleb128 0xb
 929 0017 0B       		.uleb128 0xb
 930 0018 3E       		.uleb128 0x3e
 931 0019 0B       		.uleb128 0xb
 932 001a 03       		.uleb128 0x3
 933 001b 0E       		.uleb128 0xe
 934 001c 00       		.byte	0
 935 001d 00       		.byte	0
 936 001e 03       		.uleb128 0x3
 937 001f 24       		.uleb128 0x24
 938 0020 00       		.byte	0
 939 0021 0B       		.uleb128 0xb
 940 0022 0B       		.uleb128 0xb
 941 0023 3E       		.uleb128 0x3e
 942 0024 0B       		.uleb128 0xb
 943 0025 03       		.uleb128 0x3
 944 0026 08       		.uleb128 0x8
 945 0027 00       		.byte	0
 946 0028 00       		.byte	0
 947 0029 04       		.uleb128 0x4
 948 002a 16       		.uleb128 0x16
 949 002b 00       		.byte	0
 950 002c 03       		.uleb128 0x3
 951 002d 0E       		.uleb128 0xe
 952 002e 3A       		.uleb128 0x3a
 953 002f 0B       		.uleb128 0xb
 954 0030 3B       		.uleb128 0x3b
 955 0031 05       		.uleb128 0x5
 956 0032 49       		.uleb128 0x49
 957 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 27


 958 0034 00       		.byte	0
 959 0035 00       		.byte	0
 960 0036 05       		.uleb128 0x5
 961 0037 35       		.uleb128 0x35
 962 0038 00       		.byte	0
 963 0039 49       		.uleb128 0x49
 964 003a 13       		.uleb128 0x13
 965 003b 00       		.byte	0
 966 003c 00       		.byte	0
 967 003d 06       		.uleb128 0x6
 968 003e 2E       		.uleb128 0x2e
 969 003f 00       		.byte	0
 970 0040 3F       		.uleb128 0x3f
 971 0041 19       		.uleb128 0x19
 972 0042 03       		.uleb128 0x3
 973 0043 0E       		.uleb128 0xe
 974 0044 3A       		.uleb128 0x3a
 975 0045 0B       		.uleb128 0xb
 976 0046 3B       		.uleb128 0x3b
 977 0047 0B       		.uleb128 0xb
 978 0048 27       		.uleb128 0x27
 979 0049 19       		.uleb128 0x19
 980 004a 11       		.uleb128 0x11
 981 004b 01       		.uleb128 0x1
 982 004c 12       		.uleb128 0x12
 983 004d 06       		.uleb128 0x6
 984 004e 40       		.uleb128 0x40
 985 004f 18       		.uleb128 0x18
 986 0050 9742     		.uleb128 0x2117
 987 0052 19       		.uleb128 0x19
 988 0053 00       		.byte	0
 989 0054 00       		.byte	0
 990 0055 07       		.uleb128 0x7
 991 0056 2E       		.uleb128 0x2e
 992 0057 01       		.byte	0x1
 993 0058 3F       		.uleb128 0x3f
 994 0059 19       		.uleb128 0x19
 995 005a 03       		.uleb128 0x3
 996 005b 0E       		.uleb128 0xe
 997 005c 3A       		.uleb128 0x3a
 998 005d 0B       		.uleb128 0xb
 999 005e 3B       		.uleb128 0x3b
 1000 005f 0B       		.uleb128 0xb
 1001 0060 27       		.uleb128 0x27
 1002 0061 19       		.uleb128 0x19
 1003 0062 11       		.uleb128 0x11
 1004 0063 01       		.uleb128 0x1
 1005 0064 12       		.uleb128 0x12
 1006 0065 06       		.uleb128 0x6
 1007 0066 40       		.uleb128 0x40
 1008 0067 18       		.uleb128 0x18
 1009 0068 9742     		.uleb128 0x2117
 1010 006a 19       		.uleb128 0x19
 1011 006b 01       		.uleb128 0x1
 1012 006c 13       		.uleb128 0x13
 1013 006d 00       		.byte	0
 1014 006e 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 28


 1015 006f 08       		.uleb128 0x8
 1016 0070 0B       		.uleb128 0xb
 1017 0071 01       		.byte	0x1
 1018 0072 11       		.uleb128 0x11
 1019 0073 01       		.uleb128 0x1
 1020 0074 12       		.uleb128 0x12
 1021 0075 06       		.uleb128 0x6
 1022 0076 00       		.byte	0
 1023 0077 00       		.byte	0
 1024 0078 09       		.uleb128 0x9
 1025 0079 34       		.uleb128 0x34
 1026 007a 00       		.byte	0
 1027 007b 03       		.uleb128 0x3
 1028 007c 0E       		.uleb128 0xe
 1029 007d 3A       		.uleb128 0x3a
 1030 007e 0B       		.uleb128 0xb
 1031 007f 3B       		.uleb128 0x3b
 1032 0080 0B       		.uleb128 0xb
 1033 0081 49       		.uleb128 0x49
 1034 0082 13       		.uleb128 0x13
 1035 0083 02       		.uleb128 0x2
 1036 0084 17       		.uleb128 0x17
 1037 0085 00       		.byte	0
 1038 0086 00       		.byte	0
 1039 0087 0A       		.uleb128 0xa
 1040 0088 05       		.uleb128 0x5
 1041 0089 00       		.byte	0
 1042 008a 03       		.uleb128 0x3
 1043 008b 0E       		.uleb128 0xe
 1044 008c 3A       		.uleb128 0x3a
 1045 008d 0B       		.uleb128 0xb
 1046 008e 3B       		.uleb128 0x3b
 1047 008f 0B       		.uleb128 0xb
 1048 0090 49       		.uleb128 0x49
 1049 0091 13       		.uleb128 0x13
 1050 0092 02       		.uleb128 0x2
 1051 0093 18       		.uleb128 0x18
 1052 0094 00       		.byte	0
 1053 0095 00       		.byte	0
 1054 0096 0B       		.uleb128 0xb
 1055 0097 2E       		.uleb128 0x2e
 1056 0098 00       		.byte	0
 1057 0099 3F       		.uleb128 0x3f
 1058 009a 19       		.uleb128 0x19
 1059 009b 03       		.uleb128 0x3
 1060 009c 0E       		.uleb128 0xe
 1061 009d 3A       		.uleb128 0x3a
 1062 009e 0B       		.uleb128 0xb
 1063 009f 3B       		.uleb128 0x3b
 1064 00a0 05       		.uleb128 0x5
 1065 00a1 27       		.uleb128 0x27
 1066 00a2 19       		.uleb128 0x19
 1067 00a3 49       		.uleb128 0x49
 1068 00a4 13       		.uleb128 0x13
 1069 00a5 20       		.uleb128 0x20
 1070 00a6 0B       		.uleb128 0xb
 1071 00a7 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 29


 1072 00a8 00       		.byte	0
 1073 00a9 0C       		.uleb128 0xc
 1074 00aa 34       		.uleb128 0x34
 1075 00ab 00       		.byte	0
 1076 00ac 03       		.uleb128 0x3
 1077 00ad 0E       		.uleb128 0xe
 1078 00ae 3A       		.uleb128 0x3a
 1079 00af 0B       		.uleb128 0xb
 1080 00b0 3B       		.uleb128 0x3b
 1081 00b1 0B       		.uleb128 0xb
 1082 00b2 49       		.uleb128 0x49
 1083 00b3 13       		.uleb128 0x13
 1084 00b4 00       		.byte	0
 1085 00b5 00       		.byte	0
 1086 00b6 0D       		.uleb128 0xd
 1087 00b7 1D       		.uleb128 0x1d
 1088 00b8 00       		.byte	0
 1089 00b9 31       		.uleb128 0x31
 1090 00ba 13       		.uleb128 0x13
 1091 00bb 11       		.uleb128 0x11
 1092 00bc 01       		.uleb128 0x1
 1093 00bd 12       		.uleb128 0x12
 1094 00be 06       		.uleb128 0x6
 1095 00bf 58       		.uleb128 0x58
 1096 00c0 0B       		.uleb128 0xb
 1097 00c1 59       		.uleb128 0x59
 1098 00c2 0B       		.uleb128 0xb
 1099 00c3 00       		.byte	0
 1100 00c4 00       		.byte	0
 1101 00c5 0E       		.uleb128 0xe
 1102 00c6 2E       		.uleb128 0x2e
 1103 00c7 00       		.byte	0
 1104 00c8 31       		.uleb128 0x31
 1105 00c9 13       		.uleb128 0x13
 1106 00ca 11       		.uleb128 0x11
 1107 00cb 01       		.uleb128 0x1
 1108 00cc 12       		.uleb128 0x12
 1109 00cd 06       		.uleb128 0x6
 1110 00ce 40       		.uleb128 0x40
 1111 00cf 18       		.uleb128 0x18
 1112 00d0 9742     		.uleb128 0x2117
 1113 00d2 19       		.uleb128 0x19
 1114 00d3 00       		.byte	0
 1115 00d4 00       		.byte	0
 1116 00d5 0F       		.uleb128 0xf
 1117 00d6 2E       		.uleb128 0x2e
 1118 00d7 01       		.byte	0x1
 1119 00d8 3F       		.uleb128 0x3f
 1120 00d9 19       		.uleb128 0x19
 1121 00da 03       		.uleb128 0x3
 1122 00db 0E       		.uleb128 0xe
 1123 00dc 3A       		.uleb128 0x3a
 1124 00dd 0B       		.uleb128 0xb
 1125 00de 3B       		.uleb128 0x3b
 1126 00df 05       		.uleb128 0x5
 1127 00e0 27       		.uleb128 0x27
 1128 00e1 19       		.uleb128 0x19
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 30


 1129 00e2 11       		.uleb128 0x11
 1130 00e3 01       		.uleb128 0x1
 1131 00e4 12       		.uleb128 0x12
 1132 00e5 06       		.uleb128 0x6
 1133 00e6 40       		.uleb128 0x40
 1134 00e7 18       		.uleb128 0x18
 1135 00e8 9742     		.uleb128 0x2117
 1136 00ea 19       		.uleb128 0x19
 1137 00eb 01       		.uleb128 0x1
 1138 00ec 13       		.uleb128 0x13
 1139 00ed 00       		.byte	0
 1140 00ee 00       		.byte	0
 1141 00ef 10       		.uleb128 0x10
 1142 00f0 05       		.uleb128 0x5
 1143 00f1 00       		.byte	0
 1144 00f2 03       		.uleb128 0x3
 1145 00f3 0E       		.uleb128 0xe
 1146 00f4 3A       		.uleb128 0x3a
 1147 00f5 0B       		.uleb128 0xb
 1148 00f6 3B       		.uleb128 0x3b
 1149 00f7 05       		.uleb128 0x5
 1150 00f8 49       		.uleb128 0x49
 1151 00f9 13       		.uleb128 0x13
 1152 00fa 02       		.uleb128 0x2
 1153 00fb 17       		.uleb128 0x17
 1154 00fc 00       		.byte	0
 1155 00fd 00       		.byte	0
 1156 00fe 11       		.uleb128 0x11
 1157 00ff 2E       		.uleb128 0x2e
 1158 0100 00       		.byte	0
 1159 0101 3F       		.uleb128 0x3f
 1160 0102 19       		.uleb128 0x19
 1161 0103 03       		.uleb128 0x3
 1162 0104 0E       		.uleb128 0xe
 1163 0105 3A       		.uleb128 0x3a
 1164 0106 0B       		.uleb128 0xb
 1165 0107 3B       		.uleb128 0x3b
 1166 0108 05       		.uleb128 0x5
 1167 0109 27       		.uleb128 0x27
 1168 010a 19       		.uleb128 0x19
 1169 010b 49       		.uleb128 0x49
 1170 010c 13       		.uleb128 0x13
 1171 010d 11       		.uleb128 0x11
 1172 010e 01       		.uleb128 0x1
 1173 010f 12       		.uleb128 0x12
 1174 0110 06       		.uleb128 0x6
 1175 0111 40       		.uleb128 0x40
 1176 0112 18       		.uleb128 0x18
 1177 0113 9742     		.uleb128 0x2117
 1178 0115 19       		.uleb128 0x19
 1179 0116 00       		.byte	0
 1180 0117 00       		.byte	0
 1181 0118 12       		.uleb128 0x12
 1182 0119 34       		.uleb128 0x34
 1183 011a 00       		.byte	0
 1184 011b 03       		.uleb128 0x3
 1185 011c 0E       		.uleb128 0xe
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 31


 1186 011d 3A       		.uleb128 0x3a
 1187 011e 0B       		.uleb128 0xb
 1188 011f 3B       		.uleb128 0x3b
 1189 0120 05       		.uleb128 0x5
 1190 0121 49       		.uleb128 0x49
 1191 0122 13       		.uleb128 0x13
 1192 0123 00       		.byte	0
 1193 0124 00       		.byte	0
 1194 0125 13       		.uleb128 0x13
 1195 0126 1D       		.uleb128 0x1d
 1196 0127 00       		.byte	0
 1197 0128 31       		.uleb128 0x31
 1198 0129 13       		.uleb128 0x13
 1199 012a 11       		.uleb128 0x11
 1200 012b 01       		.uleb128 0x1
 1201 012c 12       		.uleb128 0x12
 1202 012d 06       		.uleb128 0x6
 1203 012e 58       		.uleb128 0x58
 1204 012f 0B       		.uleb128 0xb
 1205 0130 59       		.uleb128 0x59
 1206 0131 05       		.uleb128 0x5
 1207 0132 00       		.byte	0
 1208 0133 00       		.byte	0
 1209 0134 00       		.byte	0
 1210              		.section	.debug_loc,"",%progbits
 1211              	.Ldebug_loc0:
 1212              	.LLST0:
 1213 0000 2A000000 		.4byte	.LVL0
 1214 0004 58000000 		.4byte	.LVL1
 1215 0008 0100     		.2byte	0x1
 1216 000a 51       		.byte	0x51
 1217 000b 00000000 		.4byte	0
 1218 000f 00000000 		.4byte	0
 1219              	.LLST1:
 1220 0013 1A000000 		.4byte	.LVL4
 1221 0017 28000000 		.4byte	.LVL5
 1222 001b 0500     		.2byte	0x5
 1223 001d 72       		.byte	0x72
 1224 001e 00       		.sleb128 0
 1225 001f 32       		.byte	0x32
 1226 0020 1A       		.byte	0x1a
 1227 0021 9F       		.byte	0x9f
 1228 0022 32000000 		.4byte	.LVL6
 1229 0026 34000000 		.4byte	.LVL7
 1230 002a 0500     		.2byte	0x5
 1231 002c 72       		.byte	0x72
 1232 002d 00       		.sleb128 0
 1233 002e 32       		.byte	0x32
 1234 002f 1A       		.byte	0x1a
 1235 0030 9F       		.byte	0x9f
 1236 0031 44000000 		.4byte	.LVL8
 1237 0035 48000000 		.4byte	.LVL9
 1238 0039 0500     		.2byte	0x5
 1239 003b 72       		.byte	0x72
 1240 003c 00       		.sleb128 0
 1241 003d 32       		.byte	0x32
 1242 003e 1A       		.byte	0x1a
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 32


 1243 003f 9F       		.byte	0x9f
 1244 0040 00000000 		.4byte	0
 1245 0044 00000000 		.4byte	0
 1246              	.LLST2:
 1247 0048 00000000 		.4byte	.LVL10
 1248 004c 08000000 		.4byte	.LVL11
 1249 0050 0100     		.2byte	0x1
 1250 0052 50       		.byte	0x50
 1251 0053 08000000 		.4byte	.LVL11
 1252 0057 14000000 		.4byte	.LFE6
 1253 005b 0400     		.2byte	0x4
 1254 005d F3       		.byte	0xf3
 1255 005e 01       		.uleb128 0x1
 1256 005f 50       		.byte	0x50
 1257 0060 9F       		.byte	0x9f
 1258 0061 00000000 		.4byte	0
 1259 0065 00000000 		.4byte	0
 1260              	.LLST3:
 1261 0069 00000000 		.4byte	.LVL12
 1262 006d 06000000 		.4byte	.LVL13
 1263 0071 0100     		.2byte	0x1
 1264 0073 50       		.byte	0x50
 1265 0074 06000000 		.4byte	.LVL13
 1266 0078 14000000 		.4byte	.LFE7
 1267 007c 0400     		.2byte	0x4
 1268 007e F3       		.byte	0xf3
 1269 007f 01       		.uleb128 0x1
 1270 0080 50       		.byte	0x50
 1271 0081 9F       		.byte	0x9f
 1272 0082 00000000 		.4byte	0
 1273 0086 00000000 		.4byte	0
 1274              	.LLST4:
 1275 008a 00000000 		.4byte	.LVL14
 1276 008e 36000000 		.4byte	.LVL15
 1277 0092 0100     		.2byte	0x1
 1278 0094 50       		.byte	0x50
 1279 0095 36000000 		.4byte	.LVL15
 1280 0099 42000000 		.4byte	.LVL16
 1281 009d 0400     		.2byte	0x4
 1282 009f F3       		.byte	0xf3
 1283 00a0 01       		.uleb128 0x1
 1284 00a1 50       		.byte	0x50
 1285 00a2 9F       		.byte	0x9f
 1286 00a3 42000000 		.4byte	.LVL16
 1287 00a7 4C000000 		.4byte	.LVL17
 1288 00ab 0100     		.2byte	0x1
 1289 00ad 50       		.byte	0x50
 1290 00ae 4C000000 		.4byte	.LVL17
 1291 00b2 58000000 		.4byte	.LFE9
 1292 00b6 0400     		.2byte	0x4
 1293 00b8 F3       		.byte	0xf3
 1294 00b9 01       		.uleb128 0x1
 1295 00ba 50       		.byte	0x50
 1296 00bb 9F       		.byte	0x9f
 1297 00bc 00000000 		.4byte	0
 1298 00c0 00000000 		.4byte	0
 1299              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 33


 1300 0000 6C000000 		.4byte	0x6c
 1301 0004 0200     		.2byte	0x2
 1302 0006 00000000 		.4byte	.Ldebug_info0
 1303 000a 04       		.byte	0x4
 1304 000b 00       		.byte	0
 1305 000c 0000     		.2byte	0
 1306 000e 0000     		.2byte	0
 1307 0010 00000000 		.4byte	.LFB0
 1308 0014 1C000000 		.4byte	.LFE0-.LFB0
 1309 0018 00000000 		.4byte	.LFB1
 1310 001c 1C000000 		.4byte	.LFE1-.LFB1
 1311 0020 00000000 		.4byte	.LFB2
 1312 0024 6C000000 		.4byte	.LFE2-.LFB2
 1313 0028 00000000 		.4byte	.LFB3
 1314 002c 20000000 		.4byte	.LFE3-.LFB3
 1315 0030 00000000 		.4byte	.LFB4
 1316 0034 E4000000 		.4byte	.LFE4-.LFB4
 1317 0038 00000000 		.4byte	.LFB5
 1318 003c 0C000000 		.4byte	.LFE5-.LFB5
 1319 0040 00000000 		.4byte	.LFB6
 1320 0044 14000000 		.4byte	.LFE6-.LFB6
 1321 0048 00000000 		.4byte	.LFB7
 1322 004c 14000000 		.4byte	.LFE7-.LFB7
 1323 0050 00000000 		.4byte	.LFB8
 1324 0054 10000000 		.4byte	.LFE8-.LFB8
 1325 0058 00000000 		.4byte	.LFB9
 1326 005c 58000000 		.4byte	.LFE9-.LFB9
 1327 0060 00000000 		.4byte	.LFB10
 1328 0064 10000000 		.4byte	.LFE10-.LFB10
 1329 0068 00000000 		.4byte	0
 1330 006c 00000000 		.4byte	0
 1331              		.section	.debug_ranges,"",%progbits
 1332              	.Ldebug_ranges0:
 1333 0000 00000000 		.4byte	.LFB0
 1334 0004 1C000000 		.4byte	.LFE0
 1335 0008 00000000 		.4byte	.LFB1
 1336 000c 1C000000 		.4byte	.LFE1
 1337 0010 00000000 		.4byte	.LFB2
 1338 0014 6C000000 		.4byte	.LFE2
 1339 0018 00000000 		.4byte	.LFB3
 1340 001c 20000000 		.4byte	.LFE3
 1341 0020 00000000 		.4byte	.LFB4
 1342 0024 E4000000 		.4byte	.LFE4
 1343 0028 00000000 		.4byte	.LFB5
 1344 002c 0C000000 		.4byte	.LFE5
 1345 0030 00000000 		.4byte	.LFB6
 1346 0034 14000000 		.4byte	.LFE6
 1347 0038 00000000 		.4byte	.LFB7
 1348 003c 14000000 		.4byte	.LFE7
 1349 0040 00000000 		.4byte	.LFB8
 1350 0044 10000000 		.4byte	.LFE8
 1351 0048 00000000 		.4byte	.LFB9
 1352 004c 58000000 		.4byte	.LFE9
 1353 0050 00000000 		.4byte	.LFB10
 1354 0054 10000000 		.4byte	.LFE10
 1355 0058 00000000 		.4byte	0
 1356 005c 00000000 		.4byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 34


 1357              		.section	.debug_line,"",%progbits
 1358              	.Ldebug_line0:
 1359 0000 84010000 		.section	.debug_str,"MS",%progbits,1
 1359      02004400 
 1359      00000201 
 1359      FB0E0D00 
 1359      01010101 
 1360              	.LASF16:
 1361 0000 436C6F63 		.ascii	"Clock_1_Start\000"
 1361      6B5F315F 
 1361      53746172 
 1361      7400
 1362              	.LASF34:
 1363 000e 63757272 		.ascii	"currDiv\000"
 1363      44697600 
 1364              	.LASF15:
 1365 0016 72656731 		.ascii	"reg16\000"
 1365      3600
 1366              	.LASF2:
 1367 001c 73686F72 		.ascii	"short int\000"
 1367      7420696E 
 1367      7400
 1368              	.LASF31:
 1369 0026 436C6F63 		.ascii	"Clock_1_ClearModeRegister\000"
 1369      6B5F315F 
 1369      436C6561 
 1369      724D6F64 
 1369      65526567 
 1370              	.LASF20:
 1371 0040 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 1371      6B5F315F 
 1371      47657444 
 1371      69766964 
 1371      65725265 
 1372              	.LASF39:
 1373 005b 436C6F63 		.ascii	"Clock_1_GetModeRegister\000"
 1373      6B5F315F 
 1373      4765744D 
 1373      6F646552 
 1373      65676973 
 1374              	.LASF10:
 1375 0073 75696E74 		.ascii	"uint16\000"
 1375      313600
 1376              	.LASF25:
 1377 007a 72657374 		.ascii	"restart\000"
 1377      61727400 
 1378              	.LASF35:
 1379 0082 6F6C6453 		.ascii	"oldSrc\000"
 1379      726300
 1380              	.LASF9:
 1381 0089 75696E74 		.ascii	"uint8\000"
 1381      3800
 1382              	.LASF24:
 1383 008f 636C6B44 		.ascii	"clkDivider\000"
 1383      69766964 
 1383      657200
 1384              	.LASF37:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 35


 1385 009a 47656E65 		.ascii	"Generated_Source\\PSoC5\\Clock_1.c\000"
 1385      72617465 
 1385      645F536F 
 1385      75726365 
 1385      5C50536F 
 1386              	.LASF11:
 1387 00bb 666C6F61 		.ascii	"float\000"
 1387      7400
 1388              	.LASF6:
 1389 00c1 6C6F6E67 		.ascii	"long long int\000"
 1389      206C6F6E 
 1389      6720696E 
 1389      7400
 1390              	.LASF18:
 1391 00cf 436C6F63 		.ascii	"Clock_1_StopBlock\000"
 1391      6B5F315F 
 1391      53746F70 
 1391      426C6F63 
 1391      6B00
 1392              	.LASF4:
 1393 00e1 6C6F6E67 		.ascii	"long int\000"
 1393      20696E74 
 1393      00
 1394              	.LASF23:
 1395 00ea 73746174 		.ascii	"state\000"
 1395      6500
 1396              	.LASF32:
 1397 00f0 436C6F63 		.ascii	"Clock_1_SetSourceRegister\000"
 1397      6B5F315F 
 1397      53657453 
 1397      6F757263 
 1397      65526567 
 1398              	.LASF1:
 1399 010a 756E7369 		.ascii	"unsigned char\000"
 1399      676E6564 
 1399      20636861 
 1399      7200
 1400              	.LASF30:
 1401 0118 6D6F6465 		.ascii	"modeBitMask\000"
 1401      4269744D 
 1401      61736B00 
 1402              	.LASF0:
 1403 0124 7369676E 		.ascii	"signed char\000"
 1403      65642063 
 1403      68617200 
 1404              	.LASF7:
 1405 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 1405      206C6F6E 
 1405      6720756E 
 1405      7369676E 
 1405      65642069 
 1406              	.LASF8:
 1407 0147 756E7369 		.ascii	"unsigned int\000"
 1407      676E6564 
 1407      20696E74 
 1407      00
 1408              	.LASF22:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 36


 1409 0154 436C6F63 		.ascii	"Clock_1_SetDividerRegister\000"
 1409      6B5F315F 
 1409      53657444 
 1409      69766964 
 1409      65725265 
 1410              	.LASF3:
 1411 016f 73686F72 		.ascii	"short unsigned int\000"
 1411      7420756E 
 1411      7369676E 
 1411      65642069 
 1411      6E7400
 1412              	.LASF13:
 1413 0182 63686172 		.ascii	"char\000"
 1413      00
 1414              	.LASF33:
 1415 0187 636C6B53 		.ascii	"clkSource\000"
 1415      6F757263 
 1415      6500
 1416              	.LASF28:
 1417 0191 63757272 		.ascii	"currSrc\000"
 1417      53726300 
 1418              	.LASF26:
 1419 0199 6F6C6444 		.ascii	"oldDivider\000"
 1419      69766964 
 1419      657200
 1420              	.LASF36:
 1421 01a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1421      43313120 
 1421      352E342E 
 1421      31203230 
 1421      31363036 
 1422 01d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1422      20726576 
 1422      6973696F 
 1422      6E203233 
 1422      37373135 
 1423 020a 31202D66 		.ascii	"1 -ffunction-sections -ffat-lto-objects\000"
 1423      66756E63 
 1423      74696F6E 
 1423      2D736563 
 1423      74696F6E 
 1424              	.LASF14:
 1425 0232 72656738 		.ascii	"reg8\000"
 1425      00
 1426              	.LASF5:
 1427 0237 6C6F6E67 		.ascii	"long unsigned int\000"
 1427      20756E73 
 1427      69676E65 
 1427      6420696E 
 1427      7400
 1428              	.LASF17:
 1429 0249 436C6F63 		.ascii	"Clock_1_Stop\000"
 1429      6B5F315F 
 1429      53746F70 
 1429      00
 1430              	.LASF29:
 1431 0256 436C6F63 		.ascii	"Clock_1_SetModeRegister\000"
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccbQ85TP.s 			page 37


 1431      6B5F315F 
 1431      5365744D 
 1431      6F646552 
 1431      65676973 
 1432              	.LASF12:
 1433 026e 646F7562 		.ascii	"double\000"
 1433      6C6500
 1434              	.LASF19:
 1435 0275 436C6F63 		.ascii	"Clock_1_StandbyPower\000"
 1435      6B5F315F 
 1435      5374616E 
 1435      64627950 
 1435      6F776572 
 1436              	.LASF27:
 1437 028a 656E6162 		.ascii	"enabled\000"
 1437      6C656400 
 1438              	.LASF38:
 1439 0292 433A5C55 		.ascii	"C:\\Users\\ingan\\Documents\\PSoC Creator\\MegaDriv"
 1439      73657273 
 1439      5C696E67 
 1439      616E5C44 
 1439      6F63756D 
 1440 02c0 655F706C 		.ascii	"e_player\\VGMPlayer_v0.7.cydsn\000"
 1440      61796572 
 1440      5C56474D 
 1440      506C6179 
 1440      65725F76 
 1441              	.LASF21:
 1442 02de 436C6F63 		.ascii	"Clock_1_GetSourceRegister\000"
 1442      6B5F315F 
 1442      47657453 
 1442      6F757263 
 1442      65526567 
 1443              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
