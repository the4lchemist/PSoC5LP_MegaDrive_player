ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 2


  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 094B     		ldr	r3, .L3
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 084B     		ldr	r3, .L3+4
  42 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 000e 03F00303 		and	r3, r3, #3
  44 0012 9342     		cmp	r3, r2
  45 0014 04D0     		beq	.L2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 3


  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 0016 054A     		ldr	r2, .L3+4
  48 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001a 83F08003 		eor	r3, r3, #128
  50 001e D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0020 0122     		movs	r2, #1
  54 0022 024B     		ldr	r3, .L3+4
  55 0024 5A73     		strb	r2, [r3, #13]
  56 0026 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0028 0B600040 		.word	1073766411
  61 002c 00000000 		.word	USBUART_EP
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  65              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBUART_EP_2_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	USBUART_EP_2_ISR, %function
  71              	USBUART_EP_2_ISR:
  72              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 4


 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 08B5     		push	{r3, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
  81              		.loc 1 123 0
  82 0002 FFF7FEFF 		bl	USBUART_EP_2_ISR_EntryCallback
  83              	.LVL0:
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  84              		.loc 1 137 0
  85 0006 0222     		movs	r2, #2
  86 0008 094B     		ldr	r3, .L8
  87 000a 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 5


 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
  88              		.loc 1 148 0
  89 000c 0F3B     		subs	r3, r3, #15
  90 000e 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  91              		.loc 1 151 0
  92 0012 084B     		ldr	r3, .L8+4
  93 0014 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  94 0016 03F00303 		and	r3, r3, #3
  95 001a 012B     		cmp	r3, #1
  96 001c 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  97              		.loc 1 153 0
  98 001e 054A     		ldr	r2, .L8+4
  99 0020 D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
 100 0022 83F08003 		eor	r3, r3, #128
 101 0026 D376     		strb	r3, [r2, #27]
 102              	.L6:
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
 103              		.loc 1 162 0
 104 0028 0122     		movs	r2, #1
 105 002a 024B     		ldr	r3, .L8+4
 106 002c 5A76     		strb	r2, [r3, #25]
 107 002e 08BD     		pop	{r3, pc}
 108              	.L9:
 109              		.align	2
 110              	.L8:
 111 0030 0B600040 		.word	1073766411
 112 0034 00000000 		.word	USBUART_EP
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 116              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 117              		.align	2
 118              		.global	USBUART_EP_3_ISR
 119              		.thumb
 120              		.thumb_func
 121              		.type	USBUART_EP_3_ISR, %function
 122              	USBUART_EP_3_ISR:
 123              	.LFB2:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 6


 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 124              		.loc 1 202 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 08B5     		push	{r3, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 7


 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 132              		.loc 1 218 0
 133 0002 0422     		movs	r2, #4
 134 0004 0C4B     		ldr	r3, .L13
 135 0006 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 136              		.loc 1 229 0
 137 0008 0F3B     		subs	r3, r3, #15
 138 000a 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 139              		.loc 1 232 0
 140 000e 0B4B     		ldr	r3, .L13+4
 141 0010 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 142 0014 03F00303 		and	r3, r3, #3
 143 0018 012B     		cmp	r3, #1
 144 001a 06D0     		beq	.L11
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 145              		.loc 1 234 0
 146 001c 074A     		ldr	r2, .L13+4
 147 001e 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 148 0022 83F08003 		eor	r3, r3, #128
 149 0026 82F82730 		strb	r3, [r2, #39]
 150              	.L11:
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 151              		.loc 1 243 0
 152 002a 0122     		movs	r2, #1
 153 002c 034B     		ldr	r3, .L13+4
 154 002e 83F82520 		strb	r2, [r3, #37]
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 8


 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 155              		.loc 1 261 0
 156 0032 FFF7FEFF 		bl	USBUART_EP_3_ISR_ExitCallback
 157              	.LVL1:
 158 0036 08BD     		pop	{r3, pc}
 159              	.L14:
 160              		.align	2
 161              	.L13:
 162 0038 0B600040 		.word	1073766411
 163 003c 00000000 		.word	USBUART_EP
 164              		.cfi_endproc
 165              	.LFE2:
 166              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 167              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 168              		.align	2
 169              		.global	USBUART_SOF_ISR
 170              		.thumb
 171              		.thumb_func
 172              		.type	USBUART_SOF_ISR, %function
 173              	USBUART_SOF_ISR:
 174              	.LFB3:
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 9


 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 10


 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 11


 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 12


 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 13


 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 14


 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 15


 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 16


 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 175              		.loc 1 694 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE3:
 183              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 184 0002 00BF     		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 185              		.align	2
 186              		.global	USBUART_BUS_RESET_ISR
 187              		.thumb
 188              		.thumb_func
 189              		.type	USBUART_BUS_RESET_ISR, %function
 190              	USBUART_BUS_RESET_ISR:
 191              	.LFB4:
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 17


 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 192              		.loc 1 723 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		.loc 1 723 0
 197 0000 08B5     		push	{r3, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 201              		.loc 1 734 0
 202 0002 FFF7FEFF 		bl	USBUART_ReInitComponent
 203              	.LVL2:
 204 0006 08BD     		pop	{r3, pc}
 205              		.cfi_endproc
 206              	.LFE4:
 207              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 208              		.section	.text.USBUART_ARB_ISR,"ax",%progbits
 209              		.align	2
 210              		.global	USBUART_ARB_ISR
 211              		.thumb
 212              		.thumb_func
 213              		.type	USBUART_ARB_ISR, %function
 214              	USBUART_ARB_ISR:
 215              	.LFB5:
 735:Generated_Source\PSoC5/USBUART_episr.c **** 
 736:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBUART_episr.c **** }
 740:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ACTIVE) */
 741:Generated_Source\PSoC5/USBUART_episr.c **** 
 742:Generated_Source\PSoC5/USBUART_episr.c **** 
 743:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_LPM_ACTIVE)
 744:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************
 745:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_INTR_LPM_ISR
 746:Generated_Source\PSoC5/USBUART_episr.c **** ************************************************************************//**
 747:Generated_Source\PSoC5/USBUART_episr.c **** *
 748:Generated_Source\PSoC5/USBUART_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:Generated_Source\PSoC5/USBUART_episr.c **** *
 750:Generated_Source\PSoC5/USBUART_episr.c **** *
 751:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************************************************/
 752:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_LPM_ISR)
 753:Generated_Source\PSoC5/USBUART_episr.c **** {
 754:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_LPM_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 18


 755:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_LPM_ISR_EntryCallback();
 756:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_LPM_ISR_ENTRY_CALLBACK) */
 757:Generated_Source\PSoC5/USBUART_episr.c **** 
 758:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:Generated_Source\PSoC5/USBUART_episr.c **** 
 760:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 761:Generated_Source\PSoC5/USBUART_episr.c **** 
 762:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_LPM_INTR);
 763:Generated_Source\PSoC5/USBUART_episr.c **** 
 764:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:Generated_Source\PSoC5/USBUART_episr.c **** 
 766:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 767:Generated_Source\PSoC5/USBUART_episr.c **** 
 768:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_LPM_ISR_EXIT_CALLBACK
 769:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_LPM_ISR_ExitCallback();
 770:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_LPM_ISR_EXIT_CALLBACK) */
 771:Generated_Source\PSoC5/USBUART_episr.c **** }
 772:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_LPM_ACTIVE) */
 773:Generated_Source\PSoC5/USBUART_episr.c **** 
 774:Generated_Source\PSoC5/USBUART_episr.c **** 
 775:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 776:Generated_Source\PSoC5/USBUART_episr.c ****     /***************************************************************************
 777:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_ARB_ISR
 778:Generated_Source\PSoC5/USBUART_episr.c ****     ************************************************************************//**
 779:Generated_Source\PSoC5/USBUART_episr.c ****     *
 780:Generated_Source\PSoC5/USBUART_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:Generated_Source\PSoC5/USBUART_episr.c ****     *
 782:Generated_Source\PSoC5/USBUART_episr.c ****     *
 783:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************/
 784:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_ARB_ISR)
 785:Generated_Source\PSoC5/USBUART_episr.c ****     {
 216              		.loc 1 785 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL3:
 786:Generated_Source\PSoC5/USBUART_episr.c ****         uint8 arbIntrStatus;
 787:Generated_Source\PSoC5/USBUART_episr.c ****         uint8 epStatus;
 788:Generated_Source\PSoC5/USBUART_episr.c ****         uint8 ep = USBUART_EP1;
 789:Generated_Source\PSoC5/USBUART_episr.c **** 
 790:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_ARB_ISR_ENTRY_CALLBACK
 791:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ARB_ISR_EntryCallback();
 792:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_ARB_ISR_ENTRY_CALLBACK) */
 793:Generated_Source\PSoC5/USBUART_episr.c **** 
 794:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:Generated_Source\PSoC5/USBUART_episr.c **** 
 796:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 797:Generated_Source\PSoC5/USBUART_episr.c **** 
 798:Generated_Source\PSoC5/USBUART_episr.c ****         /* Get pending ARB interrupt sources. */
 799:Generated_Source\PSoC5/USBUART_episr.c ****         arbIntrStatus = USBUART_ARB_INT_SR_REG;
 221              		.loc 1 799 0
 222 0000 274B     		ldr	r3, .L27
 223 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224              	.LVL4:
 800:Generated_Source\PSoC5/USBUART_episr.c **** 
 801:Generated_Source\PSoC5/USBUART_episr.c ****         while (0u != arbIntrStatus)
 225              		.loc 1 801 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 19


 226 0004 002B     		cmp	r3, #0
 227 0006 49D0     		beq	.L26
 785:Generated_Source\PSoC5/USBUART_episr.c ****         uint8 arbIntrStatus;
 228              		.loc 1 785 0
 229 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 230              		.cfi_def_cfa_offset 24
 231              		.cfi_offset 4, -24
 232              		.cfi_offset 5, -20
 233              		.cfi_offset 6, -16
 234              		.cfi_offset 7, -12
 235              		.cfi_offset 8, -8
 236              		.cfi_offset 14, -4
 237 000c 03F0FF00 		and	r0, r3, #255
 238              		.loc 1 801 0
 239 0010 0123     		movs	r3, #1
 240              	.LVL5:
 241 0012 244F     		ldr	r7, .L27+4
 802:Generated_Source\PSoC5/USBUART_episr.c ****         {
 803:Generated_Source\PSoC5/USBUART_episr.c ****             /* Check which EP is interrupt source. */
 804:Generated_Source\PSoC5/USBUART_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 805:Generated_Source\PSoC5/USBUART_episr.c ****             {
 806:Generated_Source\PSoC5/USBUART_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:Generated_Source\PSoC5/USBUART_episr.c ****                 epStatus = (USBUART_ARB_EP_BASE.arbEp[ep].epSr & USBUART_ARB_EP_BASE.arbEp[ep].epIn
 808:Generated_Source\PSoC5/USBUART_episr.c **** 
 809:Generated_Source\PSoC5/USBUART_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:Generated_Source\PSoC5/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_INT_IN_BUF_FULL))
 811:Generated_Source\PSoC5/USBUART_episr.c ****                 {
 812:Generated_Source\PSoC5/USBUART_episr.c ****                     if (0u != (USBUART_EP[ep].addr & USBUART_DIR_IN))
 813:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 814:Generated_Source\PSoC5/USBUART_episr.c ****                         /* Clear data ready status. */
 815:Generated_Source\PSoC5/USBUART_episr.c ****                         USBUART_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBUART_ARB_EPX_CFG_IN_DATA
 816:Generated_Source\PSoC5/USBUART_episr.c **** 
 817:Generated_Source\PSoC5/USBUART_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:Generated_Source\PSoC5/USBUART_episr.c ****                         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 819:Generated_Source\PSoC5/USBUART_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:Generated_Source\PSoC5/USBUART_episr.c ****                             if(USBUART_inLength[ep] > USBUART_DMA_BYTES_PER_BURST)
 821:Generated_Source\PSoC5/USBUART_episr.c ****                             {
 822:Generated_Source\PSoC5/USBUART_episr.c ****                                 USBUART_LoadNextInEP(ep, 0u);
 823:Generated_Source\PSoC5/USBUART_episr.c ****                             }
 824:Generated_Source\PSoC5/USBUART_episr.c ****                             else
 825:Generated_Source\PSoC5/USBUART_episr.c ****                             {
 826:Generated_Source\PSoC5/USBUART_episr.c ****                                 USBUART_inBufFull[ep] = 1u;
 827:Generated_Source\PSoC5/USBUART_episr.c ****                             }
 828:Generated_Source\PSoC5/USBUART_episr.c ****                         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u
 829:Generated_Source\PSoC5/USBUART_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:Generated_Source\PSoC5/USBUART_episr.c **** 
 831:Generated_Source\PSoC5/USBUART_episr.c ****                         /* Arm IN endpoint. */
 832:Generated_Source\PSoC5/USBUART_episr.c ****                         USBUART_SIE_EP_BASE.sieEp[ep].epCr0 = USBUART_EP[ep].epMode;
 833:Generated_Source\PSoC5/USBUART_episr.c **** 
 834:Generated_Source\PSoC5/USBUART_episr.c ****                     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && USBUART_ISR_SERVICE_MIDI_IN)
 835:Generated_Source\PSoC5/USBUART_episr.c ****                         if (ep == USBUART_midi_in_ep)
 836:Generated_Source\PSoC5/USBUART_episr.c ****                         {
 837:Generated_Source\PSoC5/USBUART_episr.c ****                             /* Clear MIDI input pointer. */
 838:Generated_Source\PSoC5/USBUART_episr.c ****                             USBUART_midiInPointer = 0u;
 839:Generated_Source\PSoC5/USBUART_episr.c ****                         }
 840:Generated_Source\PSoC5/USBUART_episr.c ****                     #endif /* (USBUART_ENABLE_MIDI_STREAMING) */
 841:Generated_Source\PSoC5/USBUART_episr.c ****                     }
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 20


 842:Generated_Source\PSoC5/USBUART_episr.c ****                 }
 843:Generated_Source\PSoC5/USBUART_episr.c **** 
 844:Generated_Source\PSoC5/USBUART_episr.c ****             #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
 845:Generated_Source\PSoC5/USBUART_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:Generated_Source\PSoC5/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_SR_DMA_GNT))
 847:Generated_Source\PSoC5/USBUART_episr.c ****                 {
 848:Generated_Source\PSoC5/USBUART_episr.c ****                     if (0u == (USBUART_EP[ep].addr & USBUART_DIR_IN))
 242              		.loc 1 848 0
 243 0014 244E     		ldr	r6, .L27+8
 849:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 850:Generated_Source\PSoC5/USBUART_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:Generated_Source\PSoC5/USBUART_episr.c ****                         USBUART_EP[ep].apiEpState = USBUART_NO_EVENT_PENDING;
 244              		.loc 1 851 0
 245 0016 4FF0000E 		mov	lr, #0
 832:Generated_Source\PSoC5/USBUART_episr.c **** 
 246              		.loc 1 832 0
 247 001a DFF890C0 		ldr	ip, .L27+12
 248              	.LVL6:
 249              	.L23:
 804:Generated_Source\PSoC5/USBUART_episr.c ****             {
 250              		.loc 1 804 0
 251 001e 10F0010F 		tst	r0, #1
 252 0022 35D0     		beq	.L20
 807:Generated_Source\PSoC5/USBUART_episr.c **** 
 253              		.loc 1 807 0
 254 0024 1946     		mov	r1, r3
 255 0026 1C01     		lsls	r4, r3, #4
 256 0028 E519     		adds	r5, r4, r7
 257 002a AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 258 002c 95F80180 		ldrb	r8, [r5, #1]	@ zero_extendqisi2
 259 0030 08EA0202 		and	r2, r8, r2
 260              	.LVL7:
 810:Generated_Source\PSoC5/USBUART_episr.c ****                 {
 261              		.loc 1 810 0
 262 0034 12F0010F 		tst	r2, #1
 263 0038 18D0     		beq	.L21
 812:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 264              		.loc 1 812 0
 265 003a 03EB4308 		add	r8, r3, r3, lsl #1
 266 003e 06EB8808 		add	r8, r6, r8, lsl #2
 267 0042 98F80480 		ldrb	r8, [r8, #4]	@ zero_extendqisi2
 268 0046 18F0800F 		tst	r8, #128
 269 004a 0FD0     		beq	.L21
 815:Generated_Source\PSoC5/USBUART_episr.c **** 
 270              		.loc 1 815 0
 271 004c 14F80780 		ldrb	r8, [r4, r7]	@ zero_extendqisi2
 272 0050 08F0FE08 		and	r8, r8, #254
 273 0054 04F80780 		strb	r8, [r4, r7]
 832:Generated_Source\PSoC5/USBUART_episr.c **** 
 274              		.loc 1 832 0
 275 0058 03EB4304 		add	r4, r3, r3, lsl #1
 276 005c 06EB8404 		add	r4, r6, r4, lsl #2
 277 0060 6479     		ldrb	r4, [r4, #5]	@ zero_extendqisi2
 278 0062 E4B2     		uxtb	r4, r4
 279 0064 0CEB0318 		add	r8, ip, r3, lsl #4
 280 0068 88F80240 		strb	r4, [r8, #2]
 281              	.L21:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 21


 846:Generated_Source\PSoC5/USBUART_episr.c ****                 {
 282              		.loc 1 846 0
 283 006c 12F0020F 		tst	r2, #2
 284 0070 0DD0     		beq	.L22
 848:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 285              		.loc 1 848 0
 286 0072 01EB4104 		add	r4, r1, r1, lsl #1
 287 0076 06EB8404 		add	r4, r6, r4, lsl #2
 288 007a 2479     		ldrb	r4, [r4, #4]	@ zero_extendqisi2
 289 007c 14F0800F 		tst	r4, #128
 290 0080 05D1     		bne	.L22
 291              		.loc 1 851 0
 292 0082 01EB4101 		add	r1, r1, r1, lsl #1
 293 0086 06EB8101 		add	r1, r6, r1, lsl #2
 294 008a 81F801E0 		strb	lr, [r1, #1]
 295              	.L22:
 852:Generated_Source\PSoC5/USBUART_episr.c **** 
 853:Generated_Source\PSoC5/USBUART_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:Generated_Source\PSoC5/USBUART_episr.c ****                     }
 855:Generated_Source\PSoC5/USBUART_episr.c ****                 }
 856:Generated_Source\PSoC5/USBUART_episr.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
 857:Generated_Source\PSoC5/USBUART_episr.c **** 
 858:Generated_Source\PSoC5/USBUART_episr.c ****             #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 859:Generated_Source\PSoC5/USBUART_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:Generated_Source\PSoC5/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_INT_DMA_TERMIN))
 861:Generated_Source\PSoC5/USBUART_episr.c ****                 {
 862:Generated_Source\PSoC5/USBUART_episr.c ****                     uint32 channelNum = USBUART_DmaChan[ep];
 863:Generated_Source\PSoC5/USBUART_episr.c **** 
 864:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Restore burst counter for endpoint. */
 865:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_DmaEpBurstCnt[ep] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCntBack
 866:Generated_Source\PSoC5/USBUART_episr.c **** 
 867:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_CyDmaChDisable(channelNum);
 869:Generated_Source\PSoC5/USBUART_episr.c **** 
 870:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:Generated_Source\PSoC5/USBUART_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:Generated_Source\PSoC5/USBUART_episr.c ****                     */
 873:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_CyDmaTriggerOut(USBUART_DmaBurstEndOut[ep]);
 874:Generated_Source\PSoC5/USBUART_episr.c **** 
 875:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Restore destination address for output endpoint. */
 876:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
 877:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
 878:Generated_Source\PSoC5/USBUART_episr.c ****                                                                                                    
 879:Generated_Source\PSoC5/USBUART_episr.c **** 
 880:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:Generated_Source\PSoC5/USBUART_episr.c ****                     if (0u != (USBUART_DmaEpLastBurstEl[ep] & USBUART_DMA_DESCR_REVERT))
 882:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 883:Generated_Source\PSoC5/USBUART_episr.c ****                         USBUART_CyDmaSetNumDataElements(channelNum, (USBUART_DmaEpLastBurstEl[ep] >
 884:Generated_Source\PSoC5/USBUART_episr.c ****                                                                              USBUART_DMA_GET_MAX_EL
 885:Generated_Source\PSoC5/USBUART_episr.c ****                     }
 886:Generated_Source\PSoC5/USBUART_episr.c **** 
 887:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
 889:Generated_Source\PSoC5/USBUART_episr.c ****                     if (USBUART_DmaEpBurstCntBackup[ep] > 1u)
 890:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 891:Generated_Source\PSoC5/USBUART_episr.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
 892:Generated_Source\PSoC5/USBUART_episr.c ****                     }
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 22


 893:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
 894:Generated_Source\PSoC5/USBUART_episr.c **** 
 895:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Enable DMA channel: configuration complete. */
 896:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_CyDmaChEnable(channelNum);
 897:Generated_Source\PSoC5/USBUART_episr.c ****                     
 898:Generated_Source\PSoC5/USBUART_episr.c ****                     
 899:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 900:Generated_Source\PSoC5/USBUART_episr.c ****                     (void) USBUART_SIE_EP_BASE.sieEp[ep].epCr0;
 901:Generated_Source\PSoC5/USBUART_episr.c ****                     
 902:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 903:Generated_Source\PSoC5/USBUART_episr.c ****                     if (USBUART_GET_EP_TYPE(ep) != USBUART_EP_TYPE_ISOC)
 904:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 905:Generated_Source\PSoC5/USBUART_episr.c ****                         USBUART_EP[ep].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 906:Generated_Source\PSoC5/USBUART_episr.c ****                     }
 907:Generated_Source\PSoC5/USBUART_episr.c ****             
 908:Generated_Source\PSoC5/USBUART_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 909:Generated_Source\PSoC5/USBUART_episr.c ****                     USBUART_EP[ep].apiEpState = USBUART_EVENT_PENDING;
 910:Generated_Source\PSoC5/USBUART_episr.c ****                     
 911:Generated_Source\PSoC5/USBUART_episr.c ****                 #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 912:Generated_Source\PSoC5/USBUART_episr.c ****                     !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 913:Generated_Source\PSoC5/USBUART_episr.c ****                     if (USBUART_midi_out_ep == ep)
 914:Generated_Source\PSoC5/USBUART_episr.c ****                     {
 915:Generated_Source\PSoC5/USBUART_episr.c ****                         USBUART_MIDI_OUT_Service();
 916:Generated_Source\PSoC5/USBUART_episr.c ****                     }
 917:Generated_Source\PSoC5/USBUART_episr.c ****                 #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 918:Generated_Source\PSoC5/USBUART_episr.c ****                 }
 919:Generated_Source\PSoC5/USBUART_episr.c ****             #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 920:Generated_Source\PSoC5/USBUART_episr.c **** 
 921:Generated_Source\PSoC5/USBUART_episr.c **** 
 922:Generated_Source\PSoC5/USBUART_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 923:Generated_Source\PSoC5/USBUART_episr.c **** 
 924:Generated_Source\PSoC5/USBUART_episr.c ****                 /* `#END` */
 925:Generated_Source\PSoC5/USBUART_episr.c **** 
 926:Generated_Source\PSoC5/USBUART_episr.c ****             #ifdef USBUART_ARB_ISR_CALLBACK
 927:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_ARB_ISR_Callback(ep, epStatus);
 928:Generated_Source\PSoC5/USBUART_episr.c ****             #endif /* (USBUART_ARB_ISR_CALLBACK) */
 929:Generated_Source\PSoC5/USBUART_episr.c **** 
 930:Generated_Source\PSoC5/USBUART_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 931:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 296              		.loc 1 931 0
 297 008e AA70     		strb	r2, [r5, #2]
 298              	.LVL8:
 299              	.L20:
 932:Generated_Source\PSoC5/USBUART_episr.c ****             }
 933:Generated_Source\PSoC5/USBUART_episr.c **** 
 934:Generated_Source\PSoC5/USBUART_episr.c ****             ++ep;
 300              		.loc 1 934 0
 301 0090 0133     		adds	r3, r3, #1
 302              	.LVL9:
 303 0092 DBB2     		uxtb	r3, r3
 304              	.LVL10:
 801:Generated_Source\PSoC5/USBUART_episr.c ****         {
 305              		.loc 1 801 0
 306 0094 4008     		lsrs	r0, r0, #1
 307              	.LVL11:
 308 0096 C2D1     		bne	.L23
 309 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 23


 310              	.LVL12:
 311              	.L26:
 312              		.cfi_def_cfa_offset 0
 313              		.cfi_restore 4
 314              		.cfi_restore 5
 315              		.cfi_restore 6
 316              		.cfi_restore 7
 317              		.cfi_restore 8
 318              		.cfi_restore 14
 319 009c 7047     		bx	lr
 320              	.L28:
 321 009e 00BF     		.align	2
 322              	.L27:
 323 00a0 9F600040 		.word	1073766559
 324 00a4 70600040 		.word	1073766512
 325 00a8 00000000 		.word	USBUART_EP
 326 00ac FC5F0040 		.word	1073766396
 327              		.cfi_endproc
 328              	.LFE5:
 329              		.size	USBUART_ARB_ISR, .-USBUART_ARB_ISR
 330              		.text
 331              	.Letext0:
 332              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 333              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 334              		.file 4 "./cyapicallbacks.h"
 335              		.file 5 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 336              		.section	.debug_info,"",%progbits
 337              	.Ldebug_info0:
 338 0000 97030000 		.4byte	0x397
 339 0004 0400     		.2byte	0x4
 340 0006 00000000 		.4byte	.Ldebug_abbrev0
 341 000a 04       		.byte	0x4
 342 000b 01       		.uleb128 0x1
 343 000c 3B000000 		.4byte	.LASF56
 344 0010 0C       		.byte	0xc
 345 0011 98010000 		.4byte	.LASF57
 346 0015 F0020000 		.4byte	.LASF58
 347 0019 00000000 		.4byte	.Ldebug_ranges0+0
 348 001d 00000000 		.4byte	0
 349 0021 00000000 		.4byte	.Ldebug_line0
 350 0025 02       		.uleb128 0x2
 351 0026 01       		.byte	0x1
 352 0027 06       		.byte	0x6
 353 0028 72030000 		.4byte	.LASF0
 354 002c 02       		.uleb128 0x2
 355 002d 01       		.byte	0x1
 356 002e 08       		.byte	0x8
 357 002f 8A010000 		.4byte	.LASF1
 358 0033 02       		.uleb128 0x2
 359 0034 02       		.byte	0x2
 360 0035 05       		.byte	0x5
 361 0036 C5020000 		.4byte	.LASF2
 362 003a 02       		.uleb128 0x2
 363 003b 02       		.byte	0x2
 364 003c 07       		.byte	0x7
 365 003d D2000000 		.4byte	.LASF3
 366 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 24


 367 0042 04       		.byte	0x4
 368 0043 05       		.byte	0x5
 369 0044 46030000 		.4byte	.LASF4
 370 0048 02       		.uleb128 0x2
 371 0049 04       		.byte	0x4
 372 004a 07       		.byte	0x7
 373 004b 57010000 		.4byte	.LASF5
 374 004f 02       		.uleb128 0x2
 375 0050 08       		.byte	0x8
 376 0051 05       		.byte	0x5
 377 0052 96020000 		.4byte	.LASF6
 378 0056 02       		.uleb128 0x2
 379 0057 08       		.byte	0x8
 380 0058 07       		.byte	0x7
 381 0059 31020000 		.4byte	.LASF7
 382 005d 03       		.uleb128 0x3
 383 005e 04       		.byte	0x4
 384 005f 05       		.byte	0x5
 385 0060 696E7400 		.ascii	"int\000"
 386 0064 02       		.uleb128 0x2
 387 0065 04       		.byte	0x4
 388 0066 07       		.byte	0x7
 389 0067 0C020000 		.4byte	.LASF8
 390 006b 04       		.uleb128 0x4
 391 006c EA020000 		.4byte	.LASF9
 392 0070 02       		.byte	0x2
 393 0071 E401     		.2byte	0x1e4
 394 0073 2C000000 		.4byte	0x2c
 395 0077 04       		.uleb128 0x4
 396 0078 F5010000 		.4byte	.LASF10
 397 007c 02       		.byte	0x2
 398 007d E501     		.2byte	0x1e5
 399 007f 3A000000 		.4byte	0x3a
 400 0083 02       		.uleb128 0x2
 401 0084 04       		.byte	0x4
 402 0085 04       		.byte	0x4
 403 0086 35000000 		.4byte	.LASF11
 404 008a 02       		.uleb128 0x2
 405 008b 08       		.byte	0x8
 406 008c 04       		.byte	0x4
 407 008d C4010000 		.4byte	.LASF12
 408 0091 02       		.uleb128 0x2
 409 0092 01       		.byte	0x1
 410 0093 08       		.byte	0x8
 411 0094 A4020000 		.4byte	.LASF13
 412 0098 04       		.uleb128 0x4
 413 0099 52010000 		.4byte	.LASF14
 414 009d 02       		.byte	0x2
 415 009e 8E02     		.2byte	0x28e
 416 00a0 A4000000 		.4byte	0xa4
 417 00a4 05       		.uleb128 0x5
 418 00a5 6B000000 		.4byte	0x6b
 419 00a9 02       		.uleb128 0x2
 420 00aa 08       		.byte	0x8
 421 00ab 04       		.byte	0x4
 422 00ac 66030000 		.4byte	.LASF15
 423 00b0 02       		.uleb128 0x2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 25


 424 00b1 04       		.byte	0x4
 425 00b2 07       		.byte	0x7
 426 00b3 70020000 		.4byte	.LASF16
 427 00b7 06       		.uleb128 0x6
 428 00b8 0C       		.byte	0xc
 429 00b9 03       		.byte	0x3
 430 00ba 8D       		.byte	0x8d
 431 00bb 2C010000 		.4byte	0x12c
 432 00bf 07       		.uleb128 0x7
 433 00c0 8F030000 		.4byte	.LASF17
 434 00c4 03       		.byte	0x3
 435 00c5 8F       		.byte	0x8f
 436 00c6 6B000000 		.4byte	0x6b
 437 00ca 00       		.byte	0
 438 00cb 07       		.uleb128 0x7
 439 00cc FC010000 		.4byte	.LASF18
 440 00d0 03       		.byte	0x3
 441 00d1 90       		.byte	0x90
 442 00d2 6B000000 		.4byte	0x6b
 443 00d6 01       		.byte	0x1
 444 00d7 07       		.uleb128 0x7
 445 00d8 48020000 		.4byte	.LASF19
 446 00dc 03       		.byte	0x3
 447 00dd 91       		.byte	0x91
 448 00de 6B000000 		.4byte	0x6b
 449 00e2 02       		.byte	0x2
 450 00e3 07       		.uleb128 0x7
 451 00e4 3E010000 		.4byte	.LASF20
 452 00e8 03       		.byte	0x3
 453 00e9 92       		.byte	0x92
 454 00ea 6B000000 		.4byte	0x6b
 455 00ee 03       		.byte	0x3
 456 00ef 07       		.uleb128 0x7
 457 00f0 69010000 		.4byte	.LASF21
 458 00f4 03       		.byte	0x3
 459 00f5 93       		.byte	0x93
 460 00f6 6B000000 		.4byte	0x6b
 461 00fa 04       		.byte	0x4
 462 00fb 07       		.uleb128 0x7
 463 00fc 8F020000 		.4byte	.LASF22
 464 0100 03       		.byte	0x3
 465 0101 94       		.byte	0x94
 466 0102 6B000000 		.4byte	0x6b
 467 0106 05       		.byte	0x5
 468 0107 07       		.uleb128 0x7
 469 0108 E2010000 		.4byte	.LASF23
 470 010c 03       		.byte	0x3
 471 010d 95       		.byte	0x95
 472 010e 77000000 		.4byte	0x77
 473 0112 06       		.byte	0x6
 474 0113 07       		.uleb128 0x7
 475 0114 A9020000 		.4byte	.LASF24
 476 0118 03       		.byte	0x3
 477 0119 96       		.byte	0x96
 478 011a 77000000 		.4byte	0x77
 479 011e 08       		.byte	0x8
 480 011f 07       		.uleb128 0x7
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 26


 481 0120 3C030000 		.4byte	.LASF25
 482 0124 03       		.byte	0x3
 483 0125 97       		.byte	0x97
 484 0126 6B000000 		.4byte	0x6b
 485 012a 0A       		.byte	0xa
 486 012b 00       		.byte	0
 487 012c 08       		.uleb128 0x8
 488 012d 4F030000 		.4byte	.LASF26
 489 0131 03       		.byte	0x3
 490 0132 98       		.byte	0x98
 491 0133 B7000000 		.4byte	0xb7
 492 0137 06       		.uleb128 0x6
 493 0138 10       		.byte	0x10
 494 0139 03       		.byte	0x3
 495 013a D4       		.byte	0xd4
 496 013b 70010000 		.4byte	0x170
 497 013f 07       		.uleb128 0x7
 498 0140 30010000 		.4byte	.LASF27
 499 0144 03       		.byte	0x3
 500 0145 D6       		.byte	0xd6
 501 0146 6B000000 		.4byte	0x6b
 502 014a 00       		.byte	0
 503 014b 07       		.uleb128 0x7
 504 014c 37010000 		.4byte	.LASF28
 505 0150 03       		.byte	0x3
 506 0151 D7       		.byte	0xd7
 507 0152 6B000000 		.4byte	0x6b
 508 0156 01       		.byte	0x1
 509 0157 07       		.uleb128 0x7
 510 0158 2F000000 		.4byte	.LASF29
 511 015c 03       		.byte	0x3
 512 015d D8       		.byte	0xd8
 513 015e 6B000000 		.4byte	0x6b
 514 0162 02       		.byte	0x2
 515 0163 09       		.uleb128 0x9
 516 0164 67617000 		.ascii	"gap\000"
 517 0168 03       		.byte	0x3
 518 0169 D9       		.byte	0xd9
 519 016a 70010000 		.4byte	0x170
 520 016e 03       		.byte	0x3
 521 016f 00       		.byte	0
 522 0170 0A       		.uleb128 0xa
 523 0171 6B000000 		.4byte	0x6b
 524 0175 80010000 		.4byte	0x180
 525 0179 0B       		.uleb128 0xb
 526 017a B0000000 		.4byte	0xb0
 527 017e 0C       		.byte	0xc
 528 017f 00       		.byte	0
 529 0180 08       		.uleb128 0x8
 530 0181 52020000 		.4byte	.LASF30
 531 0185 03       		.byte	0x3
 532 0186 DA       		.byte	0xda
 533 0187 37010000 		.4byte	0x137
 534 018b 06       		.uleb128 0x6
 535 018c 10       		.byte	0x10
 536 018d 03       		.byte	0x3
 537 018e E6       		.byte	0xe6
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 27


 538 018f 0C020000 		.4byte	0x20c
 539 0193 07       		.uleb128 0x7
 540 0194 E5000000 		.4byte	.LASF31
 541 0198 03       		.byte	0x3
 542 0199 E8       		.byte	0xe8
 543 019a 6B000000 		.4byte	0x6b
 544 019e 00       		.byte	0
 545 019f 07       		.uleb128 0x7
 546 01a0 68020000 		.4byte	.LASF32
 547 01a4 03       		.byte	0x3
 548 01a5 E9       		.byte	0xe9
 549 01a6 6B000000 		.4byte	0x6b
 550 01aa 01       		.byte	0x1
 551 01ab 07       		.uleb128 0x7
 552 01ac 6E010000 		.4byte	.LASF33
 553 01b0 03       		.byte	0x3
 554 01b1 EA       		.byte	0xea
 555 01b2 6B000000 		.4byte	0x6b
 556 01b6 02       		.byte	0x2
 557 01b7 07       		.uleb128 0x7
 558 01b8 C9000000 		.4byte	.LASF34
 559 01bc 03       		.byte	0x3
 560 01bd EB       		.byte	0xeb
 561 01be 6B000000 		.4byte	0x6b
 562 01c2 03       		.byte	0x3
 563 01c3 07       		.uleb128 0x7
 564 01c4 BF010000 		.4byte	.LASF35
 565 01c8 03       		.byte	0x3
 566 01c9 EC       		.byte	0xec
 567 01ca 6B000000 		.4byte	0x6b
 568 01ce 04       		.byte	0x4
 569 01cf 07       		.uleb128 0x7
 570 01d0 ED010000 		.4byte	.LASF36
 571 01d4 03       		.byte	0x3
 572 01d5 ED       		.byte	0xed
 573 01d6 6B000000 		.4byte	0x6b
 574 01da 05       		.byte	0x5
 575 01db 07       		.uleb128 0x7
 576 01dc CF020000 		.4byte	.LASF37
 577 01e0 03       		.byte	0x3
 578 01e1 EE       		.byte	0xee
 579 01e2 6B000000 		.4byte	0x6b
 580 01e6 06       		.byte	0x6
 581 01e7 07       		.uleb128 0x7
 582 01e8 29020000 		.4byte	.LASF38
 583 01ec 03       		.byte	0x3
 584 01ed EF       		.byte	0xef
 585 01ee 6B000000 		.4byte	0x6b
 586 01f2 07       		.byte	0x7
 587 01f3 07       		.uleb128 0x7
 588 01f4 07020000 		.4byte	.LASF39
 589 01f8 03       		.byte	0x3
 590 01f9 F0       		.byte	0xf0
 591 01fa 6B000000 		.4byte	0x6b
 592 01fe 08       		.byte	0x8
 593 01ff 09       		.uleb128 0x9
 594 0200 67617000 		.ascii	"gap\000"
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 28


 595 0204 03       		.byte	0x3
 596 0205 F1       		.byte	0xf1
 597 0206 0C020000 		.4byte	0x20c
 598 020a 09       		.byte	0x9
 599 020b 00       		.byte	0
 600 020c 0A       		.uleb128 0xa
 601 020d 6B000000 		.4byte	0x6b
 602 0211 1C020000 		.4byte	0x21c
 603 0215 0B       		.uleb128 0xb
 604 0216 B0000000 		.4byte	0xb0
 605 021a 06       		.byte	0x6
 606 021b 00       		.byte	0
 607 021c 08       		.uleb128 0x8
 608 021d 79020000 		.4byte	.LASF40
 609 0221 03       		.byte	0x3
 610 0222 F2       		.byte	0xf2
 611 0223 8B010000 		.4byte	0x18b
 612 0227 0C       		.uleb128 0xc
 613 0228 90       		.byte	0x90
 614 0229 03       		.byte	0x3
 615 022a 0E01     		.2byte	0x10e
 616 022c 3E020000 		.4byte	0x23e
 617 0230 0D       		.uleb128 0xd
 618 0231 B5030000 		.4byte	.LASF41
 619 0235 03       		.byte	0x3
 620 0236 1001     		.2byte	0x110
 621 0238 3E020000 		.4byte	0x23e
 622 023c 00       		.byte	0
 623 023d 00       		.byte	0
 624 023e 0A       		.uleb128 0xa
 625 023f 80010000 		.4byte	0x180
 626 0243 4E020000 		.4byte	0x24e
 627 0247 0B       		.uleb128 0xb
 628 0248 B0000000 		.4byte	0xb0
 629 024c 08       		.byte	0x8
 630 024d 00       		.byte	0
 631 024e 04       		.uleb128 0x4
 632 024f 73010000 		.4byte	.LASF42
 633 0253 03       		.byte	0x3
 634 0254 1101     		.2byte	0x111
 635 0256 27020000 		.4byte	0x227
 636 025a 0C       		.uleb128 0xc
 637 025b 90       		.byte	0x90
 638 025c 03       		.byte	0x3
 639 025d 1401     		.2byte	0x114
 640 025f 71020000 		.4byte	0x271
 641 0263 0D       		.uleb128 0xd
 642 0264 11000000 		.4byte	.LASF43
 643 0268 03       		.byte	0x3
 644 0269 1601     		.2byte	0x116
 645 026b 71020000 		.4byte	0x271
 646 026f 00       		.byte	0
 647 0270 00       		.byte	0
 648 0271 0A       		.uleb128 0xa
 649 0272 1C020000 		.4byte	0x21c
 650 0276 81020000 		.4byte	0x281
 651 027a 0B       		.uleb128 0xb
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 29


 652 027b B0000000 		.4byte	0xb0
 653 027f 08       		.byte	0x8
 654 0280 00       		.byte	0
 655 0281 04       		.uleb128 0x4
 656 0282 CB010000 		.4byte	.LASF44
 657 0286 03       		.byte	0x3
 658 0287 1701     		.2byte	0x117
 659 0289 5A020000 		.4byte	0x25a
 660 028d 0E       		.uleb128 0xe
 661 028e 7E030000 		.4byte	.LASF47
 662 0292 01       		.byte	0x1
 663 0293 25       		.byte	0x25
 664 0294 00000000 		.4byte	.LFB0
 665 0298 30000000 		.4byte	.LFE0-.LFB0
 666 029c 01       		.uleb128 0x1
 667 029d 9C       		.byte	0x9c
 668 029e 0F       		.uleb128 0xf
 669 029f B4020000 		.4byte	.LASF45
 670 02a3 01       		.byte	0x1
 671 02a4 78       		.byte	0x78
 672 02a5 00000000 		.4byte	.LFB1
 673 02a9 38000000 		.4byte	.LFE1-.LFB1
 674 02ad 01       		.uleb128 0x1
 675 02ae 9C       		.byte	0x9c
 676 02af BD020000 		.4byte	0x2bd
 677 02b3 10       		.uleb128 0x10
 678 02b4 06000000 		.4byte	.LVL0
 679 02b8 79030000 		.4byte	0x379
 680 02bc 00       		.byte	0
 681 02bd 0F       		.uleb128 0xf
 682 02be 00000000 		.4byte	.LASF46
 683 02c2 01       		.byte	0x1
 684 02c3 C9       		.byte	0xc9
 685 02c4 00000000 		.4byte	.LFB2
 686 02c8 40000000 		.4byte	.LFE2-.LFB2
 687 02cc 01       		.uleb128 0x1
 688 02cd 9C       		.byte	0x9c
 689 02ce DC020000 		.4byte	0x2dc
 690 02d2 10       		.uleb128 0x10
 691 02d3 36000000 		.4byte	.LVL1
 692 02d7 84030000 		.4byte	0x384
 693 02db 00       		.byte	0
 694 02dc 11       		.uleb128 0x11
 695 02dd 09010000 		.4byte	.LASF48
 696 02e1 01       		.byte	0x1
 697 02e2 B502     		.2byte	0x2b5
 698 02e4 00000000 		.4byte	.LFB3
 699 02e8 02000000 		.4byte	.LFE3-.LFB3
 700 02ec 01       		.uleb128 0x1
 701 02ed 9C       		.byte	0x9c
 702 02ee 12       		.uleb128 0x12
 703 02ef D4020000 		.4byte	.LASF49
 704 02f3 01       		.byte	0x1
 705 02f4 D202     		.2byte	0x2d2
 706 02f6 00000000 		.4byte	.LFB4
 707 02fa 08000000 		.4byte	.LFE4-.LFB4
 708 02fe 01       		.uleb128 0x1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 30


 709 02ff 9C       		.byte	0x9c
 710 0300 0E030000 		.4byte	0x30e
 711 0304 10       		.uleb128 0x10
 712 0305 06000000 		.4byte	.LVL2
 713 0309 8F030000 		.4byte	0x38f
 714 030d 00       		.byte	0
 715 030e 12       		.uleb128 0x12
 716 030f 19020000 		.4byte	.LASF50
 717 0313 01       		.byte	0x1
 718 0314 1003     		.2byte	0x310
 719 0316 00000000 		.4byte	.LFB5
 720 031a B0000000 		.4byte	.LFE5-.LFB5
 721 031e 01       		.uleb128 0x1
 722 031f 9C       		.byte	0x9c
 723 0320 54030000 		.4byte	0x354
 724 0324 13       		.uleb128 0x13
 725 0325 22010000 		.4byte	.LASF51
 726 0329 01       		.byte	0x1
 727 032a 1203     		.2byte	0x312
 728 032c 6B000000 		.4byte	0x6b
 729 0330 00000000 		.4byte	.LLST0
 730 0334 13       		.uleb128 0x13
 731 0335 19010000 		.4byte	.LASF52
 732 0339 01       		.byte	0x1
 733 033a 1303     		.2byte	0x313
 734 033c 6B000000 		.4byte	0x6b
 735 0340 38000000 		.4byte	.LLST1
 736 0344 14       		.uleb128 0x14
 737 0345 657000   		.ascii	"ep\000"
 738 0348 01       		.byte	0x1
 739 0349 1403     		.2byte	0x314
 740 034b 6B000000 		.4byte	0x6b
 741 034f 4B000000 		.4byte	.LLST2
 742 0353 00       		.byte	0
 743 0354 0A       		.uleb128 0xa
 744 0355 64030000 		.4byte	0x364
 745 0359 64030000 		.4byte	0x364
 746 035d 0B       		.uleb128 0xb
 747 035e B0000000 		.4byte	0xb0
 748 0362 08       		.byte	0x8
 749 0363 00       		.byte	0
 750 0364 05       		.uleb128 0x5
 751 0365 2C010000 		.4byte	0x12c
 752 0369 15       		.uleb128 0x15
 753 036a 47010000 		.4byte	.LASF59
 754 036e 05       		.byte	0x5
 755 036f 79       		.byte	0x79
 756 0370 74030000 		.4byte	0x374
 757 0374 05       		.uleb128 0x5
 758 0375 54030000 		.4byte	0x354
 759 0379 16       		.uleb128 0x16
 760 037a 96030000 		.4byte	.LASF53
 761 037e 96030000 		.4byte	.LASF53
 762 0382 04       		.byte	0x4
 763 0383 14       		.byte	0x14
 764 0384 16       		.uleb128 0x16
 765 0385 EB000000 		.4byte	.LASF54
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 31


 766 0389 EB000000 		.4byte	.LASF54
 767 038d 04       		.byte	0x4
 768 038e 18       		.byte	0x18
 769 038f 16       		.uleb128 0x16
 770 0390 17000000 		.4byte	.LASF55
 771 0394 17000000 		.4byte	.LASF55
 772 0398 05       		.byte	0x5
 773 0399 A4       		.byte	0xa4
 774 039a 00       		.byte	0
 775              		.section	.debug_abbrev,"",%progbits
 776              	.Ldebug_abbrev0:
 777 0000 01       		.uleb128 0x1
 778 0001 11       		.uleb128 0x11
 779 0002 01       		.byte	0x1
 780 0003 25       		.uleb128 0x25
 781 0004 0E       		.uleb128 0xe
 782 0005 13       		.uleb128 0x13
 783 0006 0B       		.uleb128 0xb
 784 0007 03       		.uleb128 0x3
 785 0008 0E       		.uleb128 0xe
 786 0009 1B       		.uleb128 0x1b
 787 000a 0E       		.uleb128 0xe
 788 000b 55       		.uleb128 0x55
 789 000c 17       		.uleb128 0x17
 790 000d 11       		.uleb128 0x11
 791 000e 01       		.uleb128 0x1
 792 000f 10       		.uleb128 0x10
 793 0010 17       		.uleb128 0x17
 794 0011 00       		.byte	0
 795 0012 00       		.byte	0
 796 0013 02       		.uleb128 0x2
 797 0014 24       		.uleb128 0x24
 798 0015 00       		.byte	0
 799 0016 0B       		.uleb128 0xb
 800 0017 0B       		.uleb128 0xb
 801 0018 3E       		.uleb128 0x3e
 802 0019 0B       		.uleb128 0xb
 803 001a 03       		.uleb128 0x3
 804 001b 0E       		.uleb128 0xe
 805 001c 00       		.byte	0
 806 001d 00       		.byte	0
 807 001e 03       		.uleb128 0x3
 808 001f 24       		.uleb128 0x24
 809 0020 00       		.byte	0
 810 0021 0B       		.uleb128 0xb
 811 0022 0B       		.uleb128 0xb
 812 0023 3E       		.uleb128 0x3e
 813 0024 0B       		.uleb128 0xb
 814 0025 03       		.uleb128 0x3
 815 0026 08       		.uleb128 0x8
 816 0027 00       		.byte	0
 817 0028 00       		.byte	0
 818 0029 04       		.uleb128 0x4
 819 002a 16       		.uleb128 0x16
 820 002b 00       		.byte	0
 821 002c 03       		.uleb128 0x3
 822 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 32


 823 002e 3A       		.uleb128 0x3a
 824 002f 0B       		.uleb128 0xb
 825 0030 3B       		.uleb128 0x3b
 826 0031 05       		.uleb128 0x5
 827 0032 49       		.uleb128 0x49
 828 0033 13       		.uleb128 0x13
 829 0034 00       		.byte	0
 830 0035 00       		.byte	0
 831 0036 05       		.uleb128 0x5
 832 0037 35       		.uleb128 0x35
 833 0038 00       		.byte	0
 834 0039 49       		.uleb128 0x49
 835 003a 13       		.uleb128 0x13
 836 003b 00       		.byte	0
 837 003c 00       		.byte	0
 838 003d 06       		.uleb128 0x6
 839 003e 13       		.uleb128 0x13
 840 003f 01       		.byte	0x1
 841 0040 0B       		.uleb128 0xb
 842 0041 0B       		.uleb128 0xb
 843 0042 3A       		.uleb128 0x3a
 844 0043 0B       		.uleb128 0xb
 845 0044 3B       		.uleb128 0x3b
 846 0045 0B       		.uleb128 0xb
 847 0046 01       		.uleb128 0x1
 848 0047 13       		.uleb128 0x13
 849 0048 00       		.byte	0
 850 0049 00       		.byte	0
 851 004a 07       		.uleb128 0x7
 852 004b 0D       		.uleb128 0xd
 853 004c 00       		.byte	0
 854 004d 03       		.uleb128 0x3
 855 004e 0E       		.uleb128 0xe
 856 004f 3A       		.uleb128 0x3a
 857 0050 0B       		.uleb128 0xb
 858 0051 3B       		.uleb128 0x3b
 859 0052 0B       		.uleb128 0xb
 860 0053 49       		.uleb128 0x49
 861 0054 13       		.uleb128 0x13
 862 0055 38       		.uleb128 0x38
 863 0056 0B       		.uleb128 0xb
 864 0057 00       		.byte	0
 865 0058 00       		.byte	0
 866 0059 08       		.uleb128 0x8
 867 005a 16       		.uleb128 0x16
 868 005b 00       		.byte	0
 869 005c 03       		.uleb128 0x3
 870 005d 0E       		.uleb128 0xe
 871 005e 3A       		.uleb128 0x3a
 872 005f 0B       		.uleb128 0xb
 873 0060 3B       		.uleb128 0x3b
 874 0061 0B       		.uleb128 0xb
 875 0062 49       		.uleb128 0x49
 876 0063 13       		.uleb128 0x13
 877 0064 00       		.byte	0
 878 0065 00       		.byte	0
 879 0066 09       		.uleb128 0x9
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 33


 880 0067 0D       		.uleb128 0xd
 881 0068 00       		.byte	0
 882 0069 03       		.uleb128 0x3
 883 006a 08       		.uleb128 0x8
 884 006b 3A       		.uleb128 0x3a
 885 006c 0B       		.uleb128 0xb
 886 006d 3B       		.uleb128 0x3b
 887 006e 0B       		.uleb128 0xb
 888 006f 49       		.uleb128 0x49
 889 0070 13       		.uleb128 0x13
 890 0071 38       		.uleb128 0x38
 891 0072 0B       		.uleb128 0xb
 892 0073 00       		.byte	0
 893 0074 00       		.byte	0
 894 0075 0A       		.uleb128 0xa
 895 0076 01       		.uleb128 0x1
 896 0077 01       		.byte	0x1
 897 0078 49       		.uleb128 0x49
 898 0079 13       		.uleb128 0x13
 899 007a 01       		.uleb128 0x1
 900 007b 13       		.uleb128 0x13
 901 007c 00       		.byte	0
 902 007d 00       		.byte	0
 903 007e 0B       		.uleb128 0xb
 904 007f 21       		.uleb128 0x21
 905 0080 00       		.byte	0
 906 0081 49       		.uleb128 0x49
 907 0082 13       		.uleb128 0x13
 908 0083 2F       		.uleb128 0x2f
 909 0084 0B       		.uleb128 0xb
 910 0085 00       		.byte	0
 911 0086 00       		.byte	0
 912 0087 0C       		.uleb128 0xc
 913 0088 13       		.uleb128 0x13
 914 0089 01       		.byte	0x1
 915 008a 0B       		.uleb128 0xb
 916 008b 0B       		.uleb128 0xb
 917 008c 3A       		.uleb128 0x3a
 918 008d 0B       		.uleb128 0xb
 919 008e 3B       		.uleb128 0x3b
 920 008f 05       		.uleb128 0x5
 921 0090 01       		.uleb128 0x1
 922 0091 13       		.uleb128 0x13
 923 0092 00       		.byte	0
 924 0093 00       		.byte	0
 925 0094 0D       		.uleb128 0xd
 926 0095 0D       		.uleb128 0xd
 927 0096 00       		.byte	0
 928 0097 03       		.uleb128 0x3
 929 0098 0E       		.uleb128 0xe
 930 0099 3A       		.uleb128 0x3a
 931 009a 0B       		.uleb128 0xb
 932 009b 3B       		.uleb128 0x3b
 933 009c 05       		.uleb128 0x5
 934 009d 49       		.uleb128 0x49
 935 009e 13       		.uleb128 0x13
 936 009f 38       		.uleb128 0x38
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 34


 937 00a0 0B       		.uleb128 0xb
 938 00a1 00       		.byte	0
 939 00a2 00       		.byte	0
 940 00a3 0E       		.uleb128 0xe
 941 00a4 2E       		.uleb128 0x2e
 942 00a5 00       		.byte	0
 943 00a6 3F       		.uleb128 0x3f
 944 00a7 19       		.uleb128 0x19
 945 00a8 03       		.uleb128 0x3
 946 00a9 0E       		.uleb128 0xe
 947 00aa 3A       		.uleb128 0x3a
 948 00ab 0B       		.uleb128 0xb
 949 00ac 3B       		.uleb128 0x3b
 950 00ad 0B       		.uleb128 0xb
 951 00ae 27       		.uleb128 0x27
 952 00af 19       		.uleb128 0x19
 953 00b0 11       		.uleb128 0x11
 954 00b1 01       		.uleb128 0x1
 955 00b2 12       		.uleb128 0x12
 956 00b3 06       		.uleb128 0x6
 957 00b4 40       		.uleb128 0x40
 958 00b5 18       		.uleb128 0x18
 959 00b6 9742     		.uleb128 0x2117
 960 00b8 19       		.uleb128 0x19
 961 00b9 00       		.byte	0
 962 00ba 00       		.byte	0
 963 00bb 0F       		.uleb128 0xf
 964 00bc 2E       		.uleb128 0x2e
 965 00bd 01       		.byte	0x1
 966 00be 3F       		.uleb128 0x3f
 967 00bf 19       		.uleb128 0x19
 968 00c0 03       		.uleb128 0x3
 969 00c1 0E       		.uleb128 0xe
 970 00c2 3A       		.uleb128 0x3a
 971 00c3 0B       		.uleb128 0xb
 972 00c4 3B       		.uleb128 0x3b
 973 00c5 0B       		.uleb128 0xb
 974 00c6 27       		.uleb128 0x27
 975 00c7 19       		.uleb128 0x19
 976 00c8 11       		.uleb128 0x11
 977 00c9 01       		.uleb128 0x1
 978 00ca 12       		.uleb128 0x12
 979 00cb 06       		.uleb128 0x6
 980 00cc 40       		.uleb128 0x40
 981 00cd 18       		.uleb128 0x18
 982 00ce 9742     		.uleb128 0x2117
 983 00d0 19       		.uleb128 0x19
 984 00d1 01       		.uleb128 0x1
 985 00d2 13       		.uleb128 0x13
 986 00d3 00       		.byte	0
 987 00d4 00       		.byte	0
 988 00d5 10       		.uleb128 0x10
 989 00d6 898201   		.uleb128 0x4109
 990 00d9 00       		.byte	0
 991 00da 11       		.uleb128 0x11
 992 00db 01       		.uleb128 0x1
 993 00dc 31       		.uleb128 0x31
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 35


 994 00dd 13       		.uleb128 0x13
 995 00de 00       		.byte	0
 996 00df 00       		.byte	0
 997 00e0 11       		.uleb128 0x11
 998 00e1 2E       		.uleb128 0x2e
 999 00e2 00       		.byte	0
 1000 00e3 3F       		.uleb128 0x3f
 1001 00e4 19       		.uleb128 0x19
 1002 00e5 03       		.uleb128 0x3
 1003 00e6 0E       		.uleb128 0xe
 1004 00e7 3A       		.uleb128 0x3a
 1005 00e8 0B       		.uleb128 0xb
 1006 00e9 3B       		.uleb128 0x3b
 1007 00ea 05       		.uleb128 0x5
 1008 00eb 27       		.uleb128 0x27
 1009 00ec 19       		.uleb128 0x19
 1010 00ed 11       		.uleb128 0x11
 1011 00ee 01       		.uleb128 0x1
 1012 00ef 12       		.uleb128 0x12
 1013 00f0 06       		.uleb128 0x6
 1014 00f1 40       		.uleb128 0x40
 1015 00f2 18       		.uleb128 0x18
 1016 00f3 9742     		.uleb128 0x2117
 1017 00f5 19       		.uleb128 0x19
 1018 00f6 00       		.byte	0
 1019 00f7 00       		.byte	0
 1020 00f8 12       		.uleb128 0x12
 1021 00f9 2E       		.uleb128 0x2e
 1022 00fa 01       		.byte	0x1
 1023 00fb 3F       		.uleb128 0x3f
 1024 00fc 19       		.uleb128 0x19
 1025 00fd 03       		.uleb128 0x3
 1026 00fe 0E       		.uleb128 0xe
 1027 00ff 3A       		.uleb128 0x3a
 1028 0100 0B       		.uleb128 0xb
 1029 0101 3B       		.uleb128 0x3b
 1030 0102 05       		.uleb128 0x5
 1031 0103 27       		.uleb128 0x27
 1032 0104 19       		.uleb128 0x19
 1033 0105 11       		.uleb128 0x11
 1034 0106 01       		.uleb128 0x1
 1035 0107 12       		.uleb128 0x12
 1036 0108 06       		.uleb128 0x6
 1037 0109 40       		.uleb128 0x40
 1038 010a 18       		.uleb128 0x18
 1039 010b 9742     		.uleb128 0x2117
 1040 010d 19       		.uleb128 0x19
 1041 010e 01       		.uleb128 0x1
 1042 010f 13       		.uleb128 0x13
 1043 0110 00       		.byte	0
 1044 0111 00       		.byte	0
 1045 0112 13       		.uleb128 0x13
 1046 0113 34       		.uleb128 0x34
 1047 0114 00       		.byte	0
 1048 0115 03       		.uleb128 0x3
 1049 0116 0E       		.uleb128 0xe
 1050 0117 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 36


 1051 0118 0B       		.uleb128 0xb
 1052 0119 3B       		.uleb128 0x3b
 1053 011a 05       		.uleb128 0x5
 1054 011b 49       		.uleb128 0x49
 1055 011c 13       		.uleb128 0x13
 1056 011d 02       		.uleb128 0x2
 1057 011e 17       		.uleb128 0x17
 1058 011f 00       		.byte	0
 1059 0120 00       		.byte	0
 1060 0121 14       		.uleb128 0x14
 1061 0122 34       		.uleb128 0x34
 1062 0123 00       		.byte	0
 1063 0124 03       		.uleb128 0x3
 1064 0125 08       		.uleb128 0x8
 1065 0126 3A       		.uleb128 0x3a
 1066 0127 0B       		.uleb128 0xb
 1067 0128 3B       		.uleb128 0x3b
 1068 0129 05       		.uleb128 0x5
 1069 012a 49       		.uleb128 0x49
 1070 012b 13       		.uleb128 0x13
 1071 012c 02       		.uleb128 0x2
 1072 012d 17       		.uleb128 0x17
 1073 012e 00       		.byte	0
 1074 012f 00       		.byte	0
 1075 0130 15       		.uleb128 0x15
 1076 0131 34       		.uleb128 0x34
 1077 0132 00       		.byte	0
 1078 0133 03       		.uleb128 0x3
 1079 0134 0E       		.uleb128 0xe
 1080 0135 3A       		.uleb128 0x3a
 1081 0136 0B       		.uleb128 0xb
 1082 0137 3B       		.uleb128 0x3b
 1083 0138 0B       		.uleb128 0xb
 1084 0139 49       		.uleb128 0x49
 1085 013a 13       		.uleb128 0x13
 1086 013b 3F       		.uleb128 0x3f
 1087 013c 19       		.uleb128 0x19
 1088 013d 3C       		.uleb128 0x3c
 1089 013e 19       		.uleb128 0x19
 1090 013f 00       		.byte	0
 1091 0140 00       		.byte	0
 1092 0141 16       		.uleb128 0x16
 1093 0142 2E       		.uleb128 0x2e
 1094 0143 00       		.byte	0
 1095 0144 3F       		.uleb128 0x3f
 1096 0145 19       		.uleb128 0x19
 1097 0146 3C       		.uleb128 0x3c
 1098 0147 19       		.uleb128 0x19
 1099 0148 6E       		.uleb128 0x6e
 1100 0149 0E       		.uleb128 0xe
 1101 014a 03       		.uleb128 0x3
 1102 014b 0E       		.uleb128 0xe
 1103 014c 3A       		.uleb128 0x3a
 1104 014d 0B       		.uleb128 0xb
 1105 014e 3B       		.uleb128 0x3b
 1106 014f 0B       		.uleb128 0xb
 1107 0150 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 37


 1108 0151 00       		.byte	0
 1109 0152 00       		.byte	0
 1110              		.section	.debug_loc,"",%progbits
 1111              	.Ldebug_loc0:
 1112              	.LLST0:
 1113 0000 04000000 		.4byte	.LVL4
 1114 0004 12000000 		.4byte	.LVL5
 1115 0008 0100     		.2byte	0x1
 1116 000a 53       		.byte	0x53
 1117 000b 1E000000 		.4byte	.LVL6
 1118 000f 94000000 		.4byte	.LVL10
 1119 0013 0100     		.2byte	0x1
 1120 0015 50       		.byte	0x50
 1121 0016 94000000 		.4byte	.LVL10
 1122 001a 96000000 		.4byte	.LVL11
 1123 001e 0500     		.2byte	0x5
 1124 0020 70       		.byte	0x70
 1125 0021 00       		.sleb128 0
 1126 0022 31       		.byte	0x31
 1127 0023 25       		.byte	0x25
 1128 0024 9F       		.byte	0x9f
 1129 0025 9C000000 		.4byte	.LVL12
 1130 0029 B0000000 		.4byte	.LFE5
 1131 002d 0100     		.2byte	0x1
 1132 002f 53       		.byte	0x53
 1133 0030 00000000 		.4byte	0
 1134 0034 00000000 		.4byte	0
 1135              	.LLST1:
 1136 0038 34000000 		.4byte	.LVL7
 1137 003c 90000000 		.4byte	.LVL8
 1138 0040 0100     		.2byte	0x1
 1139 0042 52       		.byte	0x52
 1140 0043 00000000 		.4byte	0
 1141 0047 00000000 		.4byte	0
 1142              	.LLST2:
 1143 004b 00000000 		.4byte	.LVL3
 1144 004f 1E000000 		.4byte	.LVL6
 1145 0053 0200     		.2byte	0x2
 1146 0055 31       		.byte	0x31
 1147 0056 9F       		.byte	0x9f
 1148 0057 1E000000 		.4byte	.LVL6
 1149 005b 92000000 		.4byte	.LVL9
 1150 005f 0100     		.2byte	0x1
 1151 0061 53       		.byte	0x53
 1152 0062 94000000 		.4byte	.LVL10
 1153 0066 9C000000 		.4byte	.LVL12
 1154 006a 0100     		.2byte	0x1
 1155 006c 53       		.byte	0x53
 1156 006d 9C000000 		.4byte	.LVL12
 1157 0071 B0000000 		.4byte	.LFE5
 1158 0075 0200     		.2byte	0x2
 1159 0077 31       		.byte	0x31
 1160 0078 9F       		.byte	0x9f
 1161 0079 00000000 		.4byte	0
 1162 007d 00000000 		.4byte	0
 1163              		.section	.debug_aranges,"",%progbits
 1164 0000 44000000 		.4byte	0x44
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 38


 1165 0004 0200     		.2byte	0x2
 1166 0006 00000000 		.4byte	.Ldebug_info0
 1167 000a 04       		.byte	0x4
 1168 000b 00       		.byte	0
 1169 000c 0000     		.2byte	0
 1170 000e 0000     		.2byte	0
 1171 0010 00000000 		.4byte	.LFB0
 1172 0014 30000000 		.4byte	.LFE0-.LFB0
 1173 0018 00000000 		.4byte	.LFB1
 1174 001c 38000000 		.4byte	.LFE1-.LFB1
 1175 0020 00000000 		.4byte	.LFB2
 1176 0024 40000000 		.4byte	.LFE2-.LFB2
 1177 0028 00000000 		.4byte	.LFB3
 1178 002c 02000000 		.4byte	.LFE3-.LFB3
 1179 0030 00000000 		.4byte	.LFB4
 1180 0034 08000000 		.4byte	.LFE4-.LFB4
 1181 0038 00000000 		.4byte	.LFB5
 1182 003c B0000000 		.4byte	.LFE5-.LFB5
 1183 0040 00000000 		.4byte	0
 1184 0044 00000000 		.4byte	0
 1185              		.section	.debug_ranges,"",%progbits
 1186              	.Ldebug_ranges0:
 1187 0000 00000000 		.4byte	.LFB0
 1188 0004 30000000 		.4byte	.LFE0
 1189 0008 00000000 		.4byte	.LFB1
 1190 000c 38000000 		.4byte	.LFE1
 1191 0010 00000000 		.4byte	.LFB2
 1192 0014 40000000 		.4byte	.LFE2
 1193 0018 00000000 		.4byte	.LFB3
 1194 001c 02000000 		.4byte	.LFE3
 1195 0020 00000000 		.4byte	.LFB4
 1196 0024 08000000 		.4byte	.LFE4
 1197 0028 00000000 		.4byte	.LFB5
 1198 002c B0000000 		.4byte	.LFE5
 1199 0030 00000000 		.4byte	0
 1200 0034 00000000 		.4byte	0
 1201              		.section	.debug_line,"",%progbits
 1202              	.Ldebug_line0:
 1203 0000 35010000 		.section	.debug_str,"MS",%progbits,1
 1203      02007E00 
 1203      00000201 
 1203      FB0E0D00 
 1203      01010101 
 1204              	.LASF46:
 1205 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 1205      4152545F 
 1205      45505F33 
 1205      5F495352 
 1205      00
 1206              	.LASF43:
 1207 0011 61726245 		.ascii	"arbEp\000"
 1207      7000
 1208              	.LASF55:
 1209 0017 55534255 		.ascii	"USBUART_ReInitComponent\000"
 1209      4152545F 
 1209      5265496E 
 1209      6974436F 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 39


 1209      6D706F6E 
 1210              	.LASF29:
 1211 002f 65704372 		.ascii	"epCr0\000"
 1211      3000
 1212              	.LASF11:
 1213 0035 666C6F61 		.ascii	"float\000"
 1213      7400
 1214              	.LASF56:
 1215 003b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1215      43313120 
 1215      352E342E 
 1215      31203230 
 1215      31363036 
 1216 006e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1216      20726576 
 1216      6973696F 
 1216      6E203233 
 1216      37373135 
 1217 00a1 31202D66 		.ascii	"1 -ffunction-sections -ffat-lto-objects\000"
 1217      66756E63 
 1217      74696F6E 
 1217      2D736563 
 1217      74696F6E 
 1218              	.LASF34:
 1219 00c9 72657365 		.ascii	"reserved\000"
 1219      72766564 
 1219      00
 1220              	.LASF3:
 1221 00d2 73686F72 		.ascii	"short unsigned int\000"
 1221      7420756E 
 1221      7369676E 
 1221      65642069 
 1221      6E7400
 1222              	.LASF31:
 1223 00e5 65704366 		.ascii	"epCfg\000"
 1223      6700
 1224              	.LASF54:
 1225 00eb 55534255 		.ascii	"USBUART_EP_3_ISR_ExitCallback\000"
 1225      4152545F 
 1225      45505F33 
 1225      5F495352 
 1225      5F457869 
 1226              	.LASF48:
 1227 0109 55534255 		.ascii	"USBUART_SOF_ISR\000"
 1227      4152545F 
 1227      534F465F 
 1227      49535200 
 1228              	.LASF52:
 1229 0119 65705374 		.ascii	"epStatus\000"
 1229      61747573 
 1229      00
 1230              	.LASF51:
 1231 0122 61726249 		.ascii	"arbIntrStatus\000"
 1231      6E747253 
 1231      74617475 
 1231      7300
 1232              	.LASF27:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 40


 1233 0130 6570436E 		.ascii	"epCnt0\000"
 1233      743000
 1234              	.LASF28:
 1235 0137 6570436E 		.ascii	"epCnt1\000"
 1235      743100
 1236              	.LASF20:
 1237 013e 6570546F 		.ascii	"epToggle\000"
 1237      67676C65 
 1237      00
 1238              	.LASF59:
 1239 0147 55534255 		.ascii	"USBUART_EP\000"
 1239      4152545F 
 1239      455000
 1240              	.LASF14:
 1241 0152 72656738 		.ascii	"reg8\000"
 1241      00
 1242              	.LASF5:
 1243 0157 6C6F6E67 		.ascii	"long unsigned int\000"
 1243      20756E73 
 1243      69676E65 
 1243      6420696E 
 1243      7400
 1244              	.LASF21:
 1245 0169 61646472 		.ascii	"addr\000"
 1245      00
 1246              	.LASF33:
 1247 016e 65705372 		.ascii	"epSr\000"
 1247      00
 1248              	.LASF42:
 1249 0173 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 1249      4152545F 
 1249      7369655F 
 1249      6570735F 
 1249      73747275 
 1250              	.LASF1:
 1251 018a 756E7369 		.ascii	"unsigned char\000"
 1251      676E6564 
 1251      20636861 
 1251      7200
 1252              	.LASF57:
 1253 0198 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 1253      72617465 
 1253      645F536F 
 1253      75726365 
 1253      5C50536F 
 1254              	.LASF35:
 1255 01bf 72775761 		.ascii	"rwWa\000"
 1255      00
 1256              	.LASF12:
 1257 01c4 646F7562 		.ascii	"double\000"
 1257      6C6500
 1258              	.LASF44:
 1259 01cb 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 1259      4152545F 
 1259      6172625F 
 1259      6570735F 
 1259      73747275 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 41


 1260              	.LASF23:
 1261 01e2 62756666 		.ascii	"buffOffset\000"
 1261      4F666673 
 1261      657400
 1262              	.LASF36:
 1263 01ed 72775761 		.ascii	"rwWaMsb\000"
 1263      4D736200 
 1264              	.LASF10:
 1265 01f5 75696E74 		.ascii	"uint16\000"
 1265      313600
 1266              	.LASF18:
 1267 01fc 61706945 		.ascii	"apiEpState\000"
 1267      70537461 
 1267      746500
 1268              	.LASF39:
 1269 0207 72774472 		.ascii	"rwDr\000"
 1269      00
 1270              	.LASF8:
 1271 020c 756E7369 		.ascii	"unsigned int\000"
 1271      676E6564 
 1271      20696E74 
 1271      00
 1272              	.LASF50:
 1273 0219 55534255 		.ascii	"USBUART_ARB_ISR\000"
 1273      4152545F 
 1273      4152425F 
 1273      49535200 
 1274              	.LASF38:
 1275 0229 72775261 		.ascii	"rwRaMsb\000"
 1275      4D736200 
 1276              	.LASF7:
 1277 0231 6C6F6E67 		.ascii	"long long unsigned int\000"
 1277      206C6F6E 
 1277      6720756E 
 1277      7369676E 
 1277      65642069 
 1278              	.LASF19:
 1279 0248 68774570 		.ascii	"hwEpState\000"
 1279      53746174 
 1279      6500
 1280              	.LASF30:
 1281 0252 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 1281      4152545F 
 1281      7369655F 
 1281      65705F73 
 1281      74727563 
 1282              	.LASF32:
 1283 0268 6570496E 		.ascii	"epIntEn\000"
 1283      74456E00 
 1284              	.LASF16:
 1285 0270 73697A65 		.ascii	"sizetype\000"
 1285      74797065 
 1285      00
 1286              	.LASF40:
 1287 0279 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 1287      4152545F 
 1287      6172625F 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 42


 1287      65705F73 
 1287      74727563 
 1288              	.LASF22:
 1289 028f 65704D6F 		.ascii	"epMode\000"
 1289      646500
 1290              	.LASF6:
 1291 0296 6C6F6E67 		.ascii	"long long int\000"
 1291      206C6F6E 
 1291      6720696E 
 1291      7400
 1292              	.LASF13:
 1293 02a4 63686172 		.ascii	"char\000"
 1293      00
 1294              	.LASF24:
 1295 02a9 62756666 		.ascii	"bufferSize\000"
 1295      65725369 
 1295      7A6500
 1296              	.LASF45:
 1297 02b4 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 1297      4152545F 
 1297      45505F32 
 1297      5F495352 
 1297      00
 1298              	.LASF2:
 1299 02c5 73686F72 		.ascii	"short int\000"
 1299      7420696E 
 1299      7400
 1300              	.LASF37:
 1301 02cf 72775261 		.ascii	"rwRa\000"
 1301      00
 1302              	.LASF49:
 1303 02d4 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 1303      4152545F 
 1303      4255535F 
 1303      52455345 
 1303      545F4953 
 1304              	.LASF9:
 1305 02ea 75696E74 		.ascii	"uint8\000"
 1305      3800
 1306              	.LASF58:
 1307 02f0 433A5C55 		.ascii	"C:\\Users\\ingan\\Documents\\PSoC Creator\\MegaDriv"
 1307      73657273 
 1307      5C696E67 
 1307      616E5C44 
 1307      6F63756D 
 1308 031e 655F706C 		.ascii	"e_player\\VGMPlayer_v0.7.cydsn\000"
 1308      61796572 
 1308      5C56474D 
 1308      506C6179 
 1308      65725F76 
 1309              	.LASF25:
 1310 033c 696E7465 		.ascii	"interface\000"
 1310      72666163 
 1310      6500
 1311              	.LASF4:
 1312 0346 6C6F6E67 		.ascii	"long int\000"
 1312      20696E74 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccvaISbx.s 			page 43


 1312      00
 1313              	.LASF26:
 1314 034f 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 1314      42554152 
 1314      545F4550 
 1314      5F43544C 
 1314      5F424C4F 
 1315              	.LASF15:
 1316 0366 6C6F6E67 		.ascii	"long double\000"
 1316      20646F75 
 1316      626C6500 
 1317              	.LASF0:
 1318 0372 7369676E 		.ascii	"signed char\000"
 1318      65642063 
 1318      68617200 
 1319              	.LASF47:
 1320 037e 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 1320      4152545F 
 1320      45505F31 
 1320      5F495352 
 1320      00
 1321              	.LASF17:
 1322 038f 61747472 		.ascii	"attrib\000"
 1322      696200
 1323              	.LASF53:
 1324 0396 55534255 		.ascii	"USBUART_EP_2_ISR_EntryCallback\000"
 1324      4152545F 
 1324      45505F32 
 1324      5F495352 
 1324      5F456E74 
 1325              	.LASF41:
 1326 03b5 73696545 		.ascii	"sieEp\000"
 1326      7000
 1327              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
