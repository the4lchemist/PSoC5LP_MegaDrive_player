ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBUART_initVar
  20              		.bss
  21              		.type	USBUART_initVar, %object
  22              		.size	USBUART_initVar, 1
  23              	USBUART_initVar:
  24 0000 00       		.space	1
  25              		.comm	USBUART_DmaChan,9,4
  26              		.comm	USBUART_DmaTd,9,4
  27              		.section	.text.USBUART_Start,"ax",%progbits
  28              		.align	2
  29              		.global	USBUART_Start
  30              		.thumb
  31              		.thumb_func
  32              		.type	USBUART_Start, %function
  33              	USBUART_Start:
  34              	.LFB0:
  35              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 2


  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             (uint8) USBUART_ep1_dma_CHANNEL,
  51:Generated_Source\PSoC5/USBUART.c ****             (uint8) USBUART_ep2_dma_CHANNEL,
  52:Generated_Source\PSoC5/USBUART.c ****             (uint8) USBUART_ep3_dma_CHANNEL,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 3


  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             USBUART_ep1__TD_TERMOUT_EN,
 116:Generated_Source\PSoC5/USBUART.c ****             USBUART_ep2__TD_TERMOUT_EN,
 117:Generated_Source\PSoC5/USBUART.c ****             USBUART_ep3__TD_TERMOUT_EN,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 4


 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
  36              		.loc 1 187 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 8
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 5


  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  48 0006 0346     		mov	r3, r0
  49 0008 0A46     		mov	r2, r1
  50 000a FB71     		strb	r3, [r7, #7]
  51 000c 1346     		mov	r3, r2
  52 000e BB71     		strb	r3, [r7, #6]
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
  53              		.loc 1 188 0
  54 0010 094B     		ldr	r3, .L3
  55 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  56 0014 002B     		cmp	r3, #0
  57 0016 04D1     		bne	.L2
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
  58              		.loc 1 190 0
  59 0018 FFF7FEFF 		bl	USBUART_Init
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
  60              		.loc 1 191 0
  61 001c 064B     		ldr	r3, .L3
  62 001e 0122     		movs	r2, #1
  63 0020 1A70     		strb	r2, [r3]
  64              	.L2:
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
  65              		.loc 1 194 0
  66 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  67 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  68 0026 1146     		mov	r1, r2
  69 0028 1846     		mov	r0, r3
  70 002a FFF7FEFF 		bl	USBUART_InitComponent
 195:Generated_Source\PSoC5/USBUART.c **** }
  71              		.loc 1 195 0
  72 002e 00BF     		nop
  73 0030 0837     		adds	r7, r7, #8
  74              		.cfi_def_cfa_offset 8
  75 0032 BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 0034 80BD     		pop	{r7, pc}
  79              	.L4:
  80 0036 00BF     		.align	2
  81              	.L3:
  82 0038 00000000 		.word	USBUART_initVar
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	USBUART_Start, .-USBUART_Start
  86              		.section	.text.USBUART_Init,"ax",%progbits
  87              		.align	2
  88              		.global	USBUART_Init
  89              		.thumb
  90              		.thumb_func
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 6


  91              		.type	USBUART_Init, %function
  92              	USBUART_Init:
  93              	.LFB1:
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  94              		.loc 1 212 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 82B0     		sub	sp, sp, #8
 103              		.cfi_def_cfa_offset 16
 104 0004 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 7


 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 106              		.loc 1 250 0
 107 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 108 000a 0346     		mov	r3, r0
 109 000c 7B71     		strb	r3, [r7, #5]
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 110              		.loc 1 257 0
 111 000e 5E4A     		ldr	r2, .L8
 112 0010 5D4B     		ldr	r3, .L8
 113 0012 1B78     		ldrb	r3, [r3]
 114 0014 DBB2     		uxtb	r3, r3
 115 0016 43F00103 		orr	r3, r3, #1
 116 001a DBB2     		uxtb	r3, r3
 117 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 118              		.loc 1 259 0
 119 001e 5B4A     		ldr	r2, .L8+4
 120 0020 5A4B     		ldr	r3, .L8+4
 121 0022 1B78     		ldrb	r3, [r3]
 122 0024 DBB2     		uxtb	r3, r3
 123 0026 43F00103 		orr	r3, r3, #1
 124 002a DBB2     		uxtb	r3, r3
 125 002c 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 126              		.loc 1 262 0
 127 002e 584B     		ldr	r3, .L8+8
 128 0030 0122     		movs	r2, #1
 129 0032 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 130              		.loc 1 264 0
 131 0034 574B     		ldr	r3, .L8+12
 132 0036 0222     		movs	r2, #2
 133 0038 1A70     		strb	r2, [r3]
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 8


 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
 134              		.loc 1 268 0
 135 003a 574A     		ldr	r2, .L8+16
 136 003c 564B     		ldr	r3, .L8+16
 137 003e 1B78     		ldrb	r3, [r3]
 138 0040 DBB2     		uxtb	r3, r3
 139 0042 03F07F03 		and	r3, r3, #127
 140 0046 DBB2     		uxtb	r3, r3
 141 0048 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 142              		.loc 1 269 0
 143 004a 0020     		movs	r0, #0
 144 004c FFF7FEFF 		bl	CyDelayUs
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
 145              		.loc 1 274 0
 146 0050 524A     		ldr	r2, .L8+20
 147 0052 524B     		ldr	r3, .L8+20
 148 0054 1B78     		ldrb	r3, [r3]
 149 0056 DBB2     		uxtb	r3, r3
 150 0058 23F00603 		bic	r3, r3, #6
 151 005c DBB2     		uxtb	r3, r3
 152 005e 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
 153              		.loc 1 278 0
 154 0060 4F4A     		ldr	r2, .L8+24
 155 0062 4F4B     		ldr	r3, .L8+24
 156 0064 1B78     		ldrb	r3, [r3]
 157 0066 DBB2     		uxtb	r3, r3
 158 0068 23F02003 		bic	r3, r3, #32
 159 006c DBB2     		uxtb	r3, r3
 160 006e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 161              		.loc 1 281 0
 162 0070 4A4A     		ldr	r2, .L8+20
 163 0072 4A4B     		ldr	r3, .L8+20
 164 0074 1B78     		ldrb	r3, [r3]
 165 0076 DBB2     		uxtb	r3, r3
 166 0078 43F00103 		orr	r3, r3, #1
 167 007c DBB2     		uxtb	r3, r3
 168 007e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
 169              		.loc 1 283 0
 170 0080 0120     		movs	r0, #1
 171 0082 FFF7FEFF 		bl	CyDelayUs
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 9


 172              		.loc 1 285 0
 173 0086 2820     		movs	r0, #40
 174 0088 FFF7FEFF 		bl	CyDelayUs
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
 175              		.loc 1 287 0
 176 008c 454A     		ldr	r2, .L8+28
 177 008e 454B     		ldr	r3, .L8+28
 178 0090 1B78     		ldrb	r3, [r3]
 179 0092 DBB2     		uxtb	r3, r3
 180 0094 03F07F03 		and	r3, r3, #127
 181 0098 DBB2     		uxtb	r3, r3
 182 009a 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 183              		.loc 1 288 0
 184 009c 414A     		ldr	r2, .L8+28
 185 009e 414B     		ldr	r3, .L8+28
 186 00a0 1B78     		ldrb	r3, [r3]
 187 00a2 DBB2     		uxtb	r3, r3
 188 00a4 23F04003 		bic	r3, r3, #64
 189 00a8 DBB2     		uxtb	r3, r3
 190 00aa 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 191              		.loc 1 291 0
 192 00ac 3B4A     		ldr	r2, .L8+20
 193 00ae 3B4B     		ldr	r3, .L8+20
 194 00b0 1B78     		ldrb	r3, [r3]
 195 00b2 DBB2     		uxtb	r3, r3
 196 00b4 43F00203 		orr	r3, r3, #2
 197 00b8 DBB2     		uxtb	r3, r3
 198 00ba 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 199              		.loc 1 292 0
 200 00bc 0220     		movs	r0, #2
 201 00be FFF7FEFF 		bl	CyDelayUs
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 202              		.loc 1 294 0
 203 00c2 364A     		ldr	r2, .L8+20
 204 00c4 354B     		ldr	r3, .L8+20
 205 00c6 1B78     		ldrb	r3, [r3]
 206 00c8 DBB2     		uxtb	r3, r3
 207 00ca 43F00403 		orr	r3, r3, #4
 208 00ce DBB2     		uxtb	r3, r3
 209 00d0 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 210              		.loc 1 297 0
 211 00d2 354B     		ldr	r3, .L8+32
 212 00d4 0022     		movs	r2, #0
 213 00d6 1A70     		strb	r2, [r3]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 214              		.loc 1 298 0
 215 00d8 344B     		ldr	r3, .L8+36
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 10


 216 00da 0022     		movs	r2, #0
 217 00dc 1A70     		strb	r2, [r3]
 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 218              		.loc 1 302 0
 219 00de 0023     		movs	r3, #0
 220 00e0 FB80     		strh	r3, [r7, #6]	@ movhi
 221 00e2 06E0     		b	.L6
 222              	.L7:
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 223              		.loc 1 304 0 discriminator 3
 224 00e4 FB88     		ldrh	r3, [r7, #6]
 225 00e6 324A     		ldr	r2, .L8+40
 226 00e8 FF21     		movs	r1, #255
 227 00ea D154     		strb	r1, [r2, r3]
 302:Generated_Source\PSoC5/USBUART.c ****     {
 228              		.loc 1 302 0 discriminator 3
 229 00ec FB88     		ldrh	r3, [r7, #6]	@ movhi
 230 00ee 0133     		adds	r3, r3, #1
 231 00f0 FB80     		strh	r3, [r7, #6]	@ movhi
 232              	.L6:
 302:Generated_Source\PSoC5/USBUART.c ****     {
 233              		.loc 1 302 0 is_stmt 0 discriminator 1
 234 00f2 FB88     		ldrh	r3, [r7, #6]
 235 00f4 082B     		cmp	r3, #8
 236 00f6 F5D9     		bls	.L7
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 237              		.loc 1 312 0 is_stmt 1
 238 00f8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 239 00fa 1846     		mov	r0, r3
 240 00fc FFF7FEFF 		bl	CyExitCriticalSection
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 11


 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 241              		.loc 1 331 0
 242 0100 0721     		movs	r1, #7
 243 0102 1720     		movs	r0, #23
 244 0104 FFF7FEFF 		bl	CyIntSetPriority
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 245              		.loc 1 332 0
 246 0108 2A49     		ldr	r1, .L8+44
 247 010a 1720     		movs	r0, #23
 248 010c FFF7FEFF 		bl	CyIntSetVector
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 249              		.loc 1 335 0
 250 0110 0721     		movs	r1, #7
 251 0112 1820     		movs	r0, #24
 252 0114 FFF7FEFF 		bl	CyIntSetPriority
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 253              		.loc 1 336 0
 254 0118 2749     		ldr	r1, .L8+48
 255 011a 1820     		movs	r0, #24
 256 011c FFF7FEFF 		bl	CyIntSetVector
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 257              		.loc 1 340 0
 258 0120 0721     		movs	r1, #7
 259 0122 1520     		movs	r0, #21
 260 0124 FFF7FEFF 		bl	CyIntSetPriority
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 261              		.loc 1 341 0
 262 0128 2449     		ldr	r1, .L8+52
 263 012a 1520     		movs	r0, #21
 264 012c FFF7FEFF 		bl	CyIntSetVector
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 265              		.loc 1 346 0
 266 0130 0721     		movs	r1, #7
 267 0132 0020     		movs	r0, #0
 268 0134 FFF7FEFF 		bl	CyIntSetPriority
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 269              		.loc 1 347 0
 270 0138 2149     		ldr	r1, .L8+56
 271 013a 0020     		movs	r0, #0
 272 013c FFF7FEFF 		bl	CyIntSetVector
 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 273              		.loc 1 352 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 12


 274 0140 0721     		movs	r1, #7
 275 0142 0120     		movs	r0, #1
 276 0144 FFF7FEFF 		bl	CyIntSetPriority
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 277              		.loc 1 353 0
 278 0148 1E49     		ldr	r1, .L8+60
 279 014a 0120     		movs	r0, #1
 280 014c FFF7FEFF 		bl	CyIntSetVector
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 281              		.loc 1 358 0
 282 0150 0721     		movs	r1, #7
 283 0152 0220     		movs	r0, #2
 284 0154 FFF7FEFF 		bl	CyIntSetPriority
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 285              		.loc 1 359 0
 286 0158 1B49     		ldr	r1, .L8+64
 287 015a 0220     		movs	r0, #2
 288 015c FFF7FEFF 		bl	CyIntSetVector
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 13


 289              		.loc 1 394 0
 290 0160 0021     		movs	r1, #0
 291 0162 1620     		movs	r0, #22
 292 0164 FFF7FEFF 		bl	CyIntSetPriority
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 293              		.loc 1 395 0
 294 0168 1849     		ldr	r1, .L8+68
 295 016a 1620     		movs	r0, #22
 296 016c FFF7FEFF 		bl	CyIntSetVector
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 297              		.loc 1 401 0
 298 0170 0721     		movs	r1, #7
 299 0172 0C20     		movs	r0, #12
 300 0174 FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 301              		.loc 1 402 0
 302 0178 1549     		ldr	r1, .L8+72
 303 017a 0C20     		movs	r0, #12
 304 017c FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
 305              		.loc 1 409 0
 306 0180 00BF     		nop
 307 0182 0837     		adds	r7, r7, #8
 308              		.cfi_def_cfa_offset 8
 309 0184 BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 0186 80BD     		pop	{r7, pc}
 313              	.L9:
 314              		.align	2
 315              	.L8:
 316 0188 A5430040 		.word	1073759141
 317 018c B5430040 		.word	1073759157
 318 0190 9D600040 		.word	1073766557
 319 0194 09600040 		.word	1073766409
 320 0198 10600040 		.word	1073766416
 321 019c 94430040 		.word	1073759124
 322 01a0 12600040 		.word	1073766418
 323 01a4 F8510040 		.word	1073762808
 324 01a8 84600040 		.word	1073766532
 325 01ac 85600040 		.word	1073766533
 326 01b0 00000000 		.word	USBUART_DmaTd
 327 01b4 00000000 		.word	USBUART_BUS_RESET_ISR
 328 01b8 00000000 		.word	USBUART_EP_0_ISR
 329 01bc 00000000 		.word	USBUART_SOF_ISR
 330 01c0 00000000 		.word	USBUART_EP_1_ISR
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 14


 331 01c4 00000000 		.word	USBUART_EP_2_ISR
 332 01c8 00000000 		.word	USBUART_EP_3_ISR
 333 01cc 00000000 		.word	USBUART_ARB_ISR
 334 01d0 00000000 		.word	USBUART_DP_ISR
 335              		.cfi_endproc
 336              	.LFE1:
 337              		.size	USBUART_Init, .-USBUART_Init
 338              		.section	.text.USBUART_InitComponent,"ax",%progbits
 339              		.align	2
 340              		.global	USBUART_InitComponent
 341              		.thumb
 342              		.thumb_func
 343              		.type	USBUART_InitComponent, %function
 344              	USBUART_InitComponent:
 345              	.LFB2:
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 15


 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 346              		.loc 1 461 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 8
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 82B0     		sub	sp, sp, #8
 355              		.cfi_def_cfa_offset 16
 356 0004 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 358 0006 0346     		mov	r3, r0
 359 0008 0A46     		mov	r2, r1
 360 000a FB71     		strb	r3, [r7, #7]
 361 000c 1346     		mov	r3, r2
 362 000e BB71     		strb	r3, [r7, #6]
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 363              		.loc 1 476 0
 364 0010 334A     		ldr	r2, .L16
 365 0012 FB79     		ldrb	r3, [r7, #7]
 366 0014 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 367              		.loc 1 479 0
 368 0016 334B     		ldr	r3, .L16+4
 369 0018 0022     		movs	r2, #0
 370 001a 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 371              		.loc 1 480 0
 372 001c 324B     		ldr	r3, .L16+8
 373 001e 0022     		movs	r2, #0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 16


 374 0020 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 375              		.loc 1 481 0
 376 0022 324B     		ldr	r3, .L16+12
 377 0024 0022     		movs	r2, #0
 378 0026 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 379              		.loc 1 482 0
 380 0028 314B     		ldr	r3, .L16+16
 381 002a 0022     		movs	r2, #0
 382 002c 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 383              		.loc 1 483 0
 384 002e 314B     		ldr	r3, .L16+20
 385 0030 0022     		movs	r2, #0
 386 0032 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 387              		.loc 1 484 0
 388 0034 304B     		ldr	r3, .L16+24
 389 0036 0022     		movs	r2, #0
 390 0038 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 391              		.loc 1 485 0
 392 003a 304B     		ldr	r3, .L16+28
 393 003c 0022     		movs	r2, #0
 394 003e 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 395              		.loc 1 493 0
 396 0040 2F4B     		ldr	r3, .L16+32
 397 0042 4FF40002 		mov	r2, #8388608
 398 0046 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 399              		.loc 1 494 0
 400 0048 2D4B     		ldr	r3, .L16+32
 401 004a 4FF08072 		mov	r2, #16777216
 402 004e 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 403              		.loc 1 497 0
 404 0050 2B4B     		ldr	r3, .L16+32
 405 0052 4FF40012 		mov	r2, #2097152
 406 0056 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 407              		.loc 1 501 0
 408 0058 294B     		ldr	r3, .L16+32
 409 005a 0122     		movs	r2, #1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 17


 410 005c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 411              		.loc 1 505 0
 412 005e 284B     		ldr	r3, .L16+32
 413 0060 0222     		movs	r2, #2
 414 0062 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 415              		.loc 1 509 0
 416 0064 264B     		ldr	r3, .L16+32
 417 0066 0422     		movs	r2, #4
 418 0068 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 419              		.loc 1 535 0
 420 006a 264B     		ldr	r3, .L16+36
 421 006c 0722     		movs	r2, #7
 422 006e 1A70     		strb	r2, [r3]
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 423              		.loc 1 538 0
 424 0070 234B     		ldr	r3, .L16+32
 425 0072 4FF48002 		mov	r2, #4194304
 426 0076 1A60     		str	r2, [r3]
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 18


 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 427              		.loc 1 545 0
 428 0078 234B     		ldr	r3, .L16+40
 429 007a 2022     		movs	r2, #32
 430 007c 1A70     		strb	r2, [r3]
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 431              		.loc 1 573 0
 432 007e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 433 0080 002B     		cmp	r3, #0
 434 0082 02D0     		beq	.L12
 435 0084 012B     		cmp	r3, #1
 436 0086 09D0     		beq	.L13
 437 0088 11E0     		b	.L15
 438              	.L12:
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 439              		.loc 1 577 0
 440 008a 204A     		ldr	r2, .L16+44
 441 008c 1F4B     		ldr	r3, .L16+44
 442 008e 1B78     		ldrb	r3, [r3]
 443 0090 DBB2     		uxtb	r3, r3
 444 0092 23F00103 		bic	r3, r3, #1
 445 0096 DBB2     		uxtb	r3, r3
 446 0098 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c ****         break;
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 19


 447              		.loc 1 578 0
 448 009a 11E0     		b	.L14
 449              	.L13:
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 450              		.loc 1 582 0
 451 009c 1B4A     		ldr	r2, .L16+44
 452 009e 1B4B     		ldr	r3, .L16+44
 453 00a0 1B78     		ldrb	r3, [r3]
 454 00a2 DBB2     		uxtb	r3, r3
 455 00a4 43F00103 		orr	r3, r3, #1
 456 00a8 DBB2     		uxtb	r3, r3
 457 00aa 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 458              		.loc 1 583 0
 459 00ac 08E0     		b	.L14
 460              	.L15:
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 461              		.loc 1 591 0
 462 00ae 174A     		ldr	r2, .L16+44
 463 00b0 164B     		ldr	r3, .L16+44
 464 00b2 1B78     		ldrb	r3, [r3]
 465 00b4 DBB2     		uxtb	r3, r3
 466 00b6 43F00103 		orr	r3, r3, #1
 467 00ba DBB2     		uxtb	r3, r3
 468 00bc 1370     		strb	r3, [r2]
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 469              		.loc 1 593 0
 470 00be 00BF     		nop
 471              	.L14:
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 20


 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 472              		.loc 1 627 0
 473 00c0 134B     		ldr	r3, .L16+48
 474 00c2 0322     		movs	r2, #3
 475 00c4 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 476              		.loc 1 630 0
 477 00c6 134B     		ldr	r3, .L16+52
 478 00c8 8022     		movs	r2, #128
 479 00ca 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 480              		.loc 1 631 0
 481 00cc 0120     		movs	r0, #1
 482 00ce FFF7FEFF 		bl	CyDelayCycles
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 483              		.loc 1 635 0
 484 00d2 114B     		ldr	r3, .L16+56
 485 00d4 0422     		movs	r2, #4
 486 00d6 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC5/USBUART.c **** }
 487              		.loc 1 636 0
 488 00d8 00BF     		nop
 489 00da 0837     		adds	r7, r7, #8
 490              		.cfi_def_cfa_offset 8
 491 00dc BD46     		mov	sp, r7
 492              		.cfi_def_cfa_register 13
 493              		@ sp needed
 494 00de 80BD     		pop	{r7, pc}
 495              	.L17:
 496              		.align	2
 497              	.L16:
 498 00e0 00000000 		.word	USBUART_device
 499 00e4 00000000 		.word	USBUART_transferState
 500 00e8 00000000 		.word	USBUART_configurationChanged
 501 00ec 00000000 		.word	USBUART_configuration
 502 00f0 00000000 		.word	USBUART_interfaceNumber
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 21


 503 00f4 00000000 		.word	USBUART_deviceAddress
 504 00f8 00000000 		.word	USBUART_deviceStatus
 505 00fc 00000000 		.word	USBUART_lastPacketSize
 506 0100 00E100E0 		.word	-536813312
 507 0104 9E600040 		.word	1073766558
 508 0108 9C600040 		.word	1073766556
 509 010c 09600040 		.word	1073766409
 510 0110 28600040 		.word	1073766440
 511 0114 08600040 		.word	1073766408
 512 0118 12600040 		.word	1073766418
 513              		.cfi_endproc
 514              	.LFE2:
 515              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 516              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 517              		.align	2
 518              		.global	USBUART_ReInitComponent
 519              		.thumb
 520              		.thumb_func
 521              		.type	USBUART_ReInitComponent, %function
 522              	USBUART_ReInitComponent:
 523              	.LFB3:
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 22


 524              		.loc 1 672 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529 0000 80B4     		push	{r7}
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 7, -4
 532 0002 00AF     		add	r7, sp, #0
 533              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 534              		.loc 1 686 0
 535 0004 0F4B     		ldr	r3, .L19
 536 0006 0022     		movs	r2, #0
 537 0008 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 538              		.loc 1 687 0
 539 000a 0F4B     		ldr	r3, .L19+4
 540 000c 0022     		movs	r2, #0
 541 000e 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 542              		.loc 1 688 0
 543 0010 0E4B     		ldr	r3, .L19+8
 544 0012 0022     		movs	r2, #0
 545 0014 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 546              		.loc 1 689 0
 547 0016 0E4B     		ldr	r3, .L19+12
 548 0018 0022     		movs	r2, #0
 549 001a 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 550              		.loc 1 690 0
 551 001c 0D4B     		ldr	r3, .L19+16
 552 001e 0022     		movs	r2, #0
 553 0020 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 554              		.loc 1 691 0
 555 0022 0D4B     		ldr	r3, .L19+20
 556 0024 0022     		movs	r2, #0
 557 0026 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 558              		.loc 1 692 0
 559 0028 0C4B     		ldr	r3, .L19+24
 560 002a 0022     		movs	r2, #0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 23


 561 002c 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 562              		.loc 1 699 0
 563 002e 0C4B     		ldr	r3, .L19+28
 564 0030 0322     		movs	r2, #3
 565 0032 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 566              		.loc 1 703 0
 567 0034 0B4B     		ldr	r3, .L19+32
 568 0036 8022     		movs	r2, #128
 569 0038 1A70     		strb	r2, [r3]
 704:Generated_Source\PSoC5/USBUART.c **** }
 570              		.loc 1 704 0
 571 003a 00BF     		nop
 572 003c BD46     		mov	sp, r7
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 003e 80BC     		pop	{r7}
 576              		.cfi_restore 7
 577              		.cfi_def_cfa_offset 0
 578 0040 7047     		bx	lr
 579              	.L20:
 580 0042 00BF     		.align	2
 581              	.L19:
 582 0044 00000000 		.word	USBUART_transferState
 583 0048 00000000 		.word	USBUART_configurationChanged
 584 004c 00000000 		.word	USBUART_configuration
 585 0050 00000000 		.word	USBUART_interfaceNumber
 586 0054 00000000 		.word	USBUART_deviceAddress
 587 0058 00000000 		.word	USBUART_deviceStatus
 588 005c 00000000 		.word	USBUART_lastPacketSize
 589 0060 28600040 		.word	1073766440
 590 0064 08600040 		.word	1073766408
 591              		.cfi_endproc
 592              	.LFE3:
 593              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 594              		.section	.text.USBUART_Stop,"ax",%progbits
 595              		.align	2
 596              		.global	USBUART_Stop
 597              		.thumb
 598              		.thumb_func
 599              		.type	USBUART_Stop, %function
 600              	USBUART_Stop:
 601              	.LFB4:
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 24


 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 602              		.loc 1 730 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 8
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606 0000 80B5     		push	{r7, lr}
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 0002 82B0     		sub	sp, sp, #8
 611              		.cfi_def_cfa_offset 16
 612 0004 00AF     		add	r7, sp, #0
 613              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 614              		.loc 1 735 0
 615 0006 0920     		movs	r0, #9
 616 0008 FFF7FEFF 		bl	USBUART_Stop_DMA
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 617              		.loc 1 738 0
 618 000c FFF7FEFF 		bl	CyEnterCriticalSection
 619 0010 0346     		mov	r3, r0
 620 0012 FB71     		strb	r3, [r7, #7]
 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 621              		.loc 1 741 0
 622 0014 324A     		ldr	r2, .L22
 623 0016 324B     		ldr	r3, .L22
 624 0018 1B78     		ldrb	r3, [r3]
 625 001a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 25


 626 001c 03F07F03 		and	r3, r3, #127
 627 0020 DBB2     		uxtb	r3, r3
 628 0022 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 629              		.loc 1 744 0
 630 0024 2F4A     		ldr	r2, .L22+4
 631 0026 2F4B     		ldr	r3, .L22+4
 632 0028 1B78     		ldrb	r3, [r3]
 633 002a DBB2     		uxtb	r3, r3
 634 002c 23F00403 		bic	r3, r3, #4
 635 0030 DBB2     		uxtb	r3, r3
 636 0032 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 637              		.loc 1 751 0
 638 0034 2C4A     		ldr	r2, .L22+8
 639 0036 2C4B     		ldr	r3, .L22+8
 640 0038 1B78     		ldrb	r3, [r3]
 641 003a DBB2     		uxtb	r3, r3
 642 003c 23F00103 		bic	r3, r3, #1
 643 0040 DBB2     		uxtb	r3, r3
 644 0042 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 645              		.loc 1 752 0
 646 0044 294A     		ldr	r2, .L22+12
 647 0046 294B     		ldr	r3, .L22+12
 648 0048 1B78     		ldrb	r3, [r3]
 649 004a DBB2     		uxtb	r3, r3
 650 004c 23F00103 		bic	r3, r3, #1
 651 0050 DBB2     		uxtb	r3, r3
 652 0052 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 653              		.loc 1 756 0
 654 0054 264A     		ldr	r2, .L22+16
 655 0056 264B     		ldr	r3, .L22+16
 656 0058 1B78     		ldrb	r3, [r3]
 657 005a DBB2     		uxtb	r3, r3
 658 005c 63F07F03 		orn	r3, r3, #127
 659 0060 DBB2     		uxtb	r3, r3
 660 0062 1370     		strb	r3, [r2]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 661              		.loc 1 757 0
 662 0064 224A     		ldr	r2, .L22+16
 663 0066 224B     		ldr	r3, .L22+16
 664 0068 1B78     		ldrb	r3, [r3]
 665 006a DBB2     		uxtb	r3, r3
 666 006c 43F04003 		orr	r3, r3, #64
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 26


 667 0070 DBB2     		uxtb	r3, r3
 668 0072 1370     		strb	r3, [r2]
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 669              		.loc 1 761 0
 670 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 671 0076 1846     		mov	r0, r3
 672 0078 FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC5/USBUART.c **** 
 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 673              		.loc 1 770 0
 674 007c 1D4B     		ldr	r3, .L22+20
 675 007e 4FF40002 		mov	r2, #8388608
 676 0082 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 677              		.loc 1 771 0
 678 0084 1B4B     		ldr	r3, .L22+20
 679 0086 4FF08072 		mov	r2, #16777216
 680 008a 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 681              		.loc 1 774 0
 682 008c 194B     		ldr	r3, .L22+20
 683 008e 4FF40012 		mov	r2, #2097152
 684 0092 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 685              		.loc 1 778 0
 686 0094 174B     		ldr	r3, .L22+20
 687 0096 0122     		movs	r2, #1
 688 0098 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 689              		.loc 1 782 0
 690 009a 164B     		ldr	r3, .L22+20
 691 009c 0222     		movs	r2, #2
 692 009e 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 693              		.loc 1 786 0
 694 00a0 144B     		ldr	r3, .L22+20
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 27


 695 00a2 0422     		movs	r2, #4
 696 00a4 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 697              		.loc 1 811 0
 698 00a6 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 699              		.loc 1 812 0
 700 00aa 134B     		ldr	r3, .L22+24
 701 00ac 4FF48052 		mov	r2, #4096
 702 00b0 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 703              		.loc 1 818 0
 704 00b2 124B     		ldr	r3, .L22+28
 705 00b4 0022     		movs	r2, #0
 706 00b6 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 707              		.loc 1 819 0
 708 00b8 114B     		ldr	r3, .L22+32
 709 00ba 0022     		movs	r2, #0
 710 00bc 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 711              		.loc 1 820 0
 712 00be 114B     		ldr	r3, .L22+36
 713 00c0 0022     		movs	r2, #0
 714 00c2 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 715              		.loc 1 821 0
 716 00c4 104B     		ldr	r3, .L22+40
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 28


 717 00c6 0022     		movs	r2, #0
 718 00c8 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 719              		.loc 1 822 0
 720 00ca 104B     		ldr	r3, .L22+44
 721 00cc 0022     		movs	r2, #0
 722 00ce 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 723              		.loc 1 825 0
 724 00d0 0F4B     		ldr	r3, .L22+48
 725 00d2 0022     		movs	r2, #0
 726 00d4 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/USBUART.c **** }
 727              		.loc 1 826 0
 728 00d6 00BF     		nop
 729 00d8 0837     		adds	r7, r7, #8
 730              		.cfi_def_cfa_offset 8
 731 00da BD46     		mov	sp, r7
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 00dc 80BD     		pop	{r7, pc}
 735              	.L23:
 736 00de 00BF     		.align	2
 737              	.L22:
 738 00e0 08600040 		.word	1073766408
 739 00e4 12600040 		.word	1073766418
 740 00e8 A5430040 		.word	1073759141
 741 00ec B5430040 		.word	1073759157
 742 00f0 F8510040 		.word	1073762808
 743 00f4 80E100E0 		.word	-536813184
 744 00f8 80E200E0 		.word	-536812928
 745 00fc 00000000 		.word	USBUART_configurationChanged
 746 0100 00000000 		.word	USBUART_configuration
 747 0104 00000000 		.word	USBUART_interfaceNumber
 748 0108 00000000 		.word	USBUART_deviceAddress
 749 010c 00000000 		.word	USBUART_deviceStatus
 750 0110 00000000 		.word	USBUART_initVar
 751              		.cfi_endproc
 752              	.LFE4:
 753              		.size	USBUART_Stop, .-USBUART_Stop
 754              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 755              		.align	2
 756              		.global	USBUART_CheckActivity
 757              		.thumb
 758              		.thumb_func
 759              		.type	USBUART_CheckActivity, %function
 760              	USBUART_CheckActivity:
 761              	.LFB5:
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 29


 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 762              		.loc 1 850 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 774              		.loc 1 851 0
 775 0006 0B4B     		ldr	r3, .L28
 776 0008 1B78     		ldrb	r3, [r3]
 777 000a FB71     		strb	r3, [r7, #7]
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 778              		.loc 1 854 0
 779 000c 094A     		ldr	r2, .L28
 780 000e FB79     		ldrb	r3, [r7, #7]
 781 0010 23F00403 		bic	r3, r3, #4
 782 0014 DBB2     		uxtb	r3, r3
 783 0016 1370     		strb	r3, [r2]
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 784              		.loc 1 857 0
 785 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 786 001a 03F00403 		and	r3, r3, #4
 787 001e 002B     		cmp	r3, #0
 788 0020 01D0     		beq	.L25
 789              		.loc 1 857 0 is_stmt 0 discriminator 1
 790 0022 0123     		movs	r3, #1
 791 0024 00E0     		b	.L26
 792              	.L25:
 793              		.loc 1 857 0 discriminator 2
 794 0026 0023     		movs	r3, #0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 30


 795              	.L26:
 858:Generated_Source\PSoC5/USBUART.c **** }
 796              		.loc 1 858 0 is_stmt 1 discriminator 4
 797 0028 1846     		mov	r0, r3
 798 002a 0C37     		adds	r7, r7, #12
 799              		.cfi_def_cfa_offset 4
 800 002c BD46     		mov	sp, r7
 801              		.cfi_def_cfa_register 13
 802              		@ sp needed
 803 002e 80BC     		pop	{r7}
 804              		.cfi_restore 7
 805              		.cfi_def_cfa_offset 0
 806 0030 7047     		bx	lr
 807              	.L29:
 808 0032 00BF     		.align	2
 809              	.L28:
 810 0034 09600040 		.word	1073766409
 811              		.cfi_endproc
 812              	.LFE5:
 813              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 814              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 815              		.align	2
 816              		.global	USBUART_GetConfiguration
 817              		.thumb
 818              		.thumb_func
 819              		.type	USBUART_GetConfiguration, %function
 820              	USBUART_GetConfiguration:
 821              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 822              		.loc 1 873 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826              		@ link register save eliminated.
 827 0000 80B4     		push	{r7}
 828              		.cfi_def_cfa_offset 4
 829              		.cfi_offset 7, -4
 830 0002 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 832              		.loc 1 874 0
 833 0004 034B     		ldr	r3, .L32
 834 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 31


 835 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC5/USBUART.c **** }
 836              		.loc 1 875 0
 837 000a 1846     		mov	r0, r3
 838 000c BD46     		mov	sp, r7
 839              		.cfi_def_cfa_register 13
 840              		@ sp needed
 841 000e 80BC     		pop	{r7}
 842              		.cfi_restore 7
 843              		.cfi_def_cfa_offset 0
 844 0010 7047     		bx	lr
 845              	.L33:
 846 0012 00BF     		.align	2
 847              	.L32:
 848 0014 00000000 		.word	USBUART_configuration
 849              		.cfi_endproc
 850              	.LFE6:
 851              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 852              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 853              		.align	2
 854              		.global	USBUART_IsConfigurationChanged
 855              		.thumb
 856              		.thumb_func
 857              		.type	USBUART_IsConfigurationChanged, %function
 858              	USBUART_IsConfigurationChanged:
 859              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 860              		.loc 1 899 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 865 0000 80B4     		push	{r7}
 866              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 32


 867              		.cfi_offset 7, -4
 868 0002 83B0     		sub	sp, sp, #12
 869              		.cfi_def_cfa_offset 16
 870 0004 00AF     		add	r7, sp, #0
 871              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 872              		.loc 1 900 0
 873 0006 0023     		movs	r3, #0
 874 0008 FB71     		strb	r3, [r7, #7]
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 875              		.loc 1 902 0
 876 000a 084B     		ldr	r3, .L37
 877 000c 1B78     		ldrb	r3, [r3]
 878 000e DBB2     		uxtb	r3, r3
 879 0010 002B     		cmp	r3, #0
 880 0012 05D0     		beq	.L35
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 881              		.loc 1 904 0
 882 0014 054B     		ldr	r3, .L37
 883 0016 1B78     		ldrb	r3, [r3]
 884 0018 FB71     		strb	r3, [r7, #7]
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 885              		.loc 1 905 0
 886 001a 044B     		ldr	r3, .L37
 887 001c 0022     		movs	r2, #0
 888 001e 1A70     		strb	r2, [r3]
 889              	.L35:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 890              		.loc 1 908 0
 891 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909:Generated_Source\PSoC5/USBUART.c **** }
 892              		.loc 1 909 0
 893 0022 1846     		mov	r0, r3
 894 0024 0C37     		adds	r7, r7, #12
 895              		.cfi_def_cfa_offset 4
 896 0026 BD46     		mov	sp, r7
 897              		.cfi_def_cfa_register 13
 898              		@ sp needed
 899 0028 80BC     		pop	{r7}
 900              		.cfi_restore 7
 901              		.cfi_def_cfa_offset 0
 902 002a 7047     		bx	lr
 903              	.L38:
 904              		.align	2
 905              	.L37:
 906 002c 00000000 		.word	USBUART_configurationChanged
 907              		.cfi_endproc
 908              	.LFE7:
 909              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 910              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 911              		.align	2
 912              		.global	USBUART_GetInterfaceSetting
 913              		.thumb
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 33


 914              		.thumb_func
 915              		.type	USBUART_GetInterfaceSetting, %function
 916              	USBUART_GetInterfaceSetting:
 917              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
 918              		.loc 1 929 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 8
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922              		@ link register save eliminated.
 923 0000 80B4     		push	{r7}
 924              		.cfi_def_cfa_offset 4
 925              		.cfi_offset 7, -4
 926 0002 83B0     		sub	sp, sp, #12
 927              		.cfi_def_cfa_offset 16
 928 0004 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 930 0006 0346     		mov	r3, r0
 931 0008 FB71     		strb	r3, [r7, #7]
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 932              		.loc 1 930 0
 933 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 934 000c 034A     		ldr	r2, .L41
 935 000e D35C     		ldrb	r3, [r2, r3]
 936 0010 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC5/USBUART.c **** }
 937              		.loc 1 931 0
 938 0012 1846     		mov	r0, r3
 939 0014 0C37     		adds	r7, r7, #12
 940              		.cfi_def_cfa_offset 4
 941 0016 BD46     		mov	sp, r7
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 0018 80BC     		pop	{r7}
 945              		.cfi_restore 7
 946              		.cfi_def_cfa_offset 0
 947 001a 7047     		bx	lr
 948              	.L42:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 34


 949              		.align	2
 950              	.L41:
 951 001c 00000000 		.word	USBUART_interfaceSetting
 952              		.cfi_endproc
 953              	.LFE8:
 954              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 955              		.section	.text.USBUART_GetEPState,"ax",%progbits
 956              		.align	2
 957              		.global	USBUART_GetEPState
 958              		.thumb
 959              		.thumb_func
 960              		.type	USBUART_GetEPState, %function
 961              	USBUART_GetEPState:
 962              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART.c **** {
 963              		.loc 1 960 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 8
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 968 0000 80B4     		push	{r7}
 969              		.cfi_def_cfa_offset 4
 970              		.cfi_offset 7, -4
 971 0002 83B0     		sub	sp, sp, #12
 972              		.cfi_def_cfa_offset 16
 973 0004 00AF     		add	r7, sp, #0
 974              		.cfi_def_cfa_register 7
 975 0006 0346     		mov	r3, r0
 976 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 35


 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 977              		.loc 1 961 0
 978 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 979 000c 0649     		ldr	r1, .L45
 980 000e 1346     		mov	r3, r2
 981 0010 5B00     		lsls	r3, r3, #1
 982 0012 1344     		add	r3, r3, r2
 983 0014 9B00     		lsls	r3, r3, #2
 984 0016 0B44     		add	r3, r3, r1
 985 0018 0133     		adds	r3, r3, #1
 986 001a 1B78     		ldrb	r3, [r3]
 987 001c DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC5/USBUART.c **** }
 988              		.loc 1 962 0
 989 001e 1846     		mov	r0, r3
 990 0020 0C37     		adds	r7, r7, #12
 991              		.cfi_def_cfa_offset 4
 992 0022 BD46     		mov	sp, r7
 993              		.cfi_def_cfa_register 13
 994              		@ sp needed
 995 0024 80BC     		pop	{r7}
 996              		.cfi_restore 7
 997              		.cfi_def_cfa_offset 0
 998 0026 7047     		bx	lr
 999              	.L46:
 1000              		.align	2
 1001              	.L45:
 1002 0028 00000000 		.word	USBUART_EP
 1003              		.cfi_endproc
 1004              	.LFE9:
 1005              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 1006              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 1007              		.align	2
 1008              		.global	USBUART_GetEPCount
 1009              		.thumb
 1010              		.thumb_func
 1011              		.type	USBUART_GetEPCount, %function
 1012              	USBUART_GetEPCount:
 1013              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 36


 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 1014              		.loc 1 983 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 16
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 1019 0000 80B4     		push	{r7}
 1020              		.cfi_def_cfa_offset 4
 1021              		.cfi_offset 7, -4
 1022 0002 85B0     		sub	sp, sp, #20
 1023              		.cfi_def_cfa_offset 24
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 1026 0006 0346     		mov	r3, r0
 1027 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 1028              		.loc 1 984 0
 1029 000a 0023     		movs	r3, #0
 1030 000c FB81     		strh	r3, [r7, #14]	@ movhi
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1031              		.loc 1 986 0
 1032 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1033 0010 002B     		cmp	r3, #0
 1034 0012 1CD0     		beq	.L48
 1035              		.loc 1 986 0 is_stmt 0 discriminator 1
 1036 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1037 0016 082B     		cmp	r3, #8
 1038 0018 19D8     		bhi	.L48
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 1039              		.loc 1 989 0 is_stmt 1
 1040 001a 104A     		ldr	r2, .L50
 1041 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1042 001e 1B01     		lsls	r3, r3, #4
 1043 0020 1344     		add	r3, r3, r2
 1044 0022 1B78     		ldrb	r3, [r3]
 1045 0024 DBB2     		uxtb	r3, r3
 1046 0026 9BB2     		uxth	r3, r3
 1047 0028 03F00F03 		and	r3, r3, #15
 1048 002c FB81     		strh	r3, [r7, #14]	@ movhi
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 1049              		.loc 1 990 0
 1050 002e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1051 0030 1B02     		lsls	r3, r3, #8
 1052 0032 9AB2     		uxth	r2, r3
 1053 0034 0949     		ldr	r1, .L50
 1054 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1055 0038 1B01     		lsls	r3, r3, #4
 1056 003a 0B44     		add	r3, r3, r1
 1057 003c 0133     		adds	r3, r3, #1
 1058 003e 1B78     		ldrb	r3, [r3]
 1059 0040 DBB2     		uxtb	r3, r3
 1060 0042 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 37


 1061 0044 1343     		orrs	r3, r3, r2
 1062 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 1063              		.loc 1 991 0
 1064 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1065 004a 023B     		subs	r3, r3, #2
 1066 004c FB81     		strh	r3, [r7, #14]	@ movhi
 1067              	.L48:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 1068              		.loc 1 994 0
 1069 004e FB89     		ldrh	r3, [r7, #14]
 995:Generated_Source\PSoC5/USBUART.c **** }
 1070              		.loc 1 995 0
 1071 0050 1846     		mov	r0, r3
 1072 0052 1437     		adds	r7, r7, #20
 1073              		.cfi_def_cfa_offset 4
 1074 0054 BD46     		mov	sp, r7
 1075              		.cfi_def_cfa_register 13
 1076              		@ sp needed
 1077 0056 80BC     		pop	{r7}
 1078              		.cfi_restore 7
 1079              		.cfi_def_cfa_offset 0
 1080 0058 7047     		bx	lr
 1081              	.L51:
 1082 005a 00BF     		.align	2
 1083              	.L50:
 1084 005c FC5F0040 		.word	1073766396
 1085              		.cfi_endproc
 1086              	.LFE10:
 1087              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 1088              		.section	.text.USBUART_InitEP_DMA,"ax",%progbits
 1089              		.align	2
 1090              		.global	USBUART_InitEP_DMA
 1091              		.thumb
 1092              		.thumb_func
 1093              		.type	USBUART_InitEP_DMA, %function
 1094              	USBUART_InitEP_DMA:
 1095              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 38


1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 39


1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
 1096              		.loc 1 1100 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 16
 1099              		@ frame_needed = 1, uses_anonymous_args = 0
 1100 0000 90B5     		push	{r4, r7, lr}
 1101              		.cfi_def_cfa_offset 12
 1102              		.cfi_offset 4, -12
 1103              		.cfi_offset 7, -8
 1104              		.cfi_offset 14, -4
 1105 0002 85B0     		sub	sp, sp, #20
 1106              		.cfi_def_cfa_offset 32
 1107 0004 00AF     		add	r7, sp, #0
 1108              		.cfi_def_cfa_register 7
 1109 0006 0346     		mov	r3, r0
 1110 0008 3960     		str	r1, [r7]
 1111 000a FB71     		strb	r3, [r7, #7]
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
 1112              		.loc 1 1109 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 40


 1113 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1114 000e 2B49     		ldr	r1, .L62
 1115 0010 1346     		mov	r3, r2
 1116 0012 5B00     		lsls	r3, r3, #1
 1117 0014 1344     		add	r3, r3, r2
 1118 0016 9B00     		lsls	r3, r3, #2
 1119 0018 0B44     		add	r3, r3, r1
 1120 001a 0433     		adds	r3, r3, #4
 1121 001c 1B78     		ldrb	r3, [r3]
 1122 001e DBB2     		uxtb	r3, r3
 1123 0020 5BB2     		sxtb	r3, r3
 1124 0022 002B     		cmp	r3, #0
 1125 0024 06DA     		bge	.L53
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
 1126              		.loc 1 1112 0
 1127 0026 3B68     		ldr	r3, [r7]
 1128 0028 1B0C     		lsrs	r3, r3, #16
 1129 002a FB81     		strh	r3, [r7, #14]	@ movhi
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
 1130              		.loc 1 1113 0
 1131 002c 4FF48043 		mov	r3, #16384
 1132 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 1133 0032 05E0     		b	.L54
 1134              	.L53:
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
 1135              		.loc 1 1118 0
 1136 0034 4FF48043 		mov	r3, #16384
 1137 0038 FB81     		strh	r3, [r7, #14]	@ movhi
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
 1138              		.loc 1 1119 0
 1139 003a 3B68     		ldr	r3, [r7]
 1140 003c 1B0C     		lsrs	r3, r3, #16
 1141 003e BB81     		strh	r3, [r7, #12]	@ movhi
 1142              	.L54:
1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
 1143              		.loc 1 1123 0
 1144 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1145 0042 022B     		cmp	r3, #2
 1146 0044 10D0     		beq	.L56
 1147 0046 032B     		cmp	r3, #3
 1148 0048 1AD0     		beq	.L57
 1149 004a 012B     		cmp	r3, #1
 1150 004c 00D0     		beq	.L58
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 41


1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
 1151              		.loc 1 1183 0
 1152 004e 23E0     		b	.L59
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 42


 1153              	.L58:
1127:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
 1154              		.loc 1 1127 0
 1155 0050 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1156 0052 BB89     		ldrh	r3, [r7, #12]
 1157 0054 FA89     		ldrh	r2, [r7, #14]
 1158 0056 0021     		movs	r1, #0
 1159 0058 0020     		movs	r0, #0
 1160 005a FFF7FEFF 		bl	USBUART_ep1_DmaInitialize
 1161 005e 0346     		mov	r3, r0
 1162 0060 1A46     		mov	r2, r3
 1163 0062 174B     		ldr	r3, .L62+4
 1164 0064 1A55     		strb	r2, [r3, r4]
1129:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
 1165              		.loc 1 1129 0
 1166 0066 17E0     		b	.L59
 1167              	.L56:
1134:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
 1168              		.loc 1 1134 0
 1169 0068 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1170 006a BB89     		ldrh	r3, [r7, #12]
 1171 006c FA89     		ldrh	r2, [r7, #14]
 1172 006e 0021     		movs	r1, #0
 1173 0070 0020     		movs	r0, #0
 1174 0072 FFF7FEFF 		bl	USBUART_ep2_DmaInitialize
 1175 0076 0346     		mov	r3, r0
 1176 0078 1A46     		mov	r2, r3
 1177 007a 114B     		ldr	r3, .L62+4
 1178 007c 1A55     		strb	r2, [r3, r4]
1136:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
 1179              		.loc 1 1136 0
 1180 007e 0BE0     		b	.L59
 1181              	.L57:
1141:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
 1182              		.loc 1 1141 0
 1183 0080 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1184 0082 BB89     		ldrh	r3, [r7, #12]
 1185 0084 FA89     		ldrh	r2, [r7, #14]
 1186 0086 0021     		movs	r1, #0
 1187 0088 0020     		movs	r0, #0
 1188 008a FFF7FEFF 		bl	USBUART_ep3_DmaInitialize
 1189 008e 0346     		mov	r3, r0
 1190 0090 1A46     		mov	r2, r3
 1191 0092 0B4B     		ldr	r3, .L62+4
 1192 0094 1A55     		strb	r2, [r3, r4]
1143:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
 1193              		.loc 1 1143 0
 1194 0096 00BF     		nop
 1195              	.L59:
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1196              		.loc 1 1186 0
 1197 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1198 009a 002B     		cmp	r3, #0
 1199 009c 09D0     		beq	.L61
 1200              		.loc 1 1186 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 43


 1201 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1202 00a0 082B     		cmp	r3, #8
 1203 00a2 06D8     		bhi	.L61
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
 1204              		.loc 1 1188 0 is_stmt 1
 1205 00a4 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1206 00a6 FFF7FEFF 		bl	CyDmaTdAllocate
 1207 00aa 0346     		mov	r3, r0
 1208 00ac 1A46     		mov	r2, r3
 1209 00ae 054B     		ldr	r3, .L62+8
 1210 00b0 1A55     		strb	r2, [r3, r4]
 1211              	.L61:
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
 1212              		.loc 1 1194 0
 1213 00b2 00BF     		nop
 1214 00b4 1437     		adds	r7, r7, #20
 1215              		.cfi_def_cfa_offset 12
 1216 00b6 BD46     		mov	sp, r7
 1217              		.cfi_def_cfa_register 13
 1218              		@ sp needed
 1219 00b8 90BD     		pop	{r4, r7, pc}
 1220              	.L63:
 1221 00ba 00BF     		.align	2
 1222              	.L62:
 1223 00bc 00000000 		.word	USBUART_EP
 1224 00c0 00000000 		.word	USBUART_DmaChan
 1225 00c4 00000000 		.word	USBUART_DmaTd
 1226              		.cfi_endproc
 1227              	.LFE11:
 1228              		.size	USBUART_InitEP_DMA, .-USBUART_InitEP_DMA
 1229              		.section	.text.USBUART_Stop_DMA,"ax",%progbits
 1230              		.align	2
 1231              		.global	USBUART_Stop_DMA
 1232              		.thumb
 1233              		.thumb_func
 1234              		.type	USBUART_Stop_DMA, %function
 1235              	USBUART_Stop_DMA:
 1236              	.LFB12:
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 44


1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
 1237              		.loc 1 1217 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 16
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241 0000 80B5     		push	{r7, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 7, -8
 1244              		.cfi_offset 14, -4
 1245 0002 84B0     		sub	sp, sp, #16
 1246              		.cfi_def_cfa_offset 24
 1247 0004 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 1249 0006 0346     		mov	r3, r0
 1250 0008 FB71     		strb	r3, [r7, #7]
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
 1251              		.loc 1 1220 0
 1252 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1253 000c 082B     		cmp	r3, #8
 1254 000e 01D8     		bhi	.L65
 1255              		.loc 1 1220 0 is_stmt 0 discriminator 1
 1256 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1257 0012 00E0     		b	.L66
 1258              	.L65:
 1259              		.loc 1 1220 0 discriminator 2
 1260 0014 0123     		movs	r3, #1
 1261              	.L66:
 1262              		.loc 1 1220 0 discriminator 4
 1263 0016 FB73     		strb	r3, [r7, #15]
 1264              	.L69:
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
 1265              		.loc 1 1230 0 is_stmt 1
 1266 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1267 001a 104A     		ldr	r2, .L71
 1268 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1269 001e FF2B     		cmp	r3, #255
 1270 0020 0FD0     		beq	.L67
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 45


1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
 1271              		.loc 1 1232 0
 1272 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1273 0024 0E4A     		ldr	r2, .L71+4
 1274 0026 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1275 0028 1846     		mov	r0, r3
 1276 002a FFF7FEFF 		bl	CyDmaChDisable
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
 1277              		.loc 1 1233 0
 1278 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1279 0030 0A4A     		ldr	r2, .L71
 1280 0032 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1281 0034 1846     		mov	r0, r3
 1282 0036 FFF7FEFF 		bl	CyDmaTdFree
1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
 1283              		.loc 1 1234 0
 1284 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1285 003c 074A     		ldr	r2, .L71
 1286 003e FF21     		movs	r1, #255
 1287 0040 D154     		strb	r1, [r2, r3]
 1288              	.L67:
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
 1289              		.loc 1 1246 0
 1290 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1291 0044 0133     		adds	r3, r3, #1
 1292 0046 FB73     		strb	r3, [r7, #15]
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
 1293              		.loc 1 1248 0
 1294 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1295 004a 082B     		cmp	r3, #8
 1296 004c 02D8     		bhi	.L70
 1297              		.loc 1 1248 0 is_stmt 0 discriminator 1
 1298 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1299 0050 092B     		cmp	r3, #9
 1300 0052 E1D0     		beq	.L69
 1301              	.L70:
1249:Generated_Source\PSoC5/USBUART.c ****     }
 1302              		.loc 1 1249 0 is_stmt 1
 1303 0054 00BF     		nop
 1304 0056 1037     		adds	r7, r7, #16
 1305              		.cfi_def_cfa_offset 8
 1306 0058 BD46     		mov	sp, r7
 1307              		.cfi_def_cfa_register 13
 1308              		@ sp needed
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 46


 1309 005a 80BD     		pop	{r7, pc}
 1310              	.L72:
 1311              		.align	2
 1312              	.L71:
 1313 005c 00000000 		.word	USBUART_DmaTd
 1314 0060 00000000 		.word	USBUART_DmaChan
 1315              		.cfi_endproc
 1316              	.LFE12:
 1317              		.size	USBUART_Stop_DMA, .-USBUART_Stop_DMA
 1318              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 1319              		.align	2
 1320              		.global	USBUART_LoadInEP
 1321              		.thumb
 1322              		.thumb_func
 1323              		.type	USBUART_LoadInEP, %function
 1324              	USBUART_LoadInEP:
 1325              	.LFB13:
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 47


1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 1326              		.loc 1 1344 0
 1327              		.cfi_startproc
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 48


 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330 0000 B0B5     		push	{r4, r5, r7, lr}
 1331              		.cfi_def_cfa_offset 16
 1332              		.cfi_offset 4, -16
 1333              		.cfi_offset 5, -12
 1334              		.cfi_offset 7, -8
 1335              		.cfi_offset 14, -4
 1336 0002 82B0     		sub	sp, sp, #8
 1337              		.cfi_def_cfa_offset 24
 1338 0004 00AF     		add	r7, sp, #0
 1339              		.cfi_def_cfa_register 7
 1340 0006 0346     		mov	r3, r0
 1341 0008 3960     		str	r1, [r7]
 1342 000a FB71     		strb	r3, [r7, #7]
 1343 000c 1346     		mov	r3, r2	@ movhi
 1344 000e BB80     		strh	r3, [r7, #4]	@ movhi
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1345              		.loc 1 1345 0
 1346 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1347 0012 002B     		cmp	r3, #0
 1348 0014 00F0B280 		beq	.L78
 1349              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1350 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1351 001a 082B     		cmp	r3, #8
 1352 001c 00F2AE80 		bhi	.L78
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1353              		.loc 1 1349 0 is_stmt 1
 1354 0020 B988     		ldrh	r1, [r7, #4]
 1355 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1356 0024 5748     		ldr	r0, .L79
 1357 0026 1346     		mov	r3, r2
 1358 0028 5B00     		lsls	r3, r3, #1
 1359 002a 1344     		add	r3, r3, r2
 1360 002c 9B00     		lsls	r3, r3, #2
 1361 002e 0344     		add	r3, r3, r0
 1362 0030 0633     		adds	r3, r3, #6
 1363 0032 1B88     		ldrh	r3, [r3]	@ movhi
 1364 0034 9BB2     		uxth	r3, r3
 1365 0036 C3F50073 		rsb	r3, r3, #512
 1366 003a 9942     		cmp	r1, r3
 1367 003c 0CD9     		bls	.L75
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1368              		.loc 1 1351 0
 1369 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1370 0040 5049     		ldr	r1, .L79
 1371 0042 1346     		mov	r3, r2
 1372 0044 5B00     		lsls	r3, r3, #1
 1373 0046 1344     		add	r3, r3, r2
 1374 0048 9B00     		lsls	r3, r3, #2
 1375 004a 0B44     		add	r3, r3, r1
 1376 004c 0633     		adds	r3, r3, #6
 1377 004e 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 49


 1378 0050 9BB2     		uxth	r3, r3
 1379 0052 C3F50073 		rsb	r3, r3, #512
 1380 0056 BB80     		strh	r3, [r7, #4]	@ movhi
 1381              	.L75:
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 1382              		.loc 1 1356 0
 1383 0058 4B4C     		ldr	r4, .L79+4
 1384 005a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1385 005c BB88     		ldrh	r3, [r7, #4]
 1386 005e 1B0A     		lsrs	r3, r3, #8
 1387 0060 9BB2     		uxth	r3, r3
 1388 0062 D8B2     		uxtb	r0, r3
 1389 0064 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1390 0066 474D     		ldr	r5, .L79
 1391 0068 1346     		mov	r3, r2
 1392 006a 5B00     		lsls	r3, r3, #1
 1393 006c 1344     		add	r3, r3, r2
 1394 006e 9B00     		lsls	r3, r3, #2
 1395 0070 2B44     		add	r3, r3, r5
 1396 0072 0333     		adds	r3, r3, #3
 1397 0074 1B78     		ldrb	r3, [r3]
 1398 0076 DBB2     		uxtb	r3, r3
 1399 0078 0343     		orrs	r3, r3, r0
 1400 007a DAB2     		uxtb	r2, r3
 1401 007c 0B01     		lsls	r3, r1, #4
 1402 007e 2344     		add	r3, r3, r4
 1403 0080 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1404              		.loc 1 1357 0
 1405 0082 414A     		ldr	r2, .L79+4
 1406 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1407 0086 B988     		ldrh	r1, [r7, #4]	@ movhi
 1408 0088 C9B2     		uxtb	r1, r1
 1409 008a 1B01     		lsls	r3, r3, #4
 1410 008c 1344     		add	r3, r3, r2
 1411 008e 0133     		adds	r3, r3, #1
 1412 0090 0A46     		mov	r2, r1
 1413 0092 1A70     		strb	r2, [r3]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1372:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 50


1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
 1414              		.loc 1 1380 0
 1415 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1416 0096 3D4A     		ldr	r2, .L79+8
 1417 0098 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1418 009a FF2B     		cmp	r3, #255
 1419 009c 04D1     		bne	.L76
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
 1420              		.loc 1 1382 0
 1421 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1422 00a0 3968     		ldr	r1, [r7]
 1423 00a2 1846     		mov	r0, r3
 1424 00a4 FFF7FEFF 		bl	USBUART_InitEP_DMA
 1425              	.L76:
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1426              		.loc 1 1388 0
 1427 00a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1428 00aa 3649     		ldr	r1, .L79
 1429 00ac 1346     		mov	r3, r2
 1430 00ae 5B00     		lsls	r3, r3, #1
 1431 00b0 1344     		add	r3, r3, r2
 1432 00b2 9B00     		lsls	r3, r3, #2
 1433 00b4 0B44     		add	r3, r3, r1
 1434 00b6 0133     		adds	r3, r3, #1
 1435 00b8 0022     		movs	r2, #0
 1436 00ba 1A70     		strb	r2, [r3]
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
 1437              		.loc 1 1390 0
 1438 00bc 3B68     		ldr	r3, [r7]
 1439 00be 002B     		cmp	r3, #0
 1440 00c0 4CD0     		beq	.L77
 1441              		.loc 1 1390 0 is_stmt 0 discriminator 1
 1442 00c2 BB88     		ldrh	r3, [r7, #4]
 1443 00c4 002B     		cmp	r3, #0
 1444 00c6 49D0     		beq	.L77
1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 51


1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
 1445              		.loc 1 1414 0 is_stmt 1
 1446 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1447 00ca 314A     		ldr	r2, .L79+12
 1448 00cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1449 00ce 1846     		mov	r0, r3
 1450 00d0 FFF7FEFF 		bl	CyDmaChDisable
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
 1451              		.loc 1 1415 0
 1452 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1453 00d6 2D4A     		ldr	r2, .L79+8
 1454 00d8 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1455 00da B988     		ldrh	r1, [r7, #4]
 1456 00dc 1123     		movs	r3, #17
 1457 00de FE22     		movs	r2, #254
 1458 00e0 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
 1459              		.loc 1 1416 0
 1460 00e4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1461 00e6 294A     		ldr	r2, .L79+8
 1462 00e8 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1463 00ea 3B68     		ldr	r3, [r7]
 1464 00ec 99B2     		uxth	r1, r3
 1465 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1466 00f0 1B01     		lsls	r3, r3, #4
 1467 00f2 03F10802 		add	r2, r3, #8
 1468 00f6 274B     		ldr	r3, .L79+16
 1469 00f8 1344     		add	r3, r3, r2
 1470 00fa 9BB2     		uxth	r3, r3
 1471 00fc 1A46     		mov	r2, r3
 1472 00fe FFF7FEFF 		bl	CyDmaTdSetAddress
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
 1473              		.loc 1 1419 0
 1474 0102 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1475 0104 224A     		ldr	r2, .L79+12
 1476 0106 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1477 0108 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1478 010a 204A     		ldr	r2, .L79+8
 1479 010c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1480 010e 1946     		mov	r1, r3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 52


 1481 0110 FFF7FEFF 		bl	CyDmaChSetInitialTd
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
 1482              		.loc 1 1420 0
 1483 0114 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1484 0116 1E4A     		ldr	r2, .L79+12
 1485 0118 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1486 011a 0121     		movs	r1, #1
 1487 011c 1846     		mov	r0, r3
 1488 011e FFF7FEFF 		bl	CyDmaChEnable
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
 1489              		.loc 1 1424 0
 1490 0122 1C49     		ldr	r1, .L79+16
 1491 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1492 0126 1B48     		ldr	r0, .L79+16
 1493 0128 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1494 012a 1201     		lsls	r2, r2, #4
 1495 012c 0244     		add	r2, r2, r0
 1496 012e 1278     		ldrb	r2, [r2]
 1497 0130 D2B2     		uxtb	r2, r2
 1498 0132 42F00202 		orr	r2, r2, #2
 1499 0136 D2B2     		uxtb	r2, r2
 1500 0138 1B01     		lsls	r3, r3, #4
 1501 013a 0B44     		add	r3, r3, r1
 1502 013c 1A70     		strb	r2, [r3]
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
 1503              		.loc 1 1425 0
 1504 013e 1549     		ldr	r1, .L79+16
 1505 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1506 0142 1448     		ldr	r0, .L79+16
 1507 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1508 0146 1201     		lsls	r2, r2, #4
 1509 0148 0244     		add	r2, r2, r0
 1510 014a 1278     		ldrb	r2, [r2]
 1511 014c D2B2     		uxtb	r2, r2
 1512 014e 22F00202 		bic	r2, r2, #2
 1513 0152 D2B2     		uxtb	r2, r2
 1514 0154 1B01     		lsls	r3, r3, #4
 1515 0156 0B44     		add	r3, r3, r1
 1516 0158 1A70     		strb	r2, [r3]
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 53


1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 54


1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 55


1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
 1517              		.loc 1 1604 0
 1518 015a 0FE0     		b	.L78
 1519              	.L77:
1432:Generated_Source\PSoC5/USBUART.c ****             }
 1520              		.loc 1 1432 0
 1521 015c 0A48     		ldr	r0, .L79+4
 1522 015e F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 56


 1523 0160 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1524 0162 084C     		ldr	r4, .L79
 1525 0164 1346     		mov	r3, r2
 1526 0166 5B00     		lsls	r3, r3, #1
 1527 0168 1344     		add	r3, r3, r2
 1528 016a 9B00     		lsls	r3, r3, #2
 1529 016c 2344     		add	r3, r3, r4
 1530 016e 0533     		adds	r3, r3, #5
 1531 0170 1B78     		ldrb	r3, [r3]
 1532 0172 DAB2     		uxtb	r2, r3
 1533 0174 0B01     		lsls	r3, r1, #4
 1534 0176 0344     		add	r3, r3, r0
 1535 0178 0233     		adds	r3, r3, #2
 1536 017a 1A70     		strb	r2, [r3]
 1537              	.L78:
 1538              		.loc 1 1604 0
 1539 017c 00BF     		nop
 1540 017e 0837     		adds	r7, r7, #8
 1541              		.cfi_def_cfa_offset 16
 1542 0180 BD46     		mov	sp, r7
 1543              		.cfi_def_cfa_register 13
 1544              		@ sp needed
 1545 0182 B0BD     		pop	{r4, r5, r7, pc}
 1546              	.L80:
 1547              		.align	2
 1548              	.L79:
 1549 0184 00000000 		.word	USBUART_EP
 1550 0188 FC5F0040 		.word	1073766396
 1551 018c 00000000 		.word	USBUART_DmaTd
 1552 0190 00000000 		.word	USBUART_DmaChan
 1553 0194 70600040 		.word	1073766512
 1554              		.cfi_endproc
 1555              	.LFE13:
 1556              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1557              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1558              		.align	2
 1559              		.global	USBUART_ReadOutEP
 1560              		.thumb
 1561              		.thumb_func
 1562              		.type	USBUART_ReadOutEP, %function
 1563              	USBUART_ReadOutEP:
 1564              	.LFB14:
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 57


1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
 1565              		.loc 1 1655 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 8
 1568              		@ frame_needed = 1, uses_anonymous_args = 0
 1569 0000 80B5     		push	{r7, lr}
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 7, -8
 1572              		.cfi_offset 14, -4
 1573 0002 82B0     		sub	sp, sp, #8
 1574              		.cfi_def_cfa_offset 16
 1575 0004 00AF     		add	r7, sp, #0
 1576              		.cfi_def_cfa_register 7
 1577 0006 0346     		mov	r3, r0
 1578 0008 3960     		str	r1, [r7]
 1579 000a FB71     		strb	r3, [r7, #7]
 1580 000c 1346     		mov	r3, r2	@ movhi
 1581 000e BB80     		strh	r3, [r7, #4]	@ movhi
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1582              		.loc 1 1656 0
 1583 0010 3B68     		ldr	r3, [r7]
 1584 0012 002B     		cmp	r3, #0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 58


 1585 0014 6AD0     		beq	.L82
 1586              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1587 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1588 0018 002B     		cmp	r3, #0
 1589 001a 67D0     		beq	.L82
 1590              		.loc 1 1656 0 discriminator 2
 1591 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1592 001e 082B     		cmp	r3, #8
 1593 0020 64D8     		bhi	.L82
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1594              		.loc 1 1660 0 is_stmt 1
 1595 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1596 0024 1846     		mov	r0, r3
 1597 0026 FFF7FEFF 		bl	USBUART_GetEPCount
 1598 002a 0346     		mov	r3, r0
 1599 002c 1A46     		mov	r2, r3
 1600 002e BB88     		ldrh	r3, [r7, #4]
 1601 0030 9342     		cmp	r3, r2
 1602 0032 05D9     		bls	.L83
 1603              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1604 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1605 0036 1846     		mov	r0, r3
 1606 0038 FFF7FEFF 		bl	USBUART_GetEPCount
 1607 003c 0346     		mov	r3, r0
 1608 003e 00E0     		b	.L84
 1609              	.L83:
 1610              		.loc 1 1660 0 discriminator 2
 1611 0040 BB88     		ldrh	r3, [r7, #4]
 1612              	.L84:
 1613              		.loc 1 1660 0 discriminator 4
 1614 0042 BB80     		strh	r3, [r7, #4]	@ movhi
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
 1615              		.loc 1 1679 0 is_stmt 1 discriminator 4
 1616 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1617 0046 2D4A     		ldr	r2, .L88
 1618 0048 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 59


 1619 004a FF2B     		cmp	r3, #255
 1620 004c 04D1     		bne	.L85
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
 1621              		.loc 1 1681 0
 1622 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1623 0050 3968     		ldr	r1, [r7]
 1624 0052 1846     		mov	r0, r3
 1625 0054 FFF7FEFF 		bl	USBUART_InitEP_DMA
 1626              	.L85:
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
 1627              		.loc 1 1709 0
 1628 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1629 005a 294A     		ldr	r2, .L88+4
 1630 005c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1631 005e 1846     		mov	r0, r3
 1632 0060 FFF7FEFF 		bl	CyDmaChDisable
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
 1633              		.loc 1 1710 0
 1634 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1635 0066 254A     		ldr	r2, .L88
 1636 0068 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1637 006a B988     		ldrh	r1, [r7, #4]
 1638 006c 1223     		movs	r3, #18
 1639 006e FE22     		movs	r2, #254
 1640 0070 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
 1641              		.loc 1 1711 0
 1642 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1643 0076 214A     		ldr	r2, .L88
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 60


 1644 0078 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1645 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1646 007c 1B01     		lsls	r3, r3, #4
 1647 007e 03F10802 		add	r2, r3, #8
 1648 0082 204B     		ldr	r3, .L88+8
 1649 0084 1344     		add	r3, r3, r2
 1650 0086 9BB2     		uxth	r3, r3
 1651 0088 3A68     		ldr	r2, [r7]
 1652 008a 92B2     		uxth	r2, r2
 1653 008c 1946     		mov	r1, r3
 1654 008e FFF7FEFF 		bl	CyDmaTdSetAddress
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
 1655              		.loc 1 1714 0
 1656 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1657 0094 1A4A     		ldr	r2, .L88+4
 1658 0096 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1659 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1660 009a 184A     		ldr	r2, .L88
 1661 009c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1662 009e 1946     		mov	r1, r3
 1663 00a0 FFF7FEFF 		bl	CyDmaChSetInitialTd
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
 1664              		.loc 1 1715 0
 1665 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1666 00a6 164A     		ldr	r2, .L88+4
 1667 00a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1668 00aa 0121     		movs	r1, #1
 1669 00ac 1846     		mov	r0, r3
 1670 00ae FFF7FEFF 		bl	CyDmaChEnable
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
 1671              		.loc 1 1719 0
 1672 00b2 1449     		ldr	r1, .L88+8
 1673 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1674 00b6 1348     		ldr	r0, .L88+8
 1675 00b8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1676 00ba 1201     		lsls	r2, r2, #4
 1677 00bc 0244     		add	r2, r2, r0
 1678 00be 1278     		ldrb	r2, [r2]
 1679 00c0 D2B2     		uxtb	r2, r2
 1680 00c2 42F00202 		orr	r2, r2, #2
 1681 00c6 D2B2     		uxtb	r2, r2
 1682 00c8 1B01     		lsls	r3, r3, #4
 1683 00ca 0B44     		add	r3, r3, r1
 1684 00cc 1A70     		strb	r2, [r3]
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
 1685              		.loc 1 1720 0
 1686 00ce 0D49     		ldr	r1, .L88+8
 1687 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1688 00d2 0C48     		ldr	r0, .L88+8
 1689 00d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1690 00d6 1201     		lsls	r2, r2, #4
 1691 00d8 0244     		add	r2, r2, r0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 61


 1692 00da 1278     		ldrb	r2, [r2]
 1693 00dc D2B2     		uxtb	r2, r2
 1694 00de 22F00202 		bic	r2, r2, #2
 1695 00e2 D2B2     		uxtb	r2, r2
 1696 00e4 1B01     		lsls	r3, r3, #4
 1697 00e6 0B44     		add	r3, r3, r1
 1698 00e8 1A70     		strb	r2, [r3]
 1699 00ea 01E0     		b	.L86
 1700              	.L82:
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 62


1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
 1701              		.loc 1 1820 0
 1702 00ec 0023     		movs	r3, #0
 1703 00ee BB80     		strh	r3, [r7, #4]	@ movhi
 1704              	.L86:
1821:Generated_Source\PSoC5/USBUART.c ****     }
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 63


1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
 1705              		.loc 1 1823 0
 1706 00f0 BB88     		ldrh	r3, [r7, #4]
1824:Generated_Source\PSoC5/USBUART.c **** }
 1707              		.loc 1 1824 0
 1708 00f2 1846     		mov	r0, r3
 1709 00f4 0837     		adds	r7, r7, #8
 1710              		.cfi_def_cfa_offset 8
 1711 00f6 BD46     		mov	sp, r7
 1712              		.cfi_def_cfa_register 13
 1713              		@ sp needed
 1714 00f8 80BD     		pop	{r7, pc}
 1715              	.L89:
 1716 00fa 00BF     		.align	2
 1717              	.L88:
 1718 00fc 00000000 		.word	USBUART_DmaTd
 1719 0100 00000000 		.word	USBUART_DmaChan
 1720 0104 70600040 		.word	1073766512
 1721              		.cfi_endproc
 1722              	.LFE14:
 1723              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1724              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1725              		.align	2
 1726              		.global	USBUART_EnableOutEP
 1727              		.thumb
 1728              		.thumb_func
 1729              		.type	USBUART_EnableOutEP, %function
 1730              	USBUART_EnableOutEP:
 1731              	.LFB15:
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 64


1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 65


1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 66


1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 67


2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 68


2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 69


2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 70


2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 71


2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 1732              		.loc 1 2277 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 8
 1735              		@ frame_needed = 1, uses_anonymous_args = 0
 1736              		@ link register save eliminated.
 1737 0000 90B4     		push	{r4, r7}
 1738              		.cfi_def_cfa_offset 8
 1739              		.cfi_offset 4, -8
 1740              		.cfi_offset 7, -4
 1741 0002 82B0     		sub	sp, sp, #8
 1742              		.cfi_def_cfa_offset 16
 1743 0004 00AF     		add	r7, sp, #0
 1744              		.cfi_def_cfa_register 7
 1745 0006 0346     		mov	r3, r0
 1746 0008 FB71     		strb	r3, [r7, #7]
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1747              		.loc 1 2278 0
 1748 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1749 000c 002B     		cmp	r3, #0
 1750 000e 1CD0     		beq	.L92
 1751              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1752 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1753 0012 082B     		cmp	r3, #8
 1754 0014 19D8     		bhi	.L92
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1755              		.loc 1 2280 0 is_stmt 1
 1756 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1757 0018 0E49     		ldr	r1, .L93
 1758 001a 1346     		mov	r3, r2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 72


 1759 001c 5B00     		lsls	r3, r3, #1
 1760 001e 1344     		add	r3, r3, r2
 1761 0020 9B00     		lsls	r3, r3, #2
 1762 0022 0B44     		add	r3, r3, r1
 1763 0024 0133     		adds	r3, r3, #1
 1764 0026 0022     		movs	r2, #0
 1765 0028 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1766              		.loc 1 2283 0
 1767 002a 0B48     		ldr	r0, .L93+4
 1768 002c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1769 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1770 0030 084C     		ldr	r4, .L93
 1771 0032 1346     		mov	r3, r2
 1772 0034 5B00     		lsls	r3, r3, #1
 1773 0036 1344     		add	r3, r3, r2
 1774 0038 9B00     		lsls	r3, r3, #2
 1775 003a 2344     		add	r3, r3, r4
 1776 003c 0533     		adds	r3, r3, #5
 1777 003e 1B78     		ldrb	r3, [r3]
 1778 0040 DAB2     		uxtb	r2, r3
 1779 0042 0B01     		lsls	r3, r1, #4
 1780 0044 0344     		add	r3, r3, r0
 1781 0046 0233     		adds	r3, r3, #2
 1782 0048 1A70     		strb	r2, [r3]
 1783              	.L92:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
 1784              		.loc 1 2286 0
 1785 004a 00BF     		nop
 1786 004c 0837     		adds	r7, r7, #8
 1787              		.cfi_def_cfa_offset 8
 1788 004e BD46     		mov	sp, r7
 1789              		.cfi_def_cfa_register 13
 1790              		@ sp needed
 1791 0050 90BC     		pop	{r4, r7}
 1792              		.cfi_restore 7
 1793              		.cfi_restore 4
 1794              		.cfi_def_cfa_offset 0
 1795 0052 7047     		bx	lr
 1796              	.L94:
 1797              		.align	2
 1798              	.L93:
 1799 0054 00000000 		.word	USBUART_EP
 1800 0058 FC5F0040 		.word	1073766396
 1801              		.cfi_endproc
 1802              	.LFE15:
 1803              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1804              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1805              		.align	2
 1806              		.global	USBUART_DisableOutEP
 1807              		.thumb
 1808              		.thumb_func
 1809              		.type	USBUART_DisableOutEP, %function
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 73


 1810              	USBUART_DisableOutEP:
 1811              	.LFB16:
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1812              		.loc 1 2301 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 8
 1815              		@ frame_needed = 1, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
 1817 0000 80B4     		push	{r7}
 1818              		.cfi_def_cfa_offset 4
 1819              		.cfi_offset 7, -4
 1820 0002 83B0     		sub	sp, sp, #12
 1821              		.cfi_def_cfa_offset 16
 1822 0004 00AF     		add	r7, sp, #0
 1823              		.cfi_def_cfa_register 7
 1824 0006 0346     		mov	r3, r0
 1825 0008 FB71     		strb	r3, [r7, #7]
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1826              		.loc 1 2302 0
 1827 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1828 000c 002B     		cmp	r3, #0
 1829 000e 09D0     		beq	.L97
 1830              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1831 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1832 0012 082B     		cmp	r3, #8
 1833 0014 06D8     		bhi	.L97
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1834              		.loc 1 2305 0 is_stmt 1
 1835 0016 064A     		ldr	r2, .L98
 1836 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1837 001a 1B01     		lsls	r3, r3, #4
 1838 001c 1344     		add	r3, r3, r2
 1839 001e 0233     		adds	r3, r3, #2
 1840 0020 0822     		movs	r2, #8
 1841 0022 1A70     		strb	r2, [r3]
 1842              	.L97:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
 1843              		.loc 1 2307 0
 1844 0024 00BF     		nop
 1845 0026 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 74


 1846              		.cfi_def_cfa_offset 4
 1847 0028 BD46     		mov	sp, r7
 1848              		.cfi_def_cfa_register 13
 1849              		@ sp needed
 1850 002a 80BC     		pop	{r7}
 1851              		.cfi_restore 7
 1852              		.cfi_def_cfa_offset 0
 1853 002c 7047     		bx	lr
 1854              	.L99:
 1855 002e 00BF     		.align	2
 1856              	.L98:
 1857 0030 FC5F0040 		.word	1073766396
 1858              		.cfi_endproc
 1859              	.LFE16:
 1860              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1861              		.section	.text.USBUART_Force,"ax",%progbits
 1862              		.align	2
 1863              		.global	USBUART_Force
 1864              		.thumb
 1865              		.thumb_func
 1866              		.type	USBUART_Force, %function
 1867              	USBUART_Force:
 1868              	.LFB17:
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1869              		.loc 1 2331 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 8
 1872              		@ frame_needed = 1, uses_anonymous_args = 0
 1873              		@ link register save eliminated.
 1874 0000 80B4     		push	{r7}
 1875              		.cfi_def_cfa_offset 4
 1876              		.cfi_offset 7, -4
 1877 0002 83B0     		sub	sp, sp, #12
 1878              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 75


 1879 0004 00AF     		add	r7, sp, #0
 1880              		.cfi_def_cfa_register 7
 1881 0006 0346     		mov	r3, r0
 1882 0008 FB71     		strb	r3, [r7, #7]
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1883              		.loc 1 2335 0
 1884 000a 044A     		ldr	r2, .L101
 1885 000c FB79     		ldrb	r3, [r7, #7]
 1886 000e 1370     		strb	r3, [r2]
2336:Generated_Source\PSoC5/USBUART.c **** }
 1887              		.loc 1 2336 0
 1888 0010 00BF     		nop
 1889 0012 0C37     		adds	r7, r7, #12
 1890              		.cfi_def_cfa_offset 4
 1891 0014 BD46     		mov	sp, r7
 1892              		.cfi_def_cfa_register 13
 1893              		@ sp needed
 1894 0016 80BC     		pop	{r7}
 1895              		.cfi_restore 7
 1896              		.cfi_def_cfa_offset 0
 1897 0018 7047     		bx	lr
 1898              	.L102:
 1899 001a 00BF     		.align	2
 1900              	.L101:
 1901 001c 10600040 		.word	1073766416
 1902              		.cfi_endproc
 1903              	.LFE17:
 1904              		.size	USBUART_Force, .-USBUART_Force
 1905              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1906              		.align	2
 1907              		.global	USBUART_GetEPAckState
 1908              		.thumb
 1909              		.thumb_func
 1910              		.type	USBUART_GetEPAckState, %function
 1911              	USBUART_GetEPAckState:
 1912              	.LFB18:
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 76


2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1913              		.loc 1 2356 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 16
 1916              		@ frame_needed = 1, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
 1918 0000 80B4     		push	{r7}
 1919              		.cfi_def_cfa_offset 4
 1920              		.cfi_offset 7, -4
 1921 0002 85B0     		sub	sp, sp, #20
 1922              		.cfi_def_cfa_offset 24
 1923 0004 00AF     		add	r7, sp, #0
 1924              		.cfi_def_cfa_register 7
 1925 0006 0346     		mov	r3, r0
 1926 0008 FB71     		strb	r3, [r7, #7]
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1927              		.loc 1 2357 0
 1928 000a 0023     		movs	r3, #0
 1929 000c FB73     		strb	r3, [r7, #15]
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1930              		.loc 1 2359 0
 1931 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1932 0010 002B     		cmp	r3, #0
 1933 0012 0CD0     		beq	.L104
 1934              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1935 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1936 0016 082B     		cmp	r3, #8
 1937 0018 09D8     		bhi	.L104
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1938              		.loc 1 2361 0 is_stmt 1
 1939 001a 084A     		ldr	r2, .L106
 1940 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1941 001e 1B01     		lsls	r3, r3, #4
 1942 0020 1344     		add	r3, r3, r2
 1943 0022 0233     		adds	r3, r3, #2
 1944 0024 1B78     		ldrb	r3, [r3]
 1945 0026 DBB2     		uxtb	r3, r3
 1946 0028 03F01003 		and	r3, r3, #16
 1947 002c FB73     		strb	r3, [r7, #15]
 1948              	.L104:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
 1949              		.loc 1 2364 0
 1950 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2365:Generated_Source\PSoC5/USBUART.c **** }
 1951              		.loc 1 2365 0
 1952 0030 1846     		mov	r0, r3
 1953 0032 1437     		adds	r7, r7, #20
 1954              		.cfi_def_cfa_offset 4
 1955 0034 BD46     		mov	sp, r7
 1956              		.cfi_def_cfa_register 13
 1957              		@ sp needed
 1958 0036 80BC     		pop	{r7}
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 77


 1959              		.cfi_restore 7
 1960              		.cfi_def_cfa_offset 0
 1961 0038 7047     		bx	lr
 1962              	.L107:
 1963 003a 00BF     		.align	2
 1964              	.L106:
 1965 003c FC5F0040 		.word	1073766396
 1966              		.cfi_endproc
 1967              	.LFE18:
 1968              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1969              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1970              		.align	2
 1971              		.global	USBUART_SetPowerStatus
 1972              		.thumb
 1973              		.thumb_func
 1974              		.type	USBUART_SetPowerStatus, %function
 1975              	USBUART_SetPowerStatus:
 1976              	.LFB19:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1977              		.loc 1 2397 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 8
 1980              		@ frame_needed = 1, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
 1982 0000 80B4     		push	{r7}
 1983              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 78


 1984              		.cfi_offset 7, -4
 1985 0002 83B0     		sub	sp, sp, #12
 1986              		.cfi_def_cfa_offset 16
 1987 0004 00AF     		add	r7, sp, #0
 1988              		.cfi_def_cfa_register 7
 1989 0006 0346     		mov	r3, r0
 1990 0008 FB71     		strb	r3, [r7, #7]
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1991              		.loc 1 2398 0
 1992 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1993 000c 002B     		cmp	r3, #0
 1994 000e 08D0     		beq	.L109
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1995              		.loc 1 2400 0
 1996 0010 0A4B     		ldr	r3, .L112
 1997 0012 1B78     		ldrb	r3, [r3]
 1998 0014 DBB2     		uxtb	r3, r3
 1999 0016 43F00103 		orr	r3, r3, #1
 2000 001a DAB2     		uxtb	r2, r3
 2001 001c 074B     		ldr	r3, .L112
 2002 001e 1A70     		strb	r2, [r3]
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
 2003              		.loc 1 2406 0
 2004 0020 07E0     		b	.L111
 2005              	.L109:
2404:Generated_Source\PSoC5/USBUART.c ****     }
 2006              		.loc 1 2404 0
 2007 0022 064B     		ldr	r3, .L112
 2008 0024 1B78     		ldrb	r3, [r3]
 2009 0026 DBB2     		uxtb	r3, r3
 2010 0028 23F00103 		bic	r3, r3, #1
 2011 002c DAB2     		uxtb	r2, r3
 2012 002e 034B     		ldr	r3, .L112
 2013 0030 1A70     		strb	r2, [r3]
 2014              	.L111:
 2015              		.loc 1 2406 0
 2016 0032 00BF     		nop
 2017 0034 0C37     		adds	r7, r7, #12
 2018              		.cfi_def_cfa_offset 4
 2019 0036 BD46     		mov	sp, r7
 2020              		.cfi_def_cfa_register 13
 2021              		@ sp needed
 2022 0038 80BC     		pop	{r7}
 2023              		.cfi_restore 7
 2024              		.cfi_def_cfa_offset 0
 2025 003a 7047     		bx	lr
 2026              	.L113:
 2027              		.align	2
 2028              	.L112:
 2029 003c 00000000 		.word	USBUART_deviceStatus
 2030              		.cfi_endproc
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 79


 2031              	.LFE19:
 2032              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 2033              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 2034              		.align	2
 2035              		.global	USBUART_RWUEnabled
 2036              		.thumb
 2037              		.thumb_func
 2038              		.type	USBUART_RWUEnabled, %function
 2039              	USBUART_RWUEnabled:
 2040              	.LFB20:
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 80


2454:Generated_Source\PSoC5/USBUART.c **** {
 2041              		.loc 1 2454 0
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 8
 2044              		@ frame_needed = 1, uses_anonymous_args = 0
 2045              		@ link register save eliminated.
 2046 0000 80B4     		push	{r7}
 2047              		.cfi_def_cfa_offset 4
 2048              		.cfi_offset 7, -4
 2049 0002 83B0     		sub	sp, sp, #12
 2050              		.cfi_def_cfa_offset 16
 2051 0004 00AF     		add	r7, sp, #0
 2052              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 2053              		.loc 1 2455 0
 2054 0006 0023     		movs	r3, #0
 2055 0008 FB71     		strb	r3, [r7, #7]
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 2056              		.loc 1 2457 0
 2057 000a 074B     		ldr	r3, .L117
 2058 000c 1B78     		ldrb	r3, [r3]
 2059 000e DBB2     		uxtb	r3, r3
 2060 0010 03F00203 		and	r3, r3, #2
 2061 0014 002B     		cmp	r3, #0
 2062 0016 01D0     		beq	.L115
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 2063              		.loc 1 2459 0
 2064 0018 0123     		movs	r3, #1
 2065 001a FB71     		strb	r3, [r7, #7]
 2066              	.L115:
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
 2067              		.loc 1 2462 0
 2068 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2463:Generated_Source\PSoC5/USBUART.c **** }
 2069              		.loc 1 2463 0
 2070 001e 1846     		mov	r0, r3
 2071 0020 0C37     		adds	r7, r7, #12
 2072              		.cfi_def_cfa_offset 4
 2073 0022 BD46     		mov	sp, r7
 2074              		.cfi_def_cfa_register 13
 2075              		@ sp needed
 2076 0024 80BC     		pop	{r7}
 2077              		.cfi_restore 7
 2078              		.cfi_def_cfa_offset 0
 2079 0026 7047     		bx	lr
 2080              	.L118:
 2081              		.align	2
 2082              	.L117:
 2083 0028 00000000 		.word	USBUART_deviceStatus
 2084              		.cfi_endproc
 2085              	.LFE20:
 2086              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 2087              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 81


 2088              		.align	2
 2089              		.global	USBUART_GetDeviceAddress
 2090              		.thumb
 2091              		.thumb_func
 2092              		.type	USBUART_GetDeviceAddress, %function
 2093              	USBUART_GetDeviceAddress:
 2094              	.LFB21:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
 2095              		.loc 1 2478 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 1, uses_anonymous_args = 0
 2099              		@ link register save eliminated.
 2100 0000 80B4     		push	{r7}
 2101              		.cfi_def_cfa_offset 4
 2102              		.cfi_offset 7, -4
 2103 0002 00AF     		add	r7, sp, #0
 2104              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 2105              		.loc 1 2479 0
 2106 0004 044B     		ldr	r3, .L121
 2107 0006 1B78     		ldrb	r3, [r3]
 2108 0008 DBB2     		uxtb	r3, r3
 2109 000a 03F07F03 		and	r3, r3, #127
 2110 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC5/USBUART.c **** }
 2111              		.loc 1 2480 0
 2112 0010 1846     		mov	r0, r3
 2113 0012 BD46     		mov	sp, r7
 2114              		.cfi_def_cfa_register 13
 2115              		@ sp needed
 2116 0014 80BC     		pop	{r7}
 2117              		.cfi_restore 7
 2118              		.cfi_def_cfa_offset 0
 2119 0016 7047     		bx	lr
 2120              	.L122:
 2121              		.align	2
 2122              	.L121:
 2123 0018 08600040 		.word	1073766408
 2124              		.cfi_endproc
 2125              	.LFE21:
 2126              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 2127              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 82


 2128              		.align	2
 2129              		.global	USBUART_EnableSofInt
 2130              		.thumb
 2131              		.thumb_func
 2132              		.type	USBUART_EnableSofInt, %function
 2133              	USBUART_EnableSofInt:
 2134              	.LFB22:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 2135              		.loc 1 2492 0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 1, uses_anonymous_args = 0
 2139              		@ link register save eliminated.
 2140 0000 80B4     		push	{r7}
 2141              		.cfi_def_cfa_offset 4
 2142              		.cfi_offset 7, -4
 2143 0002 00AF     		add	r7, sp, #0
 2144              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 2145              		.loc 1 2499 0
 2146 0004 034B     		ldr	r3, .L124
 2147 0006 4FF40012 		mov	r2, #2097152
 2148 000a 1A60     		str	r2, [r3]
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
 2149              		.loc 1 2502 0
 2150 000c 00BF     		nop
 2151 000e BD46     		mov	sp, r7
 2152              		.cfi_def_cfa_register 13
 2153              		@ sp needed
 2154 0010 80BC     		pop	{r7}
 2155              		.cfi_restore 7
 2156              		.cfi_def_cfa_offset 0
 2157 0012 7047     		bx	lr
 2158              	.L125:
 2159              		.align	2
 2160              	.L124:
 2161 0014 00E100E0 		.word	-536813312
 2162              		.cfi_endproc
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 83


 2163              	.LFE22:
 2164              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 2165              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 2166              		.align	2
 2167              		.global	USBUART_DisableSofInt
 2168              		.thumb
 2169              		.thumb_func
 2170              		.type	USBUART_DisableSofInt, %function
 2171              	USBUART_DisableSofInt:
 2172              	.LFB23:
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 2173              		.loc 1 2514 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
 2178 0000 80B4     		push	{r7}
 2179              		.cfi_def_cfa_offset 4
 2180              		.cfi_offset 7, -4
 2181 0002 00AF     		add	r7, sp, #0
 2182              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 2183              		.loc 1 2521 0
 2184 0004 034B     		ldr	r3, .L127
 2185 0006 4FF40012 		mov	r2, #2097152
 2186 000a 1A60     		str	r2, [r3]
2522:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC5/USBUART.c **** }
 2187              		.loc 1 2524 0
 2188 000c 00BF     		nop
 2189 000e BD46     		mov	sp, r7
 2190              		.cfi_def_cfa_register 13
 2191              		@ sp needed
 2192 0010 80BC     		pop	{r7}
 2193              		.cfi_restore 7
 2194              		.cfi_def_cfa_offset 0
 2195 0012 7047     		bx	lr
 2196              	.L128:
 2197              		.align	2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 84


 2198              	.L127:
 2199 0014 80E100E0 		.word	-536813184
 2200              		.cfi_endproc
 2201              	.LFE23:
 2202              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 2203              		.text
 2204              	.Letext0:
 2205              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2206              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 2207              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 2208              		.section	.debug_info,"",%progbits
 2209              	.Ldebug_info0:
 2210 0000 A9070000 		.4byte	0x7a9
 2211 0004 0400     		.2byte	0x4
 2212 0006 00000000 		.4byte	.Ldebug_abbrev0
 2213 000a 04       		.byte	0x4
 2214 000b 01       		.uleb128 0x1
 2215 000c 47010000 		.4byte	.LASF96
 2216 0010 0C       		.byte	0xc
 2217 0011 24030000 		.4byte	.LASF97
 2218 0015 D8020000 		.4byte	.LASF98
 2219 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2220 001d 00000000 		.4byte	0
 2221 0021 00000000 		.4byte	.Ldebug_line0
 2222 0025 02       		.uleb128 0x2
 2223 0026 01       		.byte	0x1
 2224 0027 06       		.byte	0x6
 2225 0028 CE030000 		.4byte	.LASF0
 2226 002c 02       		.uleb128 0x2
 2227 002d 01       		.byte	0x1
 2228 002e 08       		.byte	0x8
 2229 002f 66030000 		.4byte	.LASF1
 2230 0033 02       		.uleb128 0x2
 2231 0034 02       		.byte	0x2
 2232 0035 05       		.byte	0x5
 2233 0036 8D000000 		.4byte	.LASF2
 2234 003a 02       		.uleb128 0x2
 2235 003b 02       		.byte	0x2
 2236 003c 07       		.byte	0x7
 2237 003d 59040000 		.4byte	.LASF3
 2238 0041 02       		.uleb128 0x2
 2239 0042 04       		.byte	0x4
 2240 0043 05       		.byte	0x5
 2241 0044 91040000 		.4byte	.LASF4
 2242 0048 02       		.uleb128 0x2
 2243 0049 04       		.byte	0x4
 2244 004a 07       		.byte	0x7
 2245 004b FC040000 		.4byte	.LASF5
 2246 004f 02       		.uleb128 0x2
 2247 0050 08       		.byte	0x8
 2248 0051 05       		.byte	0x5
 2249 0052 94020000 		.4byte	.LASF6
 2250 0056 02       		.uleb128 0x2
 2251 0057 08       		.byte	0x8
 2252 0058 07       		.byte	0x7
 2253 0059 F2030000 		.4byte	.LASF7
 2254 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 85


 2255 005e 04       		.byte	0x4
 2256 005f 05       		.byte	0x5
 2257 0060 696E7400 		.ascii	"int\000"
 2258 0064 02       		.uleb128 0x2
 2259 0065 04       		.byte	0x4
 2260 0066 07       		.byte	0x7
 2261 0067 1F040000 		.4byte	.LASF8
 2262 006b 04       		.uleb128 0x4
 2263 006c D2040000 		.4byte	.LASF9
 2264 0070 02       		.byte	0x2
 2265 0071 E401     		.2byte	0x1e4
 2266 0073 2C000000 		.4byte	0x2c
 2267 0077 04       		.uleb128 0x4
 2268 0078 E8010000 		.4byte	.LASF10
 2269 007c 02       		.byte	0x2
 2270 007d E501     		.2byte	0x1e5
 2271 007f 3A000000 		.4byte	0x3a
 2272 0083 04       		.uleb128 0x4
 2273 0084 F0040000 		.4byte	.LASF11
 2274 0088 02       		.byte	0x2
 2275 0089 E601     		.2byte	0x1e6
 2276 008b 48000000 		.4byte	0x48
 2277 008f 02       		.uleb128 0x2
 2278 0090 04       		.byte	0x4
 2279 0091 04       		.byte	0x4
 2280 0092 4B020000 		.4byte	.LASF12
 2281 0096 02       		.uleb128 0x2
 2282 0097 08       		.byte	0x8
 2283 0098 04       		.byte	0x4
 2284 0099 0E050000 		.4byte	.LASF13
 2285 009d 02       		.uleb128 0x2
 2286 009e 01       		.byte	0x1
 2287 009f 08       		.byte	0x8
 2288 00a0 8C040000 		.4byte	.LASF14
 2289 00a4 04       		.uleb128 0x4
 2290 00a5 F7040000 		.4byte	.LASF15
 2291 00a9 02       		.byte	0x2
 2292 00aa 8E02     		.2byte	0x28e
 2293 00ac B0000000 		.4byte	0xb0
 2294 00b0 05       		.uleb128 0x5
 2295 00b1 6B000000 		.4byte	0x6b
 2296 00b5 04       		.uleb128 0x4
 2297 00b6 3C040000 		.4byte	.LASF16
 2298 00ba 02       		.byte	0x2
 2299 00bb 9002     		.2byte	0x290
 2300 00bd C1000000 		.4byte	0xc1
 2301 00c1 05       		.uleb128 0x5
 2302 00c2 83000000 		.4byte	0x83
 2303 00c6 02       		.uleb128 0x2
 2304 00c7 08       		.byte	0x8
 2305 00c8 04       		.byte	0x4
 2306 00c9 D0000000 		.4byte	.LASF17
 2307 00cd 02       		.uleb128 0x2
 2308 00ce 04       		.byte	0x4
 2309 00cf 07       		.byte	0x7
 2310 00d0 97000000 		.4byte	.LASF18
 2311 00d4 06       		.uleb128 0x6
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 86


 2312 00d5 0C       		.byte	0xc
 2313 00d6 03       		.byte	0x3
 2314 00d7 8D       		.byte	0x8d
 2315 00d8 49010000 		.4byte	0x149
 2316 00dc 07       		.uleb128 0x7
 2317 00dd 74040000 		.4byte	.LASF19
 2318 00e1 03       		.byte	0x3
 2319 00e2 8F       		.byte	0x8f
 2320 00e3 6B000000 		.4byte	0x6b
 2321 00e7 00       		.byte	0
 2322 00e8 07       		.uleb128 0x7
 2323 00e9 4A050000 		.4byte	.LASF20
 2324 00ed 03       		.byte	0x3
 2325 00ee 90       		.byte	0x90
 2326 00ef 6B000000 		.4byte	0x6b
 2327 00f3 01       		.byte	0x1
 2328 00f4 07       		.uleb128 0x7
 2329 00f5 E6040000 		.4byte	.LASF21
 2330 00f9 03       		.byte	0x3
 2331 00fa 91       		.byte	0x91
 2332 00fb 6B000000 		.4byte	0x6b
 2333 00ff 02       		.byte	0x2
 2334 0100 07       		.uleb128 0x7
 2335 0101 00000000 		.4byte	.LASF22
 2336 0105 03       		.byte	0x3
 2337 0106 92       		.byte	0x92
 2338 0107 6B000000 		.4byte	0x6b
 2339 010b 03       		.byte	0x3
 2340 010c 07       		.uleb128 0x7
 2341 010d C6040000 		.4byte	.LASF23
 2342 0111 03       		.byte	0x3
 2343 0112 93       		.byte	0x93
 2344 0113 6B000000 		.4byte	0x6b
 2345 0117 04       		.byte	0x4
 2346 0118 07       		.uleb128 0x7
 2347 0119 B7000000 		.4byte	.LASF24
 2348 011d 03       		.byte	0x3
 2349 011e 94       		.byte	0x94
 2350 011f 6B000000 		.4byte	0x6b
 2351 0123 05       		.byte	0x5
 2352 0124 07       		.uleb128 0x7
 2353 0125 A0030000 		.4byte	.LASF25
 2354 0129 03       		.byte	0x3
 2355 012a 95       		.byte	0x95
 2356 012b 77000000 		.4byte	0x77
 2357 012f 06       		.byte	0x6
 2358 0130 07       		.uleb128 0x7
 2359 0131 55050000 		.4byte	.LASF26
 2360 0135 03       		.byte	0x3
 2361 0136 96       		.byte	0x96
 2362 0137 77000000 		.4byte	0x77
 2363 013b 08       		.byte	0x8
 2364 013c 07       		.uleb128 0x7
 2365 013d ED050000 		.4byte	.LASF27
 2366 0141 03       		.byte	0x3
 2367 0142 97       		.byte	0x97
 2368 0143 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 87


 2369 0147 0A       		.byte	0xa
 2370 0148 00       		.byte	0
 2371 0149 08       		.uleb128 0x8
 2372 014a 76050000 		.4byte	.LASF28
 2373 014e 03       		.byte	0x3
 2374 014f 98       		.byte	0x98
 2375 0150 D4000000 		.4byte	0xd4
 2376 0154 06       		.uleb128 0x6
 2377 0155 10       		.byte	0x10
 2378 0156 03       		.byte	0x3
 2379 0157 D4       		.byte	0xd4
 2380 0158 8D010000 		.4byte	0x18d
 2381 015c 07       		.uleb128 0x7
 2382 015d CB040000 		.4byte	.LASF29
 2383 0161 03       		.byte	0x3
 2384 0162 D6       		.byte	0xd6
 2385 0163 6B000000 		.4byte	0x6b
 2386 0167 00       		.byte	0
 2387 0168 07       		.uleb128 0x7
 2388 0169 DF040000 		.4byte	.LASF30
 2389 016d 03       		.byte	0x3
 2390 016e D7       		.byte	0xd7
 2391 016f 6B000000 		.4byte	0x6b
 2392 0173 01       		.byte	0x1
 2393 0174 07       		.uleb128 0x7
 2394 0175 BF020000 		.4byte	.LASF31
 2395 0179 03       		.byte	0x3
 2396 017a D8       		.byte	0xd8
 2397 017b 6B000000 		.4byte	0x6b
 2398 017f 02       		.byte	0x2
 2399 0180 09       		.uleb128 0x9
 2400 0181 67617000 		.ascii	"gap\000"
 2401 0185 03       		.byte	0x3
 2402 0186 D9       		.byte	0xd9
 2403 0187 8D010000 		.4byte	0x18d
 2404 018b 03       		.byte	0x3
 2405 018c 00       		.byte	0
 2406 018d 0A       		.uleb128 0xa
 2407 018e 6B000000 		.4byte	0x6b
 2408 0192 9D010000 		.4byte	0x19d
 2409 0196 0B       		.uleb128 0xb
 2410 0197 CD000000 		.4byte	0xcd
 2411 019b 0C       		.byte	0xc
 2412 019c 00       		.byte	0
 2413 019d 08       		.uleb128 0x8
 2414 019e 0B020000 		.4byte	.LASF32
 2415 01a2 03       		.byte	0x3
 2416 01a3 DA       		.byte	0xda
 2417 01a4 54010000 		.4byte	0x154
 2418 01a8 06       		.uleb128 0x6
 2419 01a9 10       		.byte	0x10
 2420 01aa 03       		.byte	0x3
 2421 01ab E6       		.byte	0xe6
 2422 01ac 29020000 		.4byte	0x229
 2423 01b0 07       		.uleb128 0x7
 2424 01b1 36040000 		.4byte	.LASF33
 2425 01b5 03       		.byte	0x3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 88


 2426 01b6 E8       		.byte	0xe8
 2427 01b7 6B000000 		.4byte	0x6b
 2428 01bb 00       		.byte	0
 2429 01bc 07       		.uleb128 0x7
 2430 01bd 85000000 		.4byte	.LASF34
 2431 01c1 03       		.byte	0x3
 2432 01c2 E9       		.byte	0xe9
 2433 01c3 6B000000 		.4byte	0x6b
 2434 01c7 01       		.byte	0x1
 2435 01c8 07       		.uleb128 0x7
 2436 01c9 BC030000 		.4byte	.LASF35
 2437 01cd 03       		.byte	0x3
 2438 01ce EA       		.byte	0xea
 2439 01cf 6B000000 		.4byte	0x6b
 2440 01d3 02       		.byte	0x2
 2441 01d4 07       		.uleb128 0x7
 2442 01d5 E4050000 		.4byte	.LASF36
 2443 01d9 03       		.byte	0x3
 2444 01da EB       		.byte	0xeb
 2445 01db 6B000000 		.4byte	0x6b
 2446 01df 03       		.byte	0x3
 2447 01e0 07       		.uleb128 0x7
 2448 01e1 31040000 		.4byte	.LASF37
 2449 01e5 03       		.byte	0x3
 2450 01e6 EC       		.byte	0xec
 2451 01e7 6B000000 		.4byte	0x6b
 2452 01eb 04       		.byte	0x4
 2453 01ec 07       		.uleb128 0x7
 2454 01ed CE050000 		.4byte	.LASF38
 2455 01f1 03       		.byte	0x3
 2456 01f2 ED       		.byte	0xed
 2457 01f3 6B000000 		.4byte	0x6b
 2458 01f7 05       		.byte	0x5
 2459 01f8 07       		.uleb128 0x7
 2460 01f9 EF010000 		.4byte	.LASF39
 2461 01fd 03       		.byte	0x3
 2462 01fe EE       		.byte	0xee
 2463 01ff 6B000000 		.4byte	0x6b
 2464 0203 06       		.byte	0x6
 2465 0204 07       		.uleb128 0x7
 2466 0205 6C040000 		.4byte	.LASF40
 2467 0209 03       		.byte	0x3
 2468 020a EF       		.byte	0xef
 2469 020b 6B000000 		.4byte	0x6b
 2470 020f 07       		.byte	0x7
 2471 0210 07       		.uleb128 0x7
 2472 0211 2C040000 		.4byte	.LASF41
 2473 0215 03       		.byte	0x3
 2474 0216 F0       		.byte	0xf0
 2475 0217 6B000000 		.4byte	0x6b
 2476 021b 08       		.byte	0x8
 2477 021c 09       		.uleb128 0x9
 2478 021d 67617000 		.ascii	"gap\000"
 2479 0221 03       		.byte	0x3
 2480 0222 F1       		.byte	0xf1
 2481 0223 29020000 		.4byte	0x229
 2482 0227 09       		.byte	0x9
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 89


 2483 0228 00       		.byte	0
 2484 0229 0A       		.uleb128 0xa
 2485 022a 6B000000 		.4byte	0x6b
 2486 022e 39020000 		.4byte	0x239
 2487 0232 0B       		.uleb128 0xb
 2488 0233 CD000000 		.4byte	0xcd
 2489 0237 06       		.byte	0x6
 2490 0238 00       		.byte	0
 2491 0239 08       		.uleb128 0x8
 2492 023a 09040000 		.4byte	.LASF42
 2493 023e 03       		.byte	0x3
 2494 023f F2       		.byte	0xf2
 2495 0240 A8010000 		.4byte	0x1a8
 2496 0244 0C       		.uleb128 0xc
 2497 0245 90       		.byte	0x90
 2498 0246 03       		.byte	0x3
 2499 0247 0E01     		.2byte	0x10e
 2500 0249 5B020000 		.4byte	0x25b
 2501 024d 0D       		.uleb128 0xd
 2502 024e 21020000 		.4byte	.LASF43
 2503 0252 03       		.byte	0x3
 2504 0253 1001     		.2byte	0x110
 2505 0255 5B020000 		.4byte	0x25b
 2506 0259 00       		.byte	0
 2507 025a 00       		.byte	0
 2508 025b 0A       		.uleb128 0xa
 2509 025c 9D010000 		.4byte	0x19d
 2510 0260 6B020000 		.4byte	0x26b
 2511 0264 0B       		.uleb128 0xb
 2512 0265 CD000000 		.4byte	0xcd
 2513 0269 08       		.byte	0x8
 2514 026a 00       		.byte	0
 2515 026b 04       		.uleb128 0x4
 2516 026c F4000000 		.4byte	.LASF44
 2517 0270 03       		.byte	0x3
 2518 0271 1101     		.2byte	0x111
 2519 0273 44020000 		.4byte	0x244
 2520 0277 0C       		.uleb128 0xc
 2521 0278 90       		.byte	0x90
 2522 0279 03       		.byte	0x3
 2523 027a 1401     		.2byte	0x114
 2524 027c 8E020000 		.4byte	0x28e
 2525 0280 0D       		.uleb128 0xd
 2526 0281 BE000000 		.4byte	.LASF45
 2527 0285 03       		.byte	0x3
 2528 0286 1601     		.2byte	0x116
 2529 0288 8E020000 		.4byte	0x28e
 2530 028c 00       		.byte	0
 2531 028d 00       		.byte	0
 2532 028e 0A       		.uleb128 0xa
 2533 028f 39020000 		.4byte	0x239
 2534 0293 9E020000 		.4byte	0x29e
 2535 0297 0B       		.uleb128 0xb
 2536 0298 CD000000 		.4byte	0xcd
 2537 029c 08       		.byte	0x8
 2538 029d 00       		.byte	0
 2539 029e 04       		.uleb128 0x4
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 90


 2540 029f A0000000 		.4byte	.LASF46
 2541 02a3 03       		.byte	0x3
 2542 02a4 1701     		.2byte	0x117
 2543 02a6 77020000 		.4byte	0x277
 2544 02aa 0E       		.uleb128 0xe
 2545 02ab 20010000 		.4byte	.LASF49
 2546 02af 01       		.byte	0x1
 2547 02b0 BA       		.byte	0xba
 2548 02b1 00000000 		.4byte	.LFB0
 2549 02b5 3C000000 		.4byte	.LFE0-.LFB0
 2550 02b9 01       		.uleb128 0x1
 2551 02ba 9C       		.byte	0x9c
 2552 02bb DC020000 		.4byte	0x2dc
 2553 02bf 0F       		.uleb128 0xf
 2554 02c0 44020000 		.4byte	.LASF47
 2555 02c4 01       		.byte	0x1
 2556 02c5 BA       		.byte	0xba
 2557 02c6 6B000000 		.4byte	0x6b
 2558 02ca 02       		.uleb128 0x2
 2559 02cb 91       		.byte	0x91
 2560 02cc 77       		.sleb128 -9
 2561 02cd 0F       		.uleb128 0xf
 2562 02ce EF000000 		.4byte	.LASF48
 2563 02d2 01       		.byte	0x1
 2564 02d3 BA       		.byte	0xba
 2565 02d4 6B000000 		.4byte	0x6b
 2566 02d8 02       		.uleb128 0x2
 2567 02d9 91       		.byte	0x91
 2568 02da 76       		.sleb128 -10
 2569 02db 00       		.byte	0
 2570 02dc 0E       		.uleb128 0xe
 2571 02dd C1030000 		.4byte	.LASF50
 2572 02e1 01       		.byte	0x1
 2573 02e2 D3       		.byte	0xd3
 2574 02e3 00000000 		.4byte	.LFB1
 2575 02e7 D4010000 		.4byte	.LFE1-.LFB1
 2576 02eb 01       		.uleb128 0x1
 2577 02ec 9C       		.byte	0x9c
 2578 02ed 0C030000 		.4byte	0x30c
 2579 02f1 10       		.uleb128 0x10
 2580 02f2 FE050000 		.4byte	.LASF51
 2581 02f6 01       		.byte	0x1
 2582 02f7 FA       		.byte	0xfa
 2583 02f8 6B000000 		.4byte	0x6b
 2584 02fc 02       		.uleb128 0x2
 2585 02fd 91       		.byte	0x91
 2586 02fe 75       		.sleb128 -11
 2587 02ff 11       		.uleb128 0x11
 2588 0300 6900     		.ascii	"i\000"
 2589 0302 01       		.byte	0x1
 2590 0303 FD       		.byte	0xfd
 2591 0304 77000000 		.4byte	0x77
 2592 0308 02       		.uleb128 0x2
 2593 0309 91       		.byte	0x91
 2594 030a 76       		.sleb128 -10
 2595 030b 00       		.byte	0
 2596 030c 12       		.uleb128 0x12
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 91


 2597 030d 60050000 		.4byte	.LASF52
 2598 0311 01       		.byte	0x1
 2599 0312 CC01     		.2byte	0x1cc
 2600 0314 00000000 		.4byte	.LFB2
 2601 0318 1C010000 		.4byte	.LFE2-.LFB2
 2602 031c 01       		.uleb128 0x1
 2603 031d 9C       		.byte	0x9c
 2604 031e 41030000 		.4byte	0x341
 2605 0322 13       		.uleb128 0x13
 2606 0323 44020000 		.4byte	.LASF47
 2607 0327 01       		.byte	0x1
 2608 0328 CC01     		.2byte	0x1cc
 2609 032a 6B000000 		.4byte	0x6b
 2610 032e 02       		.uleb128 0x2
 2611 032f 91       		.byte	0x91
 2612 0330 77       		.sleb128 -9
 2613 0331 13       		.uleb128 0x13
 2614 0332 EF000000 		.4byte	.LASF48
 2615 0336 01       		.byte	0x1
 2616 0337 CC01     		.2byte	0x1cc
 2617 0339 6B000000 		.4byte	0x6b
 2618 033d 02       		.uleb128 0x2
 2619 033e 91       		.byte	0x91
 2620 033f 76       		.sleb128 -10
 2621 0340 00       		.byte	0
 2622 0341 14       		.uleb128 0x14
 2623 0342 DA030000 		.4byte	.LASF80
 2624 0346 01       		.byte	0x1
 2625 0347 9F02     		.2byte	0x29f
 2626 0349 00000000 		.4byte	.LFB3
 2627 034d 68000000 		.4byte	.LFE3-.LFB3
 2628 0351 01       		.uleb128 0x1
 2629 0352 9C       		.byte	0x9c
 2630 0353 12       		.uleb128 0x12
 2631 0354 2F060000 		.4byte	.LASF53
 2632 0358 01       		.byte	0x1
 2633 0359 D902     		.2byte	0x2d9
 2634 035b 00000000 		.4byte	.LFB4
 2635 035f 14010000 		.4byte	.LFE4-.LFB4
 2636 0363 01       		.uleb128 0x1
 2637 0364 9C       		.byte	0x9c
 2638 0365 79030000 		.4byte	0x379
 2639 0369 15       		.uleb128 0x15
 2640 036a FE050000 		.4byte	.LASF51
 2641 036e 01       		.byte	0x1
 2642 036f DB02     		.2byte	0x2db
 2643 0371 6B000000 		.4byte	0x6b
 2644 0375 02       		.uleb128 0x2
 2645 0376 91       		.byte	0x91
 2646 0377 77       		.sleb128 -9
 2647 0378 00       		.byte	0
 2648 0379 16       		.uleb128 0x16
 2649 037a 8D050000 		.4byte	.LASF55
 2650 037e 01       		.byte	0x1
 2651 037f 5103     		.2byte	0x351
 2652 0381 6B000000 		.4byte	0x6b
 2653 0385 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 92


 2654 0389 38000000 		.4byte	.LFE5-.LFB5
 2655 038d 01       		.uleb128 0x1
 2656 038e 9C       		.byte	0x9c
 2657 038f A3030000 		.4byte	0x3a3
 2658 0393 15       		.uleb128 0x15
 2659 0394 D8040000 		.4byte	.LASF54
 2660 0398 01       		.byte	0x1
 2661 0399 5303     		.2byte	0x353
 2662 039b 6B000000 		.4byte	0x6b
 2663 039f 02       		.uleb128 0x2
 2664 03a0 91       		.byte	0x91
 2665 03a1 77       		.sleb128 -9
 2666 03a2 00       		.byte	0
 2667 03a3 17       		.uleb128 0x17
 2668 03a4 51020000 		.4byte	.LASF78
 2669 03a8 01       		.byte	0x1
 2670 03a9 6803     		.2byte	0x368
 2671 03ab 6B000000 		.4byte	0x6b
 2672 03af 00000000 		.4byte	.LFB6
 2673 03b3 18000000 		.4byte	.LFE6-.LFB6
 2674 03b7 01       		.uleb128 0x1
 2675 03b8 9C       		.byte	0x9c
 2676 03b9 16       		.uleb128 0x16
 2677 03ba 25000000 		.4byte	.LASF56
 2678 03be 01       		.byte	0x1
 2679 03bf 8203     		.2byte	0x382
 2680 03c1 6B000000 		.4byte	0x6b
 2681 03c5 00000000 		.4byte	.LFB7
 2682 03c9 30000000 		.4byte	.LFE7-.LFB7
 2683 03cd 01       		.uleb128 0x1
 2684 03ce 9C       		.byte	0x9c
 2685 03cf E3030000 		.4byte	0x3e3
 2686 03d3 18       		.uleb128 0x18
 2687 03d4 72657300 		.ascii	"res\000"
 2688 03d8 01       		.byte	0x1
 2689 03d9 8403     		.2byte	0x384
 2690 03db 6B000000 		.4byte	0x6b
 2691 03df 02       		.uleb128 0x2
 2692 03e0 91       		.byte	0x91
 2693 03e1 77       		.sleb128 -9
 2694 03e2 00       		.byte	0
 2695 03e3 16       		.uleb128 0x16
 2696 03e4 2E050000 		.4byte	.LASF57
 2697 03e8 01       		.byte	0x1
 2698 03e9 9F03     		.2byte	0x39f
 2699 03eb 6B000000 		.4byte	0x6b
 2700 03ef 00000000 		.4byte	.LFB8
 2701 03f3 20000000 		.4byte	.LFE8-.LFB8
 2702 03f7 01       		.uleb128 0x1
 2703 03f8 9C       		.byte	0x9c
 2704 03f9 0D040000 		.4byte	0x40d
 2705 03fd 13       		.uleb128 0x13
 2706 03fe 09000000 		.4byte	.LASF58
 2707 0402 01       		.byte	0x1
 2708 0403 9F03     		.2byte	0x39f
 2709 0405 6B000000 		.4byte	0x6b
 2710 0409 02       		.uleb128 0x2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 93


 2711 040a 91       		.byte	0x91
 2712 040b 77       		.sleb128 -9
 2713 040c 00       		.byte	0
 2714 040d 16       		.uleb128 0x16
 2715 040e 9A040000 		.4byte	.LASF59
 2716 0412 01       		.byte	0x1
 2717 0413 BF03     		.2byte	0x3bf
 2718 0415 6B000000 		.4byte	0x6b
 2719 0419 00000000 		.4byte	.LFB9
 2720 041d 2C000000 		.4byte	.LFE9-.LFB9
 2721 0421 01       		.uleb128 0x1
 2722 0422 9C       		.byte	0x9c
 2723 0423 37040000 		.4byte	0x437
 2724 0427 13       		.uleb128 0x13
 2725 0428 AD040000 		.4byte	.LASF60
 2726 042c 01       		.byte	0x1
 2727 042d BF03     		.2byte	0x3bf
 2728 042f 6B000000 		.4byte	0x6b
 2729 0433 02       		.uleb128 0x2
 2730 0434 91       		.byte	0x91
 2731 0435 77       		.sleb128 -9
 2732 0436 00       		.byte	0
 2733 0437 16       		.uleb128 0x16
 2734 0438 A3050000 		.4byte	.LASF61
 2735 043c 01       		.byte	0x1
 2736 043d D603     		.2byte	0x3d6
 2737 043f 77000000 		.4byte	0x77
 2738 0443 00000000 		.4byte	.LFB10
 2739 0447 60000000 		.4byte	.LFE10-.LFB10
 2740 044b 01       		.uleb128 0x1
 2741 044c 9C       		.byte	0x9c
 2742 044d 70040000 		.4byte	0x470
 2743 0451 13       		.uleb128 0x13
 2744 0452 AD040000 		.4byte	.LASF60
 2745 0456 01       		.byte	0x1
 2746 0457 D603     		.2byte	0x3d6
 2747 0459 6B000000 		.4byte	0x6b
 2748 045d 02       		.uleb128 0x2
 2749 045e 91       		.byte	0x91
 2750 045f 6F       		.sleb128 -17
 2751 0460 15       		.uleb128 0x15
 2752 0461 20000000 		.4byte	.LASF62
 2753 0465 01       		.byte	0x1
 2754 0466 D803     		.2byte	0x3d8
 2755 0468 77000000 		.4byte	0x77
 2756 046c 02       		.uleb128 0x2
 2757 046d 91       		.byte	0x91
 2758 046e 76       		.sleb128 -10
 2759 046f 00       		.byte	0
 2760 0470 12       		.uleb128 0x12
 2761 0471 C5020000 		.4byte	.LASF63
 2762 0475 01       		.byte	0x1
 2763 0476 4A04     		.2byte	0x44a
 2764 0478 00000000 		.4byte	.LFB11
 2765 047c C8000000 		.4byte	.LFE11-.LFB11
 2766 0480 01       		.uleb128 0x1
 2767 0481 9C       		.byte	0x9c
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 94


 2768 0482 C3040000 		.4byte	0x4c3
 2769 0486 13       		.uleb128 0x13
 2770 0487 AD040000 		.4byte	.LASF60
 2771 048b 01       		.byte	0x1
 2772 048c 4A04     		.2byte	0x44a
 2773 048e 6B000000 		.4byte	0x6b
 2774 0492 02       		.uleb128 0x2
 2775 0493 91       		.byte	0x91
 2776 0494 67       		.sleb128 -25
 2777 0495 13       		.uleb128 0x13
 2778 0496 7F000000 		.4byte	.LASF64
 2779 049a 01       		.byte	0x1
 2780 049b 4A04     		.2byte	0x44a
 2781 049d C3040000 		.4byte	0x4c3
 2782 04a1 02       		.uleb128 0x2
 2783 04a2 91       		.byte	0x91
 2784 04a3 60       		.sleb128 -32
 2785 04a4 18       		.uleb128 0x18
 2786 04a5 73726300 		.ascii	"src\000"
 2787 04a9 01       		.byte	0x1
 2788 04aa 4D04     		.2byte	0x44d
 2789 04ac 77000000 		.4byte	0x77
 2790 04b0 02       		.uleb128 0x2
 2791 04b1 91       		.byte	0x91
 2792 04b2 6E       		.sleb128 -18
 2793 04b3 18       		.uleb128 0x18
 2794 04b4 64737400 		.ascii	"dst\000"
 2795 04b8 01       		.byte	0x1
 2796 04b9 4E04     		.2byte	0x44e
 2797 04bb 77000000 		.4byte	0x77
 2798 04bf 02       		.uleb128 0x2
 2799 04c0 91       		.byte	0x91
 2800 04c1 6C       		.sleb128 -20
 2801 04c2 00       		.byte	0
 2802 04c3 19       		.uleb128 0x19
 2803 04c4 04       		.byte	0x4
 2804 04c5 C9040000 		.4byte	0x4c9
 2805 04c9 1A       		.uleb128 0x1a
 2806 04ca 6B000000 		.4byte	0x6b
 2807 04ce 12       		.uleb128 0x12
 2808 04cf AB030000 		.4byte	.LASF65
 2809 04d3 01       		.byte	0x1
 2810 04d4 C004     		.2byte	0x4c0
 2811 04d6 00000000 		.4byte	.LFB12
 2812 04da 64000000 		.4byte	.LFE12-.LFB12
 2813 04de 01       		.uleb128 0x1
 2814 04df 9C       		.byte	0x9c
 2815 04e0 01050000 		.4byte	0x501
 2816 04e4 13       		.uleb128 0x13
 2817 04e5 AD040000 		.4byte	.LASF60
 2818 04e9 01       		.byte	0x1
 2819 04ea C004     		.2byte	0x4c0
 2820 04ec 6B000000 		.4byte	0x6b
 2821 04f0 02       		.uleb128 0x2
 2822 04f1 91       		.byte	0x91
 2823 04f2 6F       		.sleb128 -17
 2824 04f3 18       		.uleb128 0x18
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 95


 2825 04f4 6900     		.ascii	"i\000"
 2826 04f6 01       		.byte	0x1
 2827 04f7 C204     		.2byte	0x4c2
 2828 04f9 6B000000 		.4byte	0x6b
 2829 04fd 02       		.uleb128 0x2
 2830 04fe 91       		.byte	0x91
 2831 04ff 77       		.sleb128 -9
 2832 0500 00       		.byte	0
 2833 0501 12       		.uleb128 0x12
 2834 0502 7B040000 		.4byte	.LASF66
 2835 0506 01       		.byte	0x1
 2836 0507 3E05     		.2byte	0x53e
 2837 0509 00000000 		.4byte	.LFB13
 2838 050d 98010000 		.4byte	.LFE13-.LFB13
 2839 0511 01       		.uleb128 0x1
 2840 0512 9C       		.byte	0x9c
 2841 0513 45050000 		.4byte	0x545
 2842 0517 13       		.uleb128 0x13
 2843 0518 AD040000 		.4byte	.LASF60
 2844 051c 01       		.byte	0x1
 2845 051d 3E05     		.2byte	0x53e
 2846 051f 6B000000 		.4byte	0x6b
 2847 0523 02       		.uleb128 0x2
 2848 0524 91       		.byte	0x91
 2849 0525 6F       		.sleb128 -17
 2850 0526 13       		.uleb128 0x13
 2851 0527 7F000000 		.4byte	.LASF64
 2852 052b 01       		.byte	0x1
 2853 052c 3E05     		.2byte	0x53e
 2854 052e C3040000 		.4byte	0x4c3
 2855 0532 02       		.uleb128 0x2
 2856 0533 91       		.byte	0x91
 2857 0534 68       		.sleb128 -24
 2858 0535 13       		.uleb128 0x13
 2859 0536 3D020000 		.4byte	.LASF67
 2860 053a 01       		.byte	0x1
 2861 053b 3E05     		.2byte	0x53e
 2862 053d 77000000 		.4byte	0x77
 2863 0541 02       		.uleb128 0x2
 2864 0542 91       		.byte	0x91
 2865 0543 6C       		.sleb128 -20
 2866 0544 00       		.byte	0
 2867 0545 1B       		.uleb128 0x1b
 2868 0546 54030000 		.4byte	.LASF68
 2869 054a 01       		.byte	0x1
 2870 054b 7506     		.2byte	0x675
 2871 054d 77000000 		.4byte	0x77
 2872 0551 00000000 		.4byte	.LFB14
 2873 0555 08010000 		.4byte	.LFE14-.LFB14
 2874 0559 01       		.uleb128 0x1
 2875 055a 9C       		.byte	0x9c
 2876 055b 8D050000 		.4byte	0x58d
 2877 055f 13       		.uleb128 0x13
 2878 0560 AD040000 		.4byte	.LASF60
 2879 0564 01       		.byte	0x1
 2880 0565 7506     		.2byte	0x675
 2881 0567 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 96


 2882 056b 02       		.uleb128 0x2
 2883 056c 91       		.byte	0x91
 2884 056d 77       		.sleb128 -9
 2885 056e 13       		.uleb128 0x13
 2886 056f 7F000000 		.4byte	.LASF64
 2887 0573 01       		.byte	0x1
 2888 0574 7506     		.2byte	0x675
 2889 0576 8D050000 		.4byte	0x58d
 2890 057a 02       		.uleb128 0x2
 2891 057b 91       		.byte	0x91
 2892 057c 70       		.sleb128 -16
 2893 057d 13       		.uleb128 0x13
 2894 057e 3D020000 		.4byte	.LASF67
 2895 0582 01       		.byte	0x1
 2896 0583 7506     		.2byte	0x675
 2897 0585 77000000 		.4byte	0x77
 2898 0589 02       		.uleb128 0x2
 2899 058a 91       		.byte	0x91
 2900 058b 74       		.sleb128 -12
 2901 058c 00       		.byte	0
 2902 058d 19       		.uleb128 0x19
 2903 058e 04       		.byte	0x4
 2904 058f 6B000000 		.4byte	0x6b
 2905 0593 1C       		.uleb128 0x1c
 2906 0594 6A020000 		.4byte	.LASF69
 2907 0598 01       		.byte	0x1
 2908 0599 E408     		.2byte	0x8e4
 2909 059b 00000000 		.4byte	.LFB15
 2910 059f 5C000000 		.4byte	.LFE15-.LFB15
 2911 05a3 01       		.uleb128 0x1
 2912 05a4 9C       		.byte	0x9c
 2913 05a5 B9050000 		.4byte	0x5b9
 2914 05a9 13       		.uleb128 0x13
 2915 05aa AD040000 		.4byte	.LASF60
 2916 05ae 01       		.byte	0x1
 2917 05af E408     		.2byte	0x8e4
 2918 05b1 6B000000 		.4byte	0x6b
 2919 05b5 02       		.uleb128 0x2
 2920 05b6 91       		.byte	0x91
 2921 05b7 77       		.sleb128 -9
 2922 05b8 00       		.byte	0
 2923 05b9 1C       		.uleb128 0x1c
 2924 05ba 0F060000 		.4byte	.LASF70
 2925 05be 01       		.byte	0x1
 2926 05bf FC08     		.2byte	0x8fc
 2927 05c1 00000000 		.4byte	.LFB16
 2928 05c5 34000000 		.4byte	.LFE16-.LFB16
 2929 05c9 01       		.uleb128 0x1
 2930 05ca 9C       		.byte	0x9c
 2931 05cb DF050000 		.4byte	0x5df
 2932 05cf 13       		.uleb128 0x13
 2933 05d0 AD040000 		.4byte	.LASF60
 2934 05d4 01       		.byte	0x1
 2935 05d5 FC08     		.2byte	0x8fc
 2936 05d7 6B000000 		.4byte	0x6b
 2937 05db 02       		.uleb128 0x2
 2938 05dc 91       		.byte	0x91
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 97


 2939 05dd 77       		.sleb128 -9
 2940 05de 00       		.byte	0
 2941 05df 1C       		.uleb128 0x1c
 2942 05e0 D6050000 		.4byte	.LASF71
 2943 05e4 01       		.byte	0x1
 2944 05e5 1A09     		.2byte	0x91a
 2945 05e7 00000000 		.4byte	.LFB17
 2946 05eb 20000000 		.4byte	.LFE17-.LFB17
 2947 05ef 01       		.uleb128 0x1
 2948 05f0 9C       		.byte	0x9c
 2949 05f1 05060000 		.4byte	0x605
 2950 05f5 13       		.uleb128 0x13
 2951 05f6 F7050000 		.4byte	.LASF72
 2952 05fa 01       		.byte	0x1
 2953 05fb 1A09     		.2byte	0x91a
 2954 05fd 6B000000 		.4byte	0x6b
 2955 0601 02       		.uleb128 0x2
 2956 0602 91       		.byte	0x91
 2957 0603 77       		.sleb128 -9
 2958 0604 00       		.byte	0
 2959 0605 16       		.uleb128 0x16
 2960 0606 74030000 		.4byte	.LASF73
 2961 060a 01       		.byte	0x1
 2962 060b 3309     		.2byte	0x933
 2963 060d 6B000000 		.4byte	0x6b
 2964 0611 00000000 		.4byte	.LFB18
 2965 0615 40000000 		.4byte	.LFE18-.LFB18
 2966 0619 01       		.uleb128 0x1
 2967 061a 9C       		.byte	0x9c
 2968 061b 3D060000 		.4byte	0x63d
 2969 061f 13       		.uleb128 0x13
 2970 0620 AD040000 		.4byte	.LASF60
 2971 0624 01       		.byte	0x1
 2972 0625 3309     		.2byte	0x933
 2973 0627 6B000000 		.4byte	0x6b
 2974 062b 02       		.uleb128 0x2
 2975 062c 91       		.byte	0x91
 2976 062d 6F       		.sleb128 -17
 2977 062e 18       		.uleb128 0x18
 2978 062f 637200   		.ascii	"cr\000"
 2979 0632 01       		.byte	0x1
 2980 0633 3509     		.2byte	0x935
 2981 0635 6B000000 		.4byte	0x6b
 2982 0639 02       		.uleb128 0x2
 2983 063a 91       		.byte	0x91
 2984 063b 77       		.sleb128 -9
 2985 063c 00       		.byte	0
 2986 063d 1C       		.uleb128 0x1c
 2987 063e F4010000 		.4byte	.LASF74
 2988 0642 01       		.byte	0x1
 2989 0643 5C09     		.2byte	0x95c
 2990 0645 00000000 		.4byte	.LFB19
 2991 0649 40000000 		.4byte	.LFE19-.LFB19
 2992 064d 01       		.uleb128 0x1
 2993 064e 9C       		.byte	0x9c
 2994 064f 63060000 		.4byte	0x663
 2995 0653 13       		.uleb128 0x13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 98


 2996 0654 C4000000 		.4byte	.LASF75
 2997 0658 01       		.byte	0x1
 2998 0659 5C09     		.2byte	0x95c
 2999 065b 6B000000 		.4byte	0x6b
 3000 065f 02       		.uleb128 0x2
 3001 0660 91       		.byte	0x91
 3002 0661 77       		.sleb128 -9
 3003 0662 00       		.byte	0
 3004 0663 16       		.uleb128 0x16
 3005 0664 DC000000 		.4byte	.LASF76
 3006 0668 01       		.byte	0x1
 3007 0669 9509     		.2byte	0x995
 3008 066b 6B000000 		.4byte	0x6b
 3009 066f 00000000 		.4byte	.LFB20
 3010 0673 2C000000 		.4byte	.LFE20-.LFB20
 3011 0677 01       		.uleb128 0x1
 3012 0678 9C       		.byte	0x9c
 3013 0679 8D060000 		.4byte	0x68d
 3014 067d 15       		.uleb128 0x15
 3015 067e 19000000 		.4byte	.LASF77
 3016 0682 01       		.byte	0x1
 3017 0683 9709     		.2byte	0x997
 3018 0685 6B000000 		.4byte	0x6b
 3019 0689 02       		.uleb128 0x2
 3020 068a 91       		.byte	0x91
 3021 068b 77       		.sleb128 -9
 3022 068c 00       		.byte	0
 3023 068d 17       		.uleb128 0x17
 3024 068e 15050000 		.4byte	.LASF79
 3025 0692 01       		.byte	0x1
 3026 0693 AD09     		.2byte	0x9ad
 3027 0695 6B000000 		.4byte	0x6b
 3028 0699 00000000 		.4byte	.LFB21
 3029 069d 1C000000 		.4byte	.LFE21-.LFB21
 3030 06a1 01       		.uleb128 0x1
 3031 06a2 9C       		.byte	0x9c
 3032 06a3 14       		.uleb128 0x14
 3033 06a4 0B010000 		.4byte	.LASF81
 3034 06a8 01       		.byte	0x1
 3035 06a9 BB09     		.2byte	0x9bb
 3036 06ab 00000000 		.4byte	.LFB22
 3037 06af 18000000 		.4byte	.LFE22-.LFB22
 3038 06b3 01       		.uleb128 0x1
 3039 06b4 9C       		.byte	0x9c
 3040 06b5 14       		.uleb128 0x14
 3041 06b6 7E020000 		.4byte	.LASF82
 3042 06ba 01       		.byte	0x1
 3043 06bb D109     		.2byte	0x9d1
 3044 06bd 00000000 		.4byte	.LFB23
 3045 06c1 18000000 		.4byte	.LFE23-.LFB23
 3046 06c5 01       		.uleb128 0x1
 3047 06c6 9C       		.byte	0x9c
 3048 06c7 1D       		.uleb128 0x1d
 3049 06c8 B6040000 		.4byte	.LASF83
 3050 06cc 01       		.byte	0x1
 3051 06cd 28       		.byte	0x28
 3052 06ce 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 99


 3053 06d2 05       		.uleb128 0x5
 3054 06d3 03       		.byte	0x3
 3055 06d4 00000000 		.4byte	USBUART_initVar
 3056 06d8 1E       		.uleb128 0x1e
 3057 06d9 45030000 		.4byte	.LASF84
 3058 06dd 03       		.byte	0x3
 3059 06de D202     		.2byte	0x2d2
 3060 06e0 B0000000 		.4byte	0xb0
 3061 06e4 1E       		.uleb128 0x1e
 3062 06e5 27020000 		.4byte	.LASF85
 3063 06e9 03       		.byte	0x3
 3064 06ea D302     		.2byte	0x2d3
 3065 06ec B0000000 		.4byte	0xb0
 3066 06f0 1E       		.uleb128 0x1e
 3067 06f1 44000000 		.4byte	.LASF86
 3068 06f5 03       		.byte	0x3
 3069 06f6 D402     		.2byte	0x2d4
 3070 06f8 B0000000 		.4byte	0xb0
 3071 06fc 1E       		.uleb128 0x1e
 3072 06fd A2020000 		.4byte	.LASF87
 3073 0701 03       		.byte	0x3
 3074 0702 D502     		.2byte	0x2d5
 3075 0704 B0000000 		.4byte	0xb0
 3076 0708 1E       		.uleb128 0x1e
 3077 0709 6A000000 		.4byte	.LASF88
 3078 070d 03       		.byte	0x3
 3079 070e D602     		.2byte	0x2d6
 3080 0710 B0000000 		.4byte	0xb0
 3081 0714 1F       		.uleb128 0x1f
 3082 0715 B6050000 		.4byte	.LASF89
 3083 0719 04       		.byte	0x4
 3084 071a 72       		.byte	0x72
 3085 071b B0000000 		.4byte	0xb0
 3086 071f 0A       		.uleb128 0xa
 3087 0720 B0000000 		.4byte	0xb0
 3088 0724 2F070000 		.4byte	0x72f
 3089 0728 0B       		.uleb128 0xb
 3090 0729 CD000000 		.4byte	0xcd
 3091 072d 01       		.byte	0x1
 3092 072e 00       		.byte	0
 3093 072f 1F       		.uleb128 0x1f
 3094 0730 2E010000 		.4byte	.LASF90
 3095 0734 04       		.byte	0x4
 3096 0735 73       		.byte	0x73
 3097 0736 3A070000 		.4byte	0x73a
 3098 073a 05       		.uleb128 0x5
 3099 073b 1F070000 		.4byte	0x71f
 3100 073f 1F       		.uleb128 0x1f
 3101 0740 8A030000 		.4byte	.LASF91
 3102 0744 04       		.byte	0x4
 3103 0745 75       		.byte	0x75
 3104 0746 B0000000 		.4byte	0xb0
 3105 074a 0A       		.uleb128 0xa
 3106 074b 5A070000 		.4byte	0x75a
 3107 074f 5A070000 		.4byte	0x75a
 3108 0753 0B       		.uleb128 0xb
 3109 0754 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 100


 3110 0758 08       		.byte	0x8
 3111 0759 00       		.byte	0
 3112 075a 05       		.uleb128 0x5
 3113 075b 49010000 		.4byte	0x149
 3114 075f 1F       		.uleb128 0x1f
 3115 0760 24060000 		.4byte	.LASF92
 3116 0764 04       		.byte	0x4
 3117 0765 79       		.byte	0x79
 3118 0766 6A070000 		.4byte	0x76a
 3119 076a 05       		.uleb128 0x5
 3120 076b 4A070000 		.4byte	0x74a
 3121 076f 0A       		.uleb128 0xa
 3122 0770 6B000000 		.4byte	0x6b
 3123 0774 7F070000 		.4byte	0x77f
 3124 0778 0B       		.uleb128 0xb
 3125 0779 CD000000 		.4byte	0xcd
 3126 077d 08       		.byte	0x8
 3127 077e 00       		.byte	0
 3128 077f 1D       		.uleb128 0x1d
 3129 0780 5A000000 		.4byte	.LASF93
 3130 0784 01       		.byte	0x1
 3131 0785 3D       		.byte	0x3d
 3132 0786 6F070000 		.4byte	0x76f
 3133 078a 05       		.uleb128 0x5
 3134 078b 03       		.byte	0x3
 3135 078c 00000000 		.4byte	USBUART_DmaChan
 3136 0790 1D       		.uleb128 0x1d
 3137 0791 3C060000 		.4byte	.LASF94
 3138 0795 01       		.byte	0x1
 3139 0796 40       		.byte	0x40
 3140 0797 6F070000 		.4byte	0x76f
 3141 079b 05       		.uleb128 0x5
 3142 079c 03       		.byte	0x3
 3143 079d 00000000 		.4byte	USBUART_DmaTd
 3144 07a1 1F       		.uleb128 0x1f
 3145 07a2 42040000 		.4byte	.LASF95
 3146 07a6 04       		.byte	0x4
 3147 07a7 9B       		.byte	0x9b
 3148 07a8 B0000000 		.4byte	0xb0
 3149 07ac 00       		.byte	0
 3150              		.section	.debug_abbrev,"",%progbits
 3151              	.Ldebug_abbrev0:
 3152 0000 01       		.uleb128 0x1
 3153 0001 11       		.uleb128 0x11
 3154 0002 01       		.byte	0x1
 3155 0003 25       		.uleb128 0x25
 3156 0004 0E       		.uleb128 0xe
 3157 0005 13       		.uleb128 0x13
 3158 0006 0B       		.uleb128 0xb
 3159 0007 03       		.uleb128 0x3
 3160 0008 0E       		.uleb128 0xe
 3161 0009 1B       		.uleb128 0x1b
 3162 000a 0E       		.uleb128 0xe
 3163 000b 55       		.uleb128 0x55
 3164 000c 17       		.uleb128 0x17
 3165 000d 11       		.uleb128 0x11
 3166 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 101


 3167 000f 10       		.uleb128 0x10
 3168 0010 17       		.uleb128 0x17
 3169 0011 00       		.byte	0
 3170 0012 00       		.byte	0
 3171 0013 02       		.uleb128 0x2
 3172 0014 24       		.uleb128 0x24
 3173 0015 00       		.byte	0
 3174 0016 0B       		.uleb128 0xb
 3175 0017 0B       		.uleb128 0xb
 3176 0018 3E       		.uleb128 0x3e
 3177 0019 0B       		.uleb128 0xb
 3178 001a 03       		.uleb128 0x3
 3179 001b 0E       		.uleb128 0xe
 3180 001c 00       		.byte	0
 3181 001d 00       		.byte	0
 3182 001e 03       		.uleb128 0x3
 3183 001f 24       		.uleb128 0x24
 3184 0020 00       		.byte	0
 3185 0021 0B       		.uleb128 0xb
 3186 0022 0B       		.uleb128 0xb
 3187 0023 3E       		.uleb128 0x3e
 3188 0024 0B       		.uleb128 0xb
 3189 0025 03       		.uleb128 0x3
 3190 0026 08       		.uleb128 0x8
 3191 0027 00       		.byte	0
 3192 0028 00       		.byte	0
 3193 0029 04       		.uleb128 0x4
 3194 002a 16       		.uleb128 0x16
 3195 002b 00       		.byte	0
 3196 002c 03       		.uleb128 0x3
 3197 002d 0E       		.uleb128 0xe
 3198 002e 3A       		.uleb128 0x3a
 3199 002f 0B       		.uleb128 0xb
 3200 0030 3B       		.uleb128 0x3b
 3201 0031 05       		.uleb128 0x5
 3202 0032 49       		.uleb128 0x49
 3203 0033 13       		.uleb128 0x13
 3204 0034 00       		.byte	0
 3205 0035 00       		.byte	0
 3206 0036 05       		.uleb128 0x5
 3207 0037 35       		.uleb128 0x35
 3208 0038 00       		.byte	0
 3209 0039 49       		.uleb128 0x49
 3210 003a 13       		.uleb128 0x13
 3211 003b 00       		.byte	0
 3212 003c 00       		.byte	0
 3213 003d 06       		.uleb128 0x6
 3214 003e 13       		.uleb128 0x13
 3215 003f 01       		.byte	0x1
 3216 0040 0B       		.uleb128 0xb
 3217 0041 0B       		.uleb128 0xb
 3218 0042 3A       		.uleb128 0x3a
 3219 0043 0B       		.uleb128 0xb
 3220 0044 3B       		.uleb128 0x3b
 3221 0045 0B       		.uleb128 0xb
 3222 0046 01       		.uleb128 0x1
 3223 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 102


 3224 0048 00       		.byte	0
 3225 0049 00       		.byte	0
 3226 004a 07       		.uleb128 0x7
 3227 004b 0D       		.uleb128 0xd
 3228 004c 00       		.byte	0
 3229 004d 03       		.uleb128 0x3
 3230 004e 0E       		.uleb128 0xe
 3231 004f 3A       		.uleb128 0x3a
 3232 0050 0B       		.uleb128 0xb
 3233 0051 3B       		.uleb128 0x3b
 3234 0052 0B       		.uleb128 0xb
 3235 0053 49       		.uleb128 0x49
 3236 0054 13       		.uleb128 0x13
 3237 0055 38       		.uleb128 0x38
 3238 0056 0B       		.uleb128 0xb
 3239 0057 00       		.byte	0
 3240 0058 00       		.byte	0
 3241 0059 08       		.uleb128 0x8
 3242 005a 16       		.uleb128 0x16
 3243 005b 00       		.byte	0
 3244 005c 03       		.uleb128 0x3
 3245 005d 0E       		.uleb128 0xe
 3246 005e 3A       		.uleb128 0x3a
 3247 005f 0B       		.uleb128 0xb
 3248 0060 3B       		.uleb128 0x3b
 3249 0061 0B       		.uleb128 0xb
 3250 0062 49       		.uleb128 0x49
 3251 0063 13       		.uleb128 0x13
 3252 0064 00       		.byte	0
 3253 0065 00       		.byte	0
 3254 0066 09       		.uleb128 0x9
 3255 0067 0D       		.uleb128 0xd
 3256 0068 00       		.byte	0
 3257 0069 03       		.uleb128 0x3
 3258 006a 08       		.uleb128 0x8
 3259 006b 3A       		.uleb128 0x3a
 3260 006c 0B       		.uleb128 0xb
 3261 006d 3B       		.uleb128 0x3b
 3262 006e 0B       		.uleb128 0xb
 3263 006f 49       		.uleb128 0x49
 3264 0070 13       		.uleb128 0x13
 3265 0071 38       		.uleb128 0x38
 3266 0072 0B       		.uleb128 0xb
 3267 0073 00       		.byte	0
 3268 0074 00       		.byte	0
 3269 0075 0A       		.uleb128 0xa
 3270 0076 01       		.uleb128 0x1
 3271 0077 01       		.byte	0x1
 3272 0078 49       		.uleb128 0x49
 3273 0079 13       		.uleb128 0x13
 3274 007a 01       		.uleb128 0x1
 3275 007b 13       		.uleb128 0x13
 3276 007c 00       		.byte	0
 3277 007d 00       		.byte	0
 3278 007e 0B       		.uleb128 0xb
 3279 007f 21       		.uleb128 0x21
 3280 0080 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 103


 3281 0081 49       		.uleb128 0x49
 3282 0082 13       		.uleb128 0x13
 3283 0083 2F       		.uleb128 0x2f
 3284 0084 0B       		.uleb128 0xb
 3285 0085 00       		.byte	0
 3286 0086 00       		.byte	0
 3287 0087 0C       		.uleb128 0xc
 3288 0088 13       		.uleb128 0x13
 3289 0089 01       		.byte	0x1
 3290 008a 0B       		.uleb128 0xb
 3291 008b 0B       		.uleb128 0xb
 3292 008c 3A       		.uleb128 0x3a
 3293 008d 0B       		.uleb128 0xb
 3294 008e 3B       		.uleb128 0x3b
 3295 008f 05       		.uleb128 0x5
 3296 0090 01       		.uleb128 0x1
 3297 0091 13       		.uleb128 0x13
 3298 0092 00       		.byte	0
 3299 0093 00       		.byte	0
 3300 0094 0D       		.uleb128 0xd
 3301 0095 0D       		.uleb128 0xd
 3302 0096 00       		.byte	0
 3303 0097 03       		.uleb128 0x3
 3304 0098 0E       		.uleb128 0xe
 3305 0099 3A       		.uleb128 0x3a
 3306 009a 0B       		.uleb128 0xb
 3307 009b 3B       		.uleb128 0x3b
 3308 009c 05       		.uleb128 0x5
 3309 009d 49       		.uleb128 0x49
 3310 009e 13       		.uleb128 0x13
 3311 009f 38       		.uleb128 0x38
 3312 00a0 0B       		.uleb128 0xb
 3313 00a1 00       		.byte	0
 3314 00a2 00       		.byte	0
 3315 00a3 0E       		.uleb128 0xe
 3316 00a4 2E       		.uleb128 0x2e
 3317 00a5 01       		.byte	0x1
 3318 00a6 3F       		.uleb128 0x3f
 3319 00a7 19       		.uleb128 0x19
 3320 00a8 03       		.uleb128 0x3
 3321 00a9 0E       		.uleb128 0xe
 3322 00aa 3A       		.uleb128 0x3a
 3323 00ab 0B       		.uleb128 0xb
 3324 00ac 3B       		.uleb128 0x3b
 3325 00ad 0B       		.uleb128 0xb
 3326 00ae 27       		.uleb128 0x27
 3327 00af 19       		.uleb128 0x19
 3328 00b0 11       		.uleb128 0x11
 3329 00b1 01       		.uleb128 0x1
 3330 00b2 12       		.uleb128 0x12
 3331 00b3 06       		.uleb128 0x6
 3332 00b4 40       		.uleb128 0x40
 3333 00b5 18       		.uleb128 0x18
 3334 00b6 9642     		.uleb128 0x2116
 3335 00b8 19       		.uleb128 0x19
 3336 00b9 01       		.uleb128 0x1
 3337 00ba 13       		.uleb128 0x13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 104


 3338 00bb 00       		.byte	0
 3339 00bc 00       		.byte	0
 3340 00bd 0F       		.uleb128 0xf
 3341 00be 05       		.uleb128 0x5
 3342 00bf 00       		.byte	0
 3343 00c0 03       		.uleb128 0x3
 3344 00c1 0E       		.uleb128 0xe
 3345 00c2 3A       		.uleb128 0x3a
 3346 00c3 0B       		.uleb128 0xb
 3347 00c4 3B       		.uleb128 0x3b
 3348 00c5 0B       		.uleb128 0xb
 3349 00c6 49       		.uleb128 0x49
 3350 00c7 13       		.uleb128 0x13
 3351 00c8 02       		.uleb128 0x2
 3352 00c9 18       		.uleb128 0x18
 3353 00ca 00       		.byte	0
 3354 00cb 00       		.byte	0
 3355 00cc 10       		.uleb128 0x10
 3356 00cd 34       		.uleb128 0x34
 3357 00ce 00       		.byte	0
 3358 00cf 03       		.uleb128 0x3
 3359 00d0 0E       		.uleb128 0xe
 3360 00d1 3A       		.uleb128 0x3a
 3361 00d2 0B       		.uleb128 0xb
 3362 00d3 3B       		.uleb128 0x3b
 3363 00d4 0B       		.uleb128 0xb
 3364 00d5 49       		.uleb128 0x49
 3365 00d6 13       		.uleb128 0x13
 3366 00d7 02       		.uleb128 0x2
 3367 00d8 18       		.uleb128 0x18
 3368 00d9 00       		.byte	0
 3369 00da 00       		.byte	0
 3370 00db 11       		.uleb128 0x11
 3371 00dc 34       		.uleb128 0x34
 3372 00dd 00       		.byte	0
 3373 00de 03       		.uleb128 0x3
 3374 00df 08       		.uleb128 0x8
 3375 00e0 3A       		.uleb128 0x3a
 3376 00e1 0B       		.uleb128 0xb
 3377 00e2 3B       		.uleb128 0x3b
 3378 00e3 0B       		.uleb128 0xb
 3379 00e4 49       		.uleb128 0x49
 3380 00e5 13       		.uleb128 0x13
 3381 00e6 02       		.uleb128 0x2
 3382 00e7 18       		.uleb128 0x18
 3383 00e8 00       		.byte	0
 3384 00e9 00       		.byte	0
 3385 00ea 12       		.uleb128 0x12
 3386 00eb 2E       		.uleb128 0x2e
 3387 00ec 01       		.byte	0x1
 3388 00ed 3F       		.uleb128 0x3f
 3389 00ee 19       		.uleb128 0x19
 3390 00ef 03       		.uleb128 0x3
 3391 00f0 0E       		.uleb128 0xe
 3392 00f1 3A       		.uleb128 0x3a
 3393 00f2 0B       		.uleb128 0xb
 3394 00f3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 105


 3395 00f4 05       		.uleb128 0x5
 3396 00f5 27       		.uleb128 0x27
 3397 00f6 19       		.uleb128 0x19
 3398 00f7 11       		.uleb128 0x11
 3399 00f8 01       		.uleb128 0x1
 3400 00f9 12       		.uleb128 0x12
 3401 00fa 06       		.uleb128 0x6
 3402 00fb 40       		.uleb128 0x40
 3403 00fc 18       		.uleb128 0x18
 3404 00fd 9642     		.uleb128 0x2116
 3405 00ff 19       		.uleb128 0x19
 3406 0100 01       		.uleb128 0x1
 3407 0101 13       		.uleb128 0x13
 3408 0102 00       		.byte	0
 3409 0103 00       		.byte	0
 3410 0104 13       		.uleb128 0x13
 3411 0105 05       		.uleb128 0x5
 3412 0106 00       		.byte	0
 3413 0107 03       		.uleb128 0x3
 3414 0108 0E       		.uleb128 0xe
 3415 0109 3A       		.uleb128 0x3a
 3416 010a 0B       		.uleb128 0xb
 3417 010b 3B       		.uleb128 0x3b
 3418 010c 05       		.uleb128 0x5
 3419 010d 49       		.uleb128 0x49
 3420 010e 13       		.uleb128 0x13
 3421 010f 02       		.uleb128 0x2
 3422 0110 18       		.uleb128 0x18
 3423 0111 00       		.byte	0
 3424 0112 00       		.byte	0
 3425 0113 14       		.uleb128 0x14
 3426 0114 2E       		.uleb128 0x2e
 3427 0115 00       		.byte	0
 3428 0116 3F       		.uleb128 0x3f
 3429 0117 19       		.uleb128 0x19
 3430 0118 03       		.uleb128 0x3
 3431 0119 0E       		.uleb128 0xe
 3432 011a 3A       		.uleb128 0x3a
 3433 011b 0B       		.uleb128 0xb
 3434 011c 3B       		.uleb128 0x3b
 3435 011d 05       		.uleb128 0x5
 3436 011e 27       		.uleb128 0x27
 3437 011f 19       		.uleb128 0x19
 3438 0120 11       		.uleb128 0x11
 3439 0121 01       		.uleb128 0x1
 3440 0122 12       		.uleb128 0x12
 3441 0123 06       		.uleb128 0x6
 3442 0124 40       		.uleb128 0x40
 3443 0125 18       		.uleb128 0x18
 3444 0126 9742     		.uleb128 0x2117
 3445 0128 19       		.uleb128 0x19
 3446 0129 00       		.byte	0
 3447 012a 00       		.byte	0
 3448 012b 15       		.uleb128 0x15
 3449 012c 34       		.uleb128 0x34
 3450 012d 00       		.byte	0
 3451 012e 03       		.uleb128 0x3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 106


 3452 012f 0E       		.uleb128 0xe
 3453 0130 3A       		.uleb128 0x3a
 3454 0131 0B       		.uleb128 0xb
 3455 0132 3B       		.uleb128 0x3b
 3456 0133 05       		.uleb128 0x5
 3457 0134 49       		.uleb128 0x49
 3458 0135 13       		.uleb128 0x13
 3459 0136 02       		.uleb128 0x2
 3460 0137 18       		.uleb128 0x18
 3461 0138 00       		.byte	0
 3462 0139 00       		.byte	0
 3463 013a 16       		.uleb128 0x16
 3464 013b 2E       		.uleb128 0x2e
 3465 013c 01       		.byte	0x1
 3466 013d 3F       		.uleb128 0x3f
 3467 013e 19       		.uleb128 0x19
 3468 013f 03       		.uleb128 0x3
 3469 0140 0E       		.uleb128 0xe
 3470 0141 3A       		.uleb128 0x3a
 3471 0142 0B       		.uleb128 0xb
 3472 0143 3B       		.uleb128 0x3b
 3473 0144 05       		.uleb128 0x5
 3474 0145 27       		.uleb128 0x27
 3475 0146 19       		.uleb128 0x19
 3476 0147 49       		.uleb128 0x49
 3477 0148 13       		.uleb128 0x13
 3478 0149 11       		.uleb128 0x11
 3479 014a 01       		.uleb128 0x1
 3480 014b 12       		.uleb128 0x12
 3481 014c 06       		.uleb128 0x6
 3482 014d 40       		.uleb128 0x40
 3483 014e 18       		.uleb128 0x18
 3484 014f 9742     		.uleb128 0x2117
 3485 0151 19       		.uleb128 0x19
 3486 0152 01       		.uleb128 0x1
 3487 0153 13       		.uleb128 0x13
 3488 0154 00       		.byte	0
 3489 0155 00       		.byte	0
 3490 0156 17       		.uleb128 0x17
 3491 0157 2E       		.uleb128 0x2e
 3492 0158 00       		.byte	0
 3493 0159 3F       		.uleb128 0x3f
 3494 015a 19       		.uleb128 0x19
 3495 015b 03       		.uleb128 0x3
 3496 015c 0E       		.uleb128 0xe
 3497 015d 3A       		.uleb128 0x3a
 3498 015e 0B       		.uleb128 0xb
 3499 015f 3B       		.uleb128 0x3b
 3500 0160 05       		.uleb128 0x5
 3501 0161 27       		.uleb128 0x27
 3502 0162 19       		.uleb128 0x19
 3503 0163 49       		.uleb128 0x49
 3504 0164 13       		.uleb128 0x13
 3505 0165 11       		.uleb128 0x11
 3506 0166 01       		.uleb128 0x1
 3507 0167 12       		.uleb128 0x12
 3508 0168 06       		.uleb128 0x6
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 107


 3509 0169 40       		.uleb128 0x40
 3510 016a 18       		.uleb128 0x18
 3511 016b 9742     		.uleb128 0x2117
 3512 016d 19       		.uleb128 0x19
 3513 016e 00       		.byte	0
 3514 016f 00       		.byte	0
 3515 0170 18       		.uleb128 0x18
 3516 0171 34       		.uleb128 0x34
 3517 0172 00       		.byte	0
 3518 0173 03       		.uleb128 0x3
 3519 0174 08       		.uleb128 0x8
 3520 0175 3A       		.uleb128 0x3a
 3521 0176 0B       		.uleb128 0xb
 3522 0177 3B       		.uleb128 0x3b
 3523 0178 05       		.uleb128 0x5
 3524 0179 49       		.uleb128 0x49
 3525 017a 13       		.uleb128 0x13
 3526 017b 02       		.uleb128 0x2
 3527 017c 18       		.uleb128 0x18
 3528 017d 00       		.byte	0
 3529 017e 00       		.byte	0
 3530 017f 19       		.uleb128 0x19
 3531 0180 0F       		.uleb128 0xf
 3532 0181 00       		.byte	0
 3533 0182 0B       		.uleb128 0xb
 3534 0183 0B       		.uleb128 0xb
 3535 0184 49       		.uleb128 0x49
 3536 0185 13       		.uleb128 0x13
 3537 0186 00       		.byte	0
 3538 0187 00       		.byte	0
 3539 0188 1A       		.uleb128 0x1a
 3540 0189 26       		.uleb128 0x26
 3541 018a 00       		.byte	0
 3542 018b 49       		.uleb128 0x49
 3543 018c 13       		.uleb128 0x13
 3544 018d 00       		.byte	0
 3545 018e 00       		.byte	0
 3546 018f 1B       		.uleb128 0x1b
 3547 0190 2E       		.uleb128 0x2e
 3548 0191 01       		.byte	0x1
 3549 0192 3F       		.uleb128 0x3f
 3550 0193 19       		.uleb128 0x19
 3551 0194 03       		.uleb128 0x3
 3552 0195 0E       		.uleb128 0xe
 3553 0196 3A       		.uleb128 0x3a
 3554 0197 0B       		.uleb128 0xb
 3555 0198 3B       		.uleb128 0x3b
 3556 0199 05       		.uleb128 0x5
 3557 019a 27       		.uleb128 0x27
 3558 019b 19       		.uleb128 0x19
 3559 019c 49       		.uleb128 0x49
 3560 019d 13       		.uleb128 0x13
 3561 019e 11       		.uleb128 0x11
 3562 019f 01       		.uleb128 0x1
 3563 01a0 12       		.uleb128 0x12
 3564 01a1 06       		.uleb128 0x6
 3565 01a2 40       		.uleb128 0x40
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 108


 3566 01a3 18       		.uleb128 0x18
 3567 01a4 9642     		.uleb128 0x2116
 3568 01a6 19       		.uleb128 0x19
 3569 01a7 01       		.uleb128 0x1
 3570 01a8 13       		.uleb128 0x13
 3571 01a9 00       		.byte	0
 3572 01aa 00       		.byte	0
 3573 01ab 1C       		.uleb128 0x1c
 3574 01ac 2E       		.uleb128 0x2e
 3575 01ad 01       		.byte	0x1
 3576 01ae 3F       		.uleb128 0x3f
 3577 01af 19       		.uleb128 0x19
 3578 01b0 03       		.uleb128 0x3
 3579 01b1 0E       		.uleb128 0xe
 3580 01b2 3A       		.uleb128 0x3a
 3581 01b3 0B       		.uleb128 0xb
 3582 01b4 3B       		.uleb128 0x3b
 3583 01b5 05       		.uleb128 0x5
 3584 01b6 27       		.uleb128 0x27
 3585 01b7 19       		.uleb128 0x19
 3586 01b8 11       		.uleb128 0x11
 3587 01b9 01       		.uleb128 0x1
 3588 01ba 12       		.uleb128 0x12
 3589 01bb 06       		.uleb128 0x6
 3590 01bc 40       		.uleb128 0x40
 3591 01bd 18       		.uleb128 0x18
 3592 01be 9742     		.uleb128 0x2117
 3593 01c0 19       		.uleb128 0x19
 3594 01c1 01       		.uleb128 0x1
 3595 01c2 13       		.uleb128 0x13
 3596 01c3 00       		.byte	0
 3597 01c4 00       		.byte	0
 3598 01c5 1D       		.uleb128 0x1d
 3599 01c6 34       		.uleb128 0x34
 3600 01c7 00       		.byte	0
 3601 01c8 03       		.uleb128 0x3
 3602 01c9 0E       		.uleb128 0xe
 3603 01ca 3A       		.uleb128 0x3a
 3604 01cb 0B       		.uleb128 0xb
 3605 01cc 3B       		.uleb128 0x3b
 3606 01cd 0B       		.uleb128 0xb
 3607 01ce 49       		.uleb128 0x49
 3608 01cf 13       		.uleb128 0x13
 3609 01d0 3F       		.uleb128 0x3f
 3610 01d1 19       		.uleb128 0x19
 3611 01d2 02       		.uleb128 0x2
 3612 01d3 18       		.uleb128 0x18
 3613 01d4 00       		.byte	0
 3614 01d5 00       		.byte	0
 3615 01d6 1E       		.uleb128 0x1e
 3616 01d7 34       		.uleb128 0x34
 3617 01d8 00       		.byte	0
 3618 01d9 03       		.uleb128 0x3
 3619 01da 0E       		.uleb128 0xe
 3620 01db 3A       		.uleb128 0x3a
 3621 01dc 0B       		.uleb128 0xb
 3622 01dd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 109


 3623 01de 05       		.uleb128 0x5
 3624 01df 49       		.uleb128 0x49
 3625 01e0 13       		.uleb128 0x13
 3626 01e1 3F       		.uleb128 0x3f
 3627 01e2 19       		.uleb128 0x19
 3628 01e3 3C       		.uleb128 0x3c
 3629 01e4 19       		.uleb128 0x19
 3630 01e5 00       		.byte	0
 3631 01e6 00       		.byte	0
 3632 01e7 1F       		.uleb128 0x1f
 3633 01e8 34       		.uleb128 0x34
 3634 01e9 00       		.byte	0
 3635 01ea 03       		.uleb128 0x3
 3636 01eb 0E       		.uleb128 0xe
 3637 01ec 3A       		.uleb128 0x3a
 3638 01ed 0B       		.uleb128 0xb
 3639 01ee 3B       		.uleb128 0x3b
 3640 01ef 0B       		.uleb128 0xb
 3641 01f0 49       		.uleb128 0x49
 3642 01f1 13       		.uleb128 0x13
 3643 01f2 3F       		.uleb128 0x3f
 3644 01f3 19       		.uleb128 0x19
 3645 01f4 3C       		.uleb128 0x3c
 3646 01f5 19       		.uleb128 0x19
 3647 01f6 00       		.byte	0
 3648 01f7 00       		.byte	0
 3649 01f8 00       		.byte	0
 3650              		.section	.debug_aranges,"",%progbits
 3651 0000 D4000000 		.4byte	0xd4
 3652 0004 0200     		.2byte	0x2
 3653 0006 00000000 		.4byte	.Ldebug_info0
 3654 000a 04       		.byte	0x4
 3655 000b 00       		.byte	0
 3656 000c 0000     		.2byte	0
 3657 000e 0000     		.2byte	0
 3658 0010 00000000 		.4byte	.LFB0
 3659 0014 3C000000 		.4byte	.LFE0-.LFB0
 3660 0018 00000000 		.4byte	.LFB1
 3661 001c D4010000 		.4byte	.LFE1-.LFB1
 3662 0020 00000000 		.4byte	.LFB2
 3663 0024 1C010000 		.4byte	.LFE2-.LFB2
 3664 0028 00000000 		.4byte	.LFB3
 3665 002c 68000000 		.4byte	.LFE3-.LFB3
 3666 0030 00000000 		.4byte	.LFB4
 3667 0034 14010000 		.4byte	.LFE4-.LFB4
 3668 0038 00000000 		.4byte	.LFB5
 3669 003c 38000000 		.4byte	.LFE5-.LFB5
 3670 0040 00000000 		.4byte	.LFB6
 3671 0044 18000000 		.4byte	.LFE6-.LFB6
 3672 0048 00000000 		.4byte	.LFB7
 3673 004c 30000000 		.4byte	.LFE7-.LFB7
 3674 0050 00000000 		.4byte	.LFB8
 3675 0054 20000000 		.4byte	.LFE8-.LFB8
 3676 0058 00000000 		.4byte	.LFB9
 3677 005c 2C000000 		.4byte	.LFE9-.LFB9
 3678 0060 00000000 		.4byte	.LFB10
 3679 0064 60000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 110


 3680 0068 00000000 		.4byte	.LFB11
 3681 006c C8000000 		.4byte	.LFE11-.LFB11
 3682 0070 00000000 		.4byte	.LFB12
 3683 0074 64000000 		.4byte	.LFE12-.LFB12
 3684 0078 00000000 		.4byte	.LFB13
 3685 007c 98010000 		.4byte	.LFE13-.LFB13
 3686 0080 00000000 		.4byte	.LFB14
 3687 0084 08010000 		.4byte	.LFE14-.LFB14
 3688 0088 00000000 		.4byte	.LFB15
 3689 008c 5C000000 		.4byte	.LFE15-.LFB15
 3690 0090 00000000 		.4byte	.LFB16
 3691 0094 34000000 		.4byte	.LFE16-.LFB16
 3692 0098 00000000 		.4byte	.LFB17
 3693 009c 20000000 		.4byte	.LFE17-.LFB17
 3694 00a0 00000000 		.4byte	.LFB18
 3695 00a4 40000000 		.4byte	.LFE18-.LFB18
 3696 00a8 00000000 		.4byte	.LFB19
 3697 00ac 40000000 		.4byte	.LFE19-.LFB19
 3698 00b0 00000000 		.4byte	.LFB20
 3699 00b4 2C000000 		.4byte	.LFE20-.LFB20
 3700 00b8 00000000 		.4byte	.LFB21
 3701 00bc 1C000000 		.4byte	.LFE21-.LFB21
 3702 00c0 00000000 		.4byte	.LFB22
 3703 00c4 18000000 		.4byte	.LFE22-.LFB22
 3704 00c8 00000000 		.4byte	.LFB23
 3705 00cc 18000000 		.4byte	.LFE23-.LFB23
 3706 00d0 00000000 		.4byte	0
 3707 00d4 00000000 		.4byte	0
 3708              		.section	.debug_ranges,"",%progbits
 3709              	.Ldebug_ranges0:
 3710 0000 00000000 		.4byte	.LFB0
 3711 0004 3C000000 		.4byte	.LFE0
 3712 0008 00000000 		.4byte	.LFB1
 3713 000c D4010000 		.4byte	.LFE1
 3714 0010 00000000 		.4byte	.LFB2
 3715 0014 1C010000 		.4byte	.LFE2
 3716 0018 00000000 		.4byte	.LFB3
 3717 001c 68000000 		.4byte	.LFE3
 3718 0020 00000000 		.4byte	.LFB4
 3719 0024 14010000 		.4byte	.LFE4
 3720 0028 00000000 		.4byte	.LFB5
 3721 002c 38000000 		.4byte	.LFE5
 3722 0030 00000000 		.4byte	.LFB6
 3723 0034 18000000 		.4byte	.LFE6
 3724 0038 00000000 		.4byte	.LFB7
 3725 003c 30000000 		.4byte	.LFE7
 3726 0040 00000000 		.4byte	.LFB8
 3727 0044 20000000 		.4byte	.LFE8
 3728 0048 00000000 		.4byte	.LFB9
 3729 004c 2C000000 		.4byte	.LFE9
 3730 0050 00000000 		.4byte	.LFB10
 3731 0054 60000000 		.4byte	.LFE10
 3732 0058 00000000 		.4byte	.LFB11
 3733 005c C8000000 		.4byte	.LFE11
 3734 0060 00000000 		.4byte	.LFB12
 3735 0064 64000000 		.4byte	.LFE12
 3736 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 111


 3737 006c 98010000 		.4byte	.LFE13
 3738 0070 00000000 		.4byte	.LFB14
 3739 0074 08010000 		.4byte	.LFE14
 3740 0078 00000000 		.4byte	.LFB15
 3741 007c 5C000000 		.4byte	.LFE15
 3742 0080 00000000 		.4byte	.LFB16
 3743 0084 34000000 		.4byte	.LFE16
 3744 0088 00000000 		.4byte	.LFB17
 3745 008c 20000000 		.4byte	.LFE17
 3746 0090 00000000 		.4byte	.LFB18
 3747 0094 40000000 		.4byte	.LFE18
 3748 0098 00000000 		.4byte	.LFB19
 3749 009c 40000000 		.4byte	.LFE19
 3750 00a0 00000000 		.4byte	.LFB20
 3751 00a4 2C000000 		.4byte	.LFE20
 3752 00a8 00000000 		.4byte	.LFB21
 3753 00ac 1C000000 		.4byte	.LFE21
 3754 00b0 00000000 		.4byte	.LFB22
 3755 00b4 18000000 		.4byte	.LFE22
 3756 00b8 00000000 		.4byte	.LFB23
 3757 00bc 18000000 		.4byte	.LFE23
 3758 00c0 00000000 		.4byte	0
 3759 00c4 00000000 		.4byte	0
 3760              		.section	.debug_line,"",%progbits
 3761              	.Ldebug_line0:
 3762 0000 82030000 		.section	.debug_str,"MS",%progbits,1
 3762      02006200 
 3762      00000201 
 3762      FB0E0D00 
 3762      01010101 
 3763              	.LASF22:
 3764 0000 6570546F 		.ascii	"epToggle\000"
 3764      67676C65 
 3764      00
 3765              	.LASF58:
 3766 0009 696E7465 		.ascii	"interfaceNumber\000"
 3766      72666163 
 3766      654E756D 
 3766      62657200 
 3767              	.LASF77:
 3768 0019 72657375 		.ascii	"result\000"
 3768      6C7400
 3769              	.LASF62:
 3770 0020 636E7472 		.ascii	"cntr\000"
 3770      00
 3771              	.LASF56:
 3772 0025 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3772      4152545F 
 3772      4973436F 
 3772      6E666967 
 3772      75726174 
 3773              	.LASF86:
 3774 0044 55534255 		.ascii	"USBUART_configuration\000"
 3774      4152545F 
 3774      636F6E66 
 3774      69677572 
 3774      6174696F 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 112


 3775              	.LASF93:
 3776 005a 55534255 		.ascii	"USBUART_DmaChan\000"
 3776      4152545F 
 3776      446D6143 
 3776      68616E00 
 3777              	.LASF88:
 3778 006a 55534255 		.ascii	"USBUART_deviceStatus\000"
 3778      4152545F 
 3778      64657669 
 3778      63655374 
 3778      61747573 
 3779              	.LASF64:
 3780 007f 70446174 		.ascii	"pData\000"
 3780      6100
 3781              	.LASF34:
 3782 0085 6570496E 		.ascii	"epIntEn\000"
 3782      74456E00 
 3783              	.LASF2:
 3784 008d 73686F72 		.ascii	"short int\000"
 3784      7420696E 
 3784      7400
 3785              	.LASF18:
 3786 0097 73697A65 		.ascii	"sizetype\000"
 3786      74797065 
 3786      00
 3787              	.LASF46:
 3788 00a0 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3788      4152545F 
 3788      6172625F 
 3788      6570735F 
 3788      73747275 
 3789              	.LASF24:
 3790 00b7 65704D6F 		.ascii	"epMode\000"
 3790      646500
 3791              	.LASF45:
 3792 00be 61726245 		.ascii	"arbEp\000"
 3792      7000
 3793              	.LASF75:
 3794 00c4 706F7765 		.ascii	"powerStatus\000"
 3794      72537461 
 3794      74757300 
 3795              	.LASF17:
 3796 00d0 6C6F6E67 		.ascii	"long double\000"
 3796      20646F75 
 3796      626C6500 
 3797              	.LASF76:
 3798 00dc 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3798      4152545F 
 3798      52575545 
 3798      6E61626C 
 3798      656400
 3799              	.LASF48:
 3800 00ef 6D6F6465 		.ascii	"mode\000"
 3800      00
 3801              	.LASF44:
 3802 00f4 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3802      4152545F 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 113


 3802      7369655F 
 3802      6570735F 
 3802      73747275 
 3803              	.LASF81:
 3804 010b 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3804      4152545F 
 3804      456E6162 
 3804      6C65536F 
 3804      66496E74 
 3805              	.LASF49:
 3806 0120 55534255 		.ascii	"USBUART_Start\000"
 3806      4152545F 
 3806      53746172 
 3806      7400
 3807              	.LASF90:
 3808 012e 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3808      4152545F 
 3808      696E7465 
 3808      72666163 
 3808      65536574 
 3809              	.LASF96:
 3810 0147 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3810      43313120 
 3810      352E342E 
 3810      31203230 
 3810      31363036 
 3811 017a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3811      20726576 
 3811      6973696F 
 3811      6E203233 
 3811      37373135 
 3812 01ad 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -finline-fu"
 3812      66756E63 
 3812      74696F6E 
 3812      2D736563 
 3812      74696F6E 
 3813 01e0 6E637469 		.ascii	"nctions\000"
 3813      6F6E7300 
 3814              	.LASF10:
 3815 01e8 75696E74 		.ascii	"uint16\000"
 3815      313600
 3816              	.LASF39:
 3817 01ef 72775261 		.ascii	"rwRa\000"
 3817      00
 3818              	.LASF74:
 3819 01f4 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3819      4152545F 
 3819      53657450 
 3819      6F776572 
 3819      53746174 
 3820              	.LASF32:
 3821 020b 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3821      4152545F 
 3821      7369655F 
 3821      65705F73 
 3821      74727563 
 3822              	.LASF43:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 114


 3823 0221 73696545 		.ascii	"sieEp\000"
 3823      7000
 3824              	.LASF85:
 3825 0227 55534255 		.ascii	"USBUART_transferState\000"
 3825      4152545F 
 3825      7472616E 
 3825      73666572 
 3825      53746174 
 3826              	.LASF67:
 3827 023d 6C656E67 		.ascii	"length\000"
 3827      746800
 3828              	.LASF47:
 3829 0244 64657669 		.ascii	"device\000"
 3829      636500
 3830              	.LASF12:
 3831 024b 666C6F61 		.ascii	"float\000"
 3831      7400
 3832              	.LASF78:
 3833 0251 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3833      4152545F 
 3833      47657443 
 3833      6F6E6669 
 3833      67757261 
 3834              	.LASF69:
 3835 026a 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3835      4152545F 
 3835      456E6162 
 3835      6C654F75 
 3835      74455000 
 3836              	.LASF82:
 3837 027e 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3837      4152545F 
 3837      44697361 
 3837      626C6553 
 3837      6F66496E 
 3838              	.LASF6:
 3839 0294 6C6F6E67 		.ascii	"long long int\000"
 3839      206C6F6E 
 3839      6720696E 
 3839      7400
 3840              	.LASF87:
 3841 02a2 55534255 		.ascii	"USBUART_configurationChanged\000"
 3841      4152545F 
 3841      636F6E66 
 3841      69677572 
 3841      6174696F 
 3842              	.LASF31:
 3843 02bf 65704372 		.ascii	"epCr0\000"
 3843      3000
 3844              	.LASF63:
 3845 02c5 55534255 		.ascii	"USBUART_InitEP_DMA\000"
 3845      4152545F 
 3845      496E6974 
 3845      45505F44 
 3845      4D4100
 3846              	.LASF98:
 3847 02d8 433A5C55 		.ascii	"C:\\Users\\ingan\\Documents\\PSoC Creator\\MegaDriv"
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 115


 3847      73657273 
 3847      5C696E67 
 3847      616E5C44 
 3847      6F63756D 
 3848 0306 655F706C 		.ascii	"e_player\\VGMPlayer_v0.6.cydsn\000"
 3848      61796572 
 3848      5C56474D 
 3848      506C6179 
 3848      65725F76 
 3849              	.LASF97:
 3850 0324 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3850      72617465 
 3850      645F536F 
 3850      75726365 
 3850      5C50536F 
 3851              	.LASF84:
 3852 0345 55534255 		.ascii	"USBUART_device\000"
 3852      4152545F 
 3852      64657669 
 3852      636500
 3853              	.LASF68:
 3854 0354 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3854      4152545F 
 3854      52656164 
 3854      4F757445 
 3854      5000
 3855              	.LASF1:
 3856 0366 756E7369 		.ascii	"unsigned char\000"
 3856      676E6564 
 3856      20636861 
 3856      7200
 3857              	.LASF73:
 3858 0374 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3858      4152545F 
 3858      47657445 
 3858      5041636B 
 3858      53746174 
 3859              	.LASF91:
 3860 038a 55534255 		.ascii	"USBUART_deviceAddress\000"
 3860      4152545F 
 3860      64657669 
 3860      63654164 
 3860      64726573 
 3861              	.LASF25:
 3862 03a0 62756666 		.ascii	"buffOffset\000"
 3862      4F666673 
 3862      657400
 3863              	.LASF65:
 3864 03ab 55534255 		.ascii	"USBUART_Stop_DMA\000"
 3864      4152545F 
 3864      53746F70 
 3864      5F444D41 
 3864      00
 3865              	.LASF35:
 3866 03bc 65705372 		.ascii	"epSr\000"
 3866      00
 3867              	.LASF50:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 116


 3868 03c1 55534255 		.ascii	"USBUART_Init\000"
 3868      4152545F 
 3868      496E6974 
 3868      00
 3869              	.LASF0:
 3870 03ce 7369676E 		.ascii	"signed char\000"
 3870      65642063 
 3870      68617200 
 3871              	.LASF80:
 3872 03da 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3872      4152545F 
 3872      5265496E 
 3872      6974436F 
 3872      6D706F6E 
 3873              	.LASF7:
 3874 03f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3874      206C6F6E 
 3874      6720756E 
 3874      7369676E 
 3874      65642069 
 3875              	.LASF42:
 3876 0409 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3876      4152545F 
 3876      6172625F 
 3876      65705F73 
 3876      74727563 
 3877              	.LASF8:
 3878 041f 756E7369 		.ascii	"unsigned int\000"
 3878      676E6564 
 3878      20696E74 
 3878      00
 3879              	.LASF41:
 3880 042c 72774472 		.ascii	"rwDr\000"
 3880      00
 3881              	.LASF37:
 3882 0431 72775761 		.ascii	"rwWa\000"
 3882      00
 3883              	.LASF33:
 3884 0436 65704366 		.ascii	"epCfg\000"
 3884      6700
 3885              	.LASF16:
 3886 043c 72656733 		.ascii	"reg32\000"
 3886      3200
 3887              	.LASF95:
 3888 0442 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3888      4152545F 
 3888      6C617374 
 3888      5061636B 
 3888      65745369 
 3889              	.LASF3:
 3890 0459 73686F72 		.ascii	"short unsigned int\000"
 3890      7420756E 
 3890      7369676E 
 3890      65642069 
 3890      6E7400
 3891              	.LASF40:
 3892 046c 72775261 		.ascii	"rwRaMsb\000"
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 117


 3892      4D736200 
 3893              	.LASF19:
 3894 0474 61747472 		.ascii	"attrib\000"
 3894      696200
 3895              	.LASF66:
 3896 047b 55534255 		.ascii	"USBUART_LoadInEP\000"
 3896      4152545F 
 3896      4C6F6164 
 3896      496E4550 
 3896      00
 3897              	.LASF14:
 3898 048c 63686172 		.ascii	"char\000"
 3898      00
 3899              	.LASF4:
 3900 0491 6C6F6E67 		.ascii	"long int\000"
 3900      20696E74 
 3900      00
 3901              	.LASF59:
 3902 049a 55534255 		.ascii	"USBUART_GetEPState\000"
 3902      4152545F 
 3902      47657445 
 3902      50537461 
 3902      746500
 3903              	.LASF60:
 3904 04ad 65704E75 		.ascii	"epNumber\000"
 3904      6D626572 
 3904      00
 3905              	.LASF83:
 3906 04b6 55534255 		.ascii	"USBUART_initVar\000"
 3906      4152545F 
 3906      696E6974 
 3906      56617200 
 3907              	.LASF23:
 3908 04c6 61646472 		.ascii	"addr\000"
 3908      00
 3909              	.LASF29:
 3910 04cb 6570436E 		.ascii	"epCnt0\000"
 3910      743000
 3911              	.LASF9:
 3912 04d2 75696E74 		.ascii	"uint8\000"
 3912      3800
 3913              	.LASF54:
 3914 04d8 63723152 		.ascii	"cr1Reg\000"
 3914      656700
 3915              	.LASF30:
 3916 04df 6570436E 		.ascii	"epCnt1\000"
 3916      743100
 3917              	.LASF21:
 3918 04e6 68774570 		.ascii	"hwEpState\000"
 3918      53746174 
 3918      6500
 3919              	.LASF11:
 3920 04f0 75696E74 		.ascii	"uint32\000"
 3920      333200
 3921              	.LASF15:
 3922 04f7 72656738 		.ascii	"reg8\000"
 3922      00
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 118


 3923              	.LASF5:
 3924 04fc 6C6F6E67 		.ascii	"long unsigned int\000"
 3924      20756E73 
 3924      69676E65 
 3924      6420696E 
 3924      7400
 3925              	.LASF13:
 3926 050e 646F7562 		.ascii	"double\000"
 3926      6C6500
 3927              	.LASF79:
 3928 0515 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3928      4152545F 
 3928      47657444 
 3928      65766963 
 3928      65416464 
 3929              	.LASF57:
 3930 052e 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3930      4152545F 
 3930      47657449 
 3930      6E746572 
 3930      66616365 
 3931              	.LASF20:
 3932 054a 61706945 		.ascii	"apiEpState\000"
 3932      70537461 
 3932      746500
 3933              	.LASF26:
 3934 0555 62756666 		.ascii	"bufferSize\000"
 3934      65725369 
 3934      7A6500
 3935              	.LASF52:
 3936 0560 55534255 		.ascii	"USBUART_InitComponent\000"
 3936      4152545F 
 3936      496E6974 
 3936      436F6D70 
 3936      6F6E656E 
 3937              	.LASF28:
 3938 0576 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3938      42554152 
 3938      545F4550 
 3938      5F43544C 
 3938      5F424C4F 
 3939              	.LASF55:
 3940 058d 55534255 		.ascii	"USBUART_CheckActivity\000"
 3940      4152545F 
 3940      43686563 
 3940      6B416374 
 3940      69766974 
 3941              	.LASF61:
 3942 05a3 55534255 		.ascii	"USBUART_GetEPCount\000"
 3942      4152545F 
 3942      47657445 
 3942      50436F75 
 3942      6E7400
 3943              	.LASF89:
 3944 05b6 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3944      4152545F 
 3944      696E7465 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cceKOTaJ.s 			page 119


 3944      72666163 
 3944      654E756D 
 3945              	.LASF38:
 3946 05ce 72775761 		.ascii	"rwWaMsb\000"
 3946      4D736200 
 3947              	.LASF71:
 3948 05d6 55534255 		.ascii	"USBUART_Force\000"
 3948      4152545F 
 3948      466F7263 
 3948      6500
 3949              	.LASF36:
 3950 05e4 72657365 		.ascii	"reserved\000"
 3950      72766564 
 3950      00
 3951              	.LASF27:
 3952 05ed 696E7465 		.ascii	"interface\000"
 3952      72666163 
 3952      6500
 3953              	.LASF72:
 3954 05f7 62537461 		.ascii	"bState\000"
 3954      746500
 3955              	.LASF51:
 3956 05fe 656E6162 		.ascii	"enableInterrupts\000"
 3956      6C65496E 
 3956      74657272 
 3956      75707473 
 3956      00
 3957              	.LASF70:
 3958 060f 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3958      4152545F 
 3958      44697361 
 3958      626C654F 
 3958      75744550 
 3959              	.LASF92:
 3960 0624 55534255 		.ascii	"USBUART_EP\000"
 3960      4152545F 
 3960      455000
 3961              	.LASF53:
 3962 062f 55534255 		.ascii	"USBUART_Stop\000"
 3962      4152545F 
 3962      53746F70 
 3962      00
 3963              	.LASF94:
 3964 063c 55534255 		.ascii	"USBUART_DmaTd\000"
 3964      4152545F 
 3964      446D6154 
 3964      6400
 3965              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
