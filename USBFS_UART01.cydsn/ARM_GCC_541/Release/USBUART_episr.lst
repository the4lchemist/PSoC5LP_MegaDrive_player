ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 2


  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0849     		ldr	r1, .L7
  35 0002 0120     		movs	r0, #1
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  36              		.loc 1 66 0
  37 0004 084A     		ldr	r2, .L7+4
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  38              		.loc 1 69 0
  39 0006 094B     		ldr	r3, .L7+8
  55:Generated_Source\PSoC5/USBUART_episr.c ****             
  40              		.loc 1 55 0
  41 0008 0870     		strb	r0, [r1]
  66:Generated_Source\PSoC5/USBUART_episr.c ****             
  42              		.loc 1 66 0
  43 000a 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 3


  44              		.loc 1 69 0
  45 000c 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
  46 000e 02F00302 		and	r2, r2, #3
  47 0012 8242     		cmp	r2, r0
  48 0014 03D0     		beq	.L2
  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  49              		.loc 1 71 0
  50 0016 DA7B     		ldrb	r2, [r3, #15]	@ zero_extendqisi2
  51 0018 82F08002 		eor	r2, r2, #128
  52 001c DA73     		strb	r2, [r3, #15]
  53              	.L2:
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  54              		.loc 1 80 0
  55 001e 0122     		movs	r2, #1
  56 0020 5A73     		strb	r2, [r3, #13]
  57 0022 7047     		bx	lr
  58              	.L8:
  59              		.align	2
  60              	.L7:
  61 0024 0B600040 		.word	1073766411
  62 0028 FC5F0040 		.word	1073766396
  63 002c 00000000 		.word	USBUART_EP
  64              		.cfi_endproc
  65              	.LFE0:
  66              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  67              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  68              		.align	2
  69              		.global	USBUART_EP_2_ISR
  70              		.thumb
  71              		.thumb_func
  72              		.type	USBUART_EP_2_ISR, %function
  73              	USBUART_EP_2_ISR:
  74              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 4


  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
  75              		.loc 1 121 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  80              		.loc 1 137 0
  81 0000 0949     		ldr	r1, .L14
  82 0002 0220     		movs	r0, #2
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 5


 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
  83              		.loc 1 148 0
  84 0004 094A     		ldr	r2, .L14+4
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  85              		.loc 1 151 0
  86 0006 0A4B     		ldr	r3, .L14+8
 137:Generated_Source\PSoC5/USBUART_episr.c **** 
  87              		.loc 1 137 0
  88 0008 0870     		strb	r0, [r1]
 148:Generated_Source\PSoC5/USBUART_episr.c ****             
  89              		.loc 1 148 0
  90 000a 92F82220 		ldrb	r2, [r2, #34]	@ zero_extendqisi2
  91              		.loc 1 151 0
  92 000e 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
  93 0010 02F00302 		and	r2, r2, #3
  94 0014 012A     		cmp	r2, #1
  95 0016 03D0     		beq	.L10
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  96              		.loc 1 153 0
  97 0018 DA7E     		ldrb	r2, [r3, #27]	@ zero_extendqisi2
  98 001a 82F08002 		eor	r2, r2, #128
  99 001e DA76     		strb	r2, [r3, #27]
 100              	.L10:
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
 101              		.loc 1 162 0
 102 0020 0122     		movs	r2, #1
 103 0022 5A76     		strb	r2, [r3, #25]
 104 0024 7047     		bx	lr
 105              	.L15:
 106 0026 00BF     		.align	2
 107              	.L14:
 108 0028 0B600040 		.word	1073766411
 109 002c FC5F0040 		.word	1073766396
 110 0030 00000000 		.word	USBUART_EP
 111              		.cfi_endproc
 112              	.LFE1:
 113              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 114              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 115              		.align	2
 116              		.global	USBUART_EP_3_ISR
 117              		.thumb
 118              		.thumb_func
 119              		.type	USBUART_EP_3_ISR, %function
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 6


 120              	USBUART_EP_3_ISR:
 121              	.LFB2:
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 122              		.loc 1 202 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 7


 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 127              		.loc 1 218 0
 128 0000 0B49     		ldr	r1, .L21
 129 0002 0420     		movs	r0, #4
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 130              		.loc 1 229 0
 131 0004 0B4A     		ldr	r2, .L21+4
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 132              		.loc 1 232 0
 133 0006 0C4B     		ldr	r3, .L21+8
 218:Generated_Source\PSoC5/USBUART_episr.c **** 
 134              		.loc 1 218 0
 135 0008 0870     		strb	r0, [r1]
 229:Generated_Source\PSoC5/USBUART_episr.c **** 
 136              		.loc 1 229 0
 137 000a 92F83220 		ldrb	r2, [r2, #50]	@ zero_extendqisi2
 138              		.loc 1 232 0
 139 000e 93F82420 		ldrb	r2, [r3, #36]	@ zero_extendqisi2
 140 0012 02F00302 		and	r2, r2, #3
 141 0016 012A     		cmp	r2, #1
 142 0018 05D0     		beq	.L17
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 143              		.loc 1 234 0
 144 001a 93F82720 		ldrb	r2, [r3, #39]	@ zero_extendqisi2
 145 001e 82F08002 		eor	r2, r2, #128
 146 0022 83F82720 		strb	r2, [r3, #39]
 147              	.L17:
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 148              		.loc 1 243 0
 149 0026 0122     		movs	r2, #1
 150 0028 83F82520 		strb	r2, [r3, #37]
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 8


 151 002c 7047     		bx	lr
 152              	.L22:
 153 002e 00BF     		.align	2
 154              	.L21:
 155 0030 0B600040 		.word	1073766411
 156 0034 FC5F0040 		.word	1073766396
 157 0038 00000000 		.word	USBUART_EP
 158              		.cfi_endproc
 159              	.LFE2:
 160              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 161              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 162              		.align	2
 163              		.global	USBUART_SOF_ISR
 164              		.thumb
 165              		.thumb_func
 166              		.type	USBUART_SOF_ISR, %function
 167              	USBUART_SOF_ISR:
 168              	.LFB3:
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 9


 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 10


 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 11


 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 12


 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 13


 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 14


 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 15


 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 16


 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 169              		.loc 1 694 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE3:
 177              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 178 0002 00BF     		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 179              		.align	2
 180              		.global	USBUART_BUS_RESET_ISR
 181              		.thumb
 182              		.thumb_func
 183              		.type	USBUART_BUS_RESET_ISR, %function
 184              	USBUART_BUS_RESET_ISR:
 185              	.LFB4:
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 17


 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 186              		.loc 1 723 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 191              		.loc 1 734 0
 192 0000 FFF7FEBF 		b	USBUART_ReInitComponent
 193              	.LVL0:
 194              		.cfi_endproc
 195              	.LFE4:
 196              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 197              		.text
 198              	.Letext0:
 199              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 200              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 201              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 202              		.section	.debug_info,"",%progbits
 203              	.Ldebug_info0:
 204 0000 50020000 		.4byte	0x250
 205 0004 0400     		.2byte	0x4
 206 0006 00000000 		.4byte	.Ldebug_abbrev0
 207 000a 04       		.byte	0x4
 208 000b 01       		.uleb128 0x1
 209 000c 11000000 		.4byte	.LASF37
 210 0010 0C       		.byte	0xc
 211 0011 60010000 		.4byte	.LASF38
 212 0015 F6010000 		.4byte	.LASF39
 213 0019 00000000 		.4byte	.Ldebug_ranges0+0
 214 001d 00000000 		.4byte	0
 215 0021 00000000 		.4byte	.Ldebug_line0
 216 0025 02       		.uleb128 0x2
 217 0026 01       		.byte	0x1
 218 0027 06       		.byte	0x6
 219 0028 CA020000 		.4byte	.LASF0
 220 002c 02       		.uleb128 0x2
 221 002d 01       		.byte	0x1
 222 002e 08       		.byte	0x8
 223 002f 52010000 		.4byte	.LASF1
 224 0033 02       		.uleb128 0x2
 225 0034 02       		.byte	0x2
 226 0035 05       		.byte	0x5
 227 0036 6E020000 		.4byte	.LASF2
 228 003a 02       		.uleb128 0x2
 229 003b 02       		.byte	0x2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 18


 230 003c 07       		.byte	0x7
 231 003d C3000000 		.4byte	.LASF3
 232 0041 02       		.uleb128 0x2
 233 0042 04       		.byte	0x4
 234 0043 05       		.byte	0x5
 235 0044 9E020000 		.4byte	.LASF4
 236 0048 02       		.uleb128 0x2
 237 0049 04       		.byte	0x4
 238 004a 07       		.byte	0x7
 239 004b 1E010000 		.4byte	.LASF5
 240 004f 02       		.uleb128 0x2
 241 0050 08       		.byte	0x8
 242 0051 05       		.byte	0x5
 243 0052 50020000 		.4byte	.LASF6
 244 0056 02       		.uleb128 0x2
 245 0057 08       		.byte	0x8
 246 0058 07       		.byte	0x7
 247 0059 BF010000 		.4byte	.LASF7
 248 005d 03       		.uleb128 0x3
 249 005e 04       		.byte	0x4
 250 005f 05       		.byte	0x5
 251 0060 696E7400 		.ascii	"int\000"
 252 0064 02       		.uleb128 0x2
 253 0065 04       		.byte	0x4
 254 0066 07       		.byte	0x7
 255 0067 B2010000 		.4byte	.LASF8
 256 006b 04       		.uleb128 0x4
 257 006c 8E020000 		.4byte	.LASF9
 258 0070 02       		.byte	0x2
 259 0071 9201     		.2byte	0x192
 260 0073 2C000000 		.4byte	0x2c
 261 0077 04       		.uleb128 0x4
 262 0078 A0010000 		.4byte	.LASF10
 263 007c 02       		.byte	0x2
 264 007d 9301     		.2byte	0x193
 265 007f 3A000000 		.4byte	0x3a
 266 0083 02       		.uleb128 0x2
 267 0084 04       		.byte	0x4
 268 0085 04       		.byte	0x4
 269 0086 BD000000 		.4byte	.LASF11
 270 008a 02       		.uleb128 0x2
 271 008b 08       		.byte	0x8
 272 008c 04       		.byte	0x4
 273 008d 87010000 		.4byte	.LASF12
 274 0091 02       		.uleb128 0x2
 275 0092 01       		.byte	0x1
 276 0093 08       		.byte	0x8
 277 0094 5E020000 		.4byte	.LASF13
 278 0098 04       		.uleb128 0x4
 279 0099 19010000 		.4byte	.LASF14
 280 009d 02       		.byte	0x2
 281 009e 3C02     		.2byte	0x23c
 282 00a0 A4000000 		.4byte	0xa4
 283 00a4 05       		.uleb128 0x5
 284 00a5 6B000000 		.4byte	0x6b
 285 00a9 02       		.uleb128 0x2
 286 00aa 08       		.byte	0x8
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 19


 287 00ab 04       		.byte	0x4
 288 00ac BE020000 		.4byte	.LASF15
 289 00b0 02       		.uleb128 0x2
 290 00b1 04       		.byte	0x4
 291 00b2 07       		.byte	0x7
 292 00b3 40020000 		.4byte	.LASF16
 293 00b7 06       		.uleb128 0x6
 294 00b8 0C       		.byte	0xc
 295 00b9 03       		.byte	0x3
 296 00ba 91       		.byte	0x91
 297 00bb 2C010000 		.4byte	0x12c
 298 00bf 07       		.uleb128 0x7
 299 00c0 8E010000 		.4byte	.LASF17
 300 00c4 03       		.byte	0x3
 301 00c5 93       		.byte	0x93
 302 00c6 6B000000 		.4byte	0x6b
 303 00ca 00       		.byte	0
 304 00cb 07       		.uleb128 0x7
 305 00cc A7010000 		.4byte	.LASF18
 306 00d0 03       		.byte	0x3
 307 00d1 94       		.byte	0x94
 308 00d2 6B000000 		.4byte	0x6b
 309 00d6 01       		.byte	0x1
 310 00d7 07       		.uleb128 0x7
 311 00d8 D6010000 		.4byte	.LASF19
 312 00dc 03       		.byte	0x3
 313 00dd 95       		.byte	0x95
 314 00de 6B000000 		.4byte	0x6b
 315 00e2 02       		.byte	0x2
 316 00e3 07       		.uleb128 0x7
 317 00e4 05010000 		.4byte	.LASF20
 318 00e8 03       		.byte	0x3
 319 00e9 96       		.byte	0x96
 320 00ea 6B000000 		.4byte	0x6b
 321 00ee 03       		.byte	0x3
 322 00ef 07       		.uleb128 0x7
 323 00f0 30010000 		.4byte	.LASF21
 324 00f4 03       		.byte	0x3
 325 00f5 97       		.byte	0x97
 326 00f6 6B000000 		.4byte	0x6b
 327 00fa 04       		.byte	0x4
 328 00fb 07       		.uleb128 0x7
 329 00fc 49020000 		.4byte	.LASF22
 330 0100 03       		.byte	0x3
 331 0101 98       		.byte	0x98
 332 0102 6B000000 		.4byte	0x6b
 333 0106 05       		.byte	0x5
 334 0107 07       		.uleb128 0x7
 335 0108 95010000 		.4byte	.LASF23
 336 010c 03       		.byte	0x3
 337 010d 99       		.byte	0x99
 338 010e 77000000 		.4byte	0x77
 339 0112 06       		.byte	0x6
 340 0113 07       		.uleb128 0x7
 341 0114 63020000 		.4byte	.LASF24
 342 0118 03       		.byte	0x3
 343 0119 9A       		.byte	0x9a
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 20


 344 011a 77000000 		.4byte	0x77
 345 011e 08       		.byte	0x8
 346 011f 07       		.uleb128 0x7
 347 0120 94020000 		.4byte	.LASF25
 348 0124 03       		.byte	0x3
 349 0125 9B       		.byte	0x9b
 350 0126 6B000000 		.4byte	0x6b
 351 012a 0A       		.byte	0xa
 352 012b 00       		.byte	0
 353 012c 08       		.uleb128 0x8
 354 012d A7020000 		.4byte	.LASF26
 355 0131 03       		.byte	0x3
 356 0132 9C       		.byte	0x9c
 357 0133 B7000000 		.4byte	0xb7
 358 0137 06       		.uleb128 0x6
 359 0138 10       		.byte	0x10
 360 0139 03       		.byte	0x3
 361 013a D8       		.byte	0xd8
 362 013b 70010000 		.4byte	0x170
 363 013f 07       		.uleb128 0x7
 364 0140 F7000000 		.4byte	.LASF27
 365 0144 03       		.byte	0x3
 366 0145 DA       		.byte	0xda
 367 0146 6B000000 		.4byte	0x6b
 368 014a 00       		.byte	0
 369 014b 07       		.uleb128 0x7
 370 014c FE000000 		.4byte	.LASF28
 371 0150 03       		.byte	0x3
 372 0151 DB       		.byte	0xdb
 373 0152 6B000000 		.4byte	0x6b
 374 0156 01       		.byte	0x1
 375 0157 07       		.uleb128 0x7
 376 0158 B7000000 		.4byte	.LASF29
 377 015c 03       		.byte	0x3
 378 015d DC       		.byte	0xdc
 379 015e 6B000000 		.4byte	0x6b
 380 0162 02       		.byte	0x2
 381 0163 09       		.uleb128 0x9
 382 0164 67617000 		.ascii	"gap\000"
 383 0168 03       		.byte	0x3
 384 0169 DD       		.byte	0xdd
 385 016a 70010000 		.4byte	0x170
 386 016e 03       		.byte	0x3
 387 016f 00       		.byte	0
 388 0170 0A       		.uleb128 0xa
 389 0171 6B000000 		.4byte	0x6b
 390 0175 80010000 		.4byte	0x180
 391 0179 0B       		.uleb128 0xb
 392 017a B0000000 		.4byte	0xb0
 393 017e 0C       		.byte	0xc
 394 017f 00       		.byte	0
 395 0180 08       		.uleb128 0x8
 396 0181 E0010000 		.4byte	.LASF30
 397 0185 03       		.byte	0x3
 398 0186 DE       		.byte	0xde
 399 0187 37010000 		.4byte	0x137
 400 018b 0C       		.uleb128 0xc
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 21


 401 018c 90       		.byte	0x90
 402 018d 03       		.byte	0x3
 403 018e 1201     		.2byte	0x112
 404 0190 A2010000 		.4byte	0x1a2
 405 0194 0D       		.uleb128 0xd
 406 0195 35010000 		.4byte	.LASF31
 407 0199 03       		.byte	0x3
 408 019a 1401     		.2byte	0x114
 409 019c A2010000 		.4byte	0x1a2
 410 01a0 00       		.byte	0
 411 01a1 00       		.byte	0
 412 01a2 0A       		.uleb128 0xa
 413 01a3 80010000 		.4byte	0x180
 414 01a7 B2010000 		.4byte	0x1b2
 415 01ab 0B       		.uleb128 0xb
 416 01ac B0000000 		.4byte	0xb0
 417 01b0 08       		.byte	0x8
 418 01b1 00       		.byte	0
 419 01b2 04       		.uleb128 0x4
 420 01b3 3B010000 		.4byte	.LASF32
 421 01b7 03       		.byte	0x3
 422 01b8 1501     		.2byte	0x115
 423 01ba 8B010000 		.4byte	0x18b
 424 01be 0E       		.uleb128 0xe
 425 01bf D6020000 		.4byte	.LASF33
 426 01c3 01       		.byte	0x1
 427 01c4 25       		.byte	0x25
 428 01c5 00000000 		.4byte	.LFB0
 429 01c9 30000000 		.4byte	.LFE0-.LFB0
 430 01cd 01       		.uleb128 0x1
 431 01ce 9C       		.byte	0x9c
 432 01cf 0E       		.uleb128 0xe
 433 01d0 D6000000 		.4byte	.LASF34
 434 01d4 01       		.byte	0x1
 435 01d5 78       		.byte	0x78
 436 01d6 00000000 		.4byte	.LFB1
 437 01da 34000000 		.4byte	.LFE1-.LFB1
 438 01de 01       		.uleb128 0x1
 439 01df 9C       		.byte	0x9c
 440 01e0 0E       		.uleb128 0xe
 441 01e1 00000000 		.4byte	.LASF35
 442 01e5 01       		.byte	0x1
 443 01e6 C9       		.byte	0xc9
 444 01e7 00000000 		.4byte	.LFB2
 445 01eb 3C000000 		.4byte	.LFE2-.LFB2
 446 01ef 01       		.uleb128 0x1
 447 01f0 9C       		.byte	0x9c
 448 01f1 0F       		.uleb128 0xf
 449 01f2 E7000000 		.4byte	.LASF36
 450 01f6 01       		.byte	0x1
 451 01f7 B502     		.2byte	0x2b5
 452 01f9 00000000 		.4byte	.LFB3
 453 01fd 02000000 		.4byte	.LFE3-.LFB3
 454 0201 01       		.uleb128 0x1
 455 0202 9C       		.byte	0x9c
 456 0203 10       		.uleb128 0x10
 457 0204 78020000 		.4byte	.LASF40
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 22


 458 0208 01       		.byte	0x1
 459 0209 D202     		.2byte	0x2d2
 460 020b 00000000 		.4byte	.LFB4
 461 020f 04000000 		.4byte	.LFE4-.LFB4
 462 0213 01       		.uleb128 0x1
 463 0214 9C       		.byte	0x9c
 464 0215 23020000 		.4byte	0x223
 465 0219 11       		.uleb128 0x11
 466 021a 04000000 		.4byte	.LVL0
 467 021e 48020000 		.4byte	0x248
 468 0222 00       		.byte	0
 469 0223 0A       		.uleb128 0xa
 470 0224 33020000 		.4byte	0x233
 471 0228 33020000 		.4byte	0x233
 472 022c 0B       		.uleb128 0xb
 473 022d B0000000 		.4byte	0xb0
 474 0231 08       		.byte	0x8
 475 0232 00       		.byte	0
 476 0233 05       		.uleb128 0x5
 477 0234 2C010000 		.4byte	0x12c
 478 0238 12       		.uleb128 0x12
 479 0239 0E010000 		.4byte	.LASF41
 480 023d 04       		.byte	0x4
 481 023e 7A       		.byte	0x7a
 482 023f 43020000 		.4byte	0x243
 483 0243 05       		.uleb128 0x5
 484 0244 23020000 		.4byte	0x223
 485 0248 13       		.uleb128 0x13
 486 0249 9F000000 		.4byte	.LASF42
 487 024d 9F000000 		.4byte	.LASF42
 488 0251 04       		.byte	0x4
 489 0252 A5       		.byte	0xa5
 490 0253 00       		.byte	0
 491              		.section	.debug_abbrev,"",%progbits
 492              	.Ldebug_abbrev0:
 493 0000 01       		.uleb128 0x1
 494 0001 11       		.uleb128 0x11
 495 0002 01       		.byte	0x1
 496 0003 25       		.uleb128 0x25
 497 0004 0E       		.uleb128 0xe
 498 0005 13       		.uleb128 0x13
 499 0006 0B       		.uleb128 0xb
 500 0007 03       		.uleb128 0x3
 501 0008 0E       		.uleb128 0xe
 502 0009 1B       		.uleb128 0x1b
 503 000a 0E       		.uleb128 0xe
 504 000b 55       		.uleb128 0x55
 505 000c 17       		.uleb128 0x17
 506 000d 11       		.uleb128 0x11
 507 000e 01       		.uleb128 0x1
 508 000f 10       		.uleb128 0x10
 509 0010 17       		.uleb128 0x17
 510 0011 00       		.byte	0
 511 0012 00       		.byte	0
 512 0013 02       		.uleb128 0x2
 513 0014 24       		.uleb128 0x24
 514 0015 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 23


 515 0016 0B       		.uleb128 0xb
 516 0017 0B       		.uleb128 0xb
 517 0018 3E       		.uleb128 0x3e
 518 0019 0B       		.uleb128 0xb
 519 001a 03       		.uleb128 0x3
 520 001b 0E       		.uleb128 0xe
 521 001c 00       		.byte	0
 522 001d 00       		.byte	0
 523 001e 03       		.uleb128 0x3
 524 001f 24       		.uleb128 0x24
 525 0020 00       		.byte	0
 526 0021 0B       		.uleb128 0xb
 527 0022 0B       		.uleb128 0xb
 528 0023 3E       		.uleb128 0x3e
 529 0024 0B       		.uleb128 0xb
 530 0025 03       		.uleb128 0x3
 531 0026 08       		.uleb128 0x8
 532 0027 00       		.byte	0
 533 0028 00       		.byte	0
 534 0029 04       		.uleb128 0x4
 535 002a 16       		.uleb128 0x16
 536 002b 00       		.byte	0
 537 002c 03       		.uleb128 0x3
 538 002d 0E       		.uleb128 0xe
 539 002e 3A       		.uleb128 0x3a
 540 002f 0B       		.uleb128 0xb
 541 0030 3B       		.uleb128 0x3b
 542 0031 05       		.uleb128 0x5
 543 0032 49       		.uleb128 0x49
 544 0033 13       		.uleb128 0x13
 545 0034 00       		.byte	0
 546 0035 00       		.byte	0
 547 0036 05       		.uleb128 0x5
 548 0037 35       		.uleb128 0x35
 549 0038 00       		.byte	0
 550 0039 49       		.uleb128 0x49
 551 003a 13       		.uleb128 0x13
 552 003b 00       		.byte	0
 553 003c 00       		.byte	0
 554 003d 06       		.uleb128 0x6
 555 003e 13       		.uleb128 0x13
 556 003f 01       		.byte	0x1
 557 0040 0B       		.uleb128 0xb
 558 0041 0B       		.uleb128 0xb
 559 0042 3A       		.uleb128 0x3a
 560 0043 0B       		.uleb128 0xb
 561 0044 3B       		.uleb128 0x3b
 562 0045 0B       		.uleb128 0xb
 563 0046 01       		.uleb128 0x1
 564 0047 13       		.uleb128 0x13
 565 0048 00       		.byte	0
 566 0049 00       		.byte	0
 567 004a 07       		.uleb128 0x7
 568 004b 0D       		.uleb128 0xd
 569 004c 00       		.byte	0
 570 004d 03       		.uleb128 0x3
 571 004e 0E       		.uleb128 0xe
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 24


 572 004f 3A       		.uleb128 0x3a
 573 0050 0B       		.uleb128 0xb
 574 0051 3B       		.uleb128 0x3b
 575 0052 0B       		.uleb128 0xb
 576 0053 49       		.uleb128 0x49
 577 0054 13       		.uleb128 0x13
 578 0055 38       		.uleb128 0x38
 579 0056 0B       		.uleb128 0xb
 580 0057 00       		.byte	0
 581 0058 00       		.byte	0
 582 0059 08       		.uleb128 0x8
 583 005a 16       		.uleb128 0x16
 584 005b 00       		.byte	0
 585 005c 03       		.uleb128 0x3
 586 005d 0E       		.uleb128 0xe
 587 005e 3A       		.uleb128 0x3a
 588 005f 0B       		.uleb128 0xb
 589 0060 3B       		.uleb128 0x3b
 590 0061 0B       		.uleb128 0xb
 591 0062 49       		.uleb128 0x49
 592 0063 13       		.uleb128 0x13
 593 0064 00       		.byte	0
 594 0065 00       		.byte	0
 595 0066 09       		.uleb128 0x9
 596 0067 0D       		.uleb128 0xd
 597 0068 00       		.byte	0
 598 0069 03       		.uleb128 0x3
 599 006a 08       		.uleb128 0x8
 600 006b 3A       		.uleb128 0x3a
 601 006c 0B       		.uleb128 0xb
 602 006d 3B       		.uleb128 0x3b
 603 006e 0B       		.uleb128 0xb
 604 006f 49       		.uleb128 0x49
 605 0070 13       		.uleb128 0x13
 606 0071 38       		.uleb128 0x38
 607 0072 0B       		.uleb128 0xb
 608 0073 00       		.byte	0
 609 0074 00       		.byte	0
 610 0075 0A       		.uleb128 0xa
 611 0076 01       		.uleb128 0x1
 612 0077 01       		.byte	0x1
 613 0078 49       		.uleb128 0x49
 614 0079 13       		.uleb128 0x13
 615 007a 01       		.uleb128 0x1
 616 007b 13       		.uleb128 0x13
 617 007c 00       		.byte	0
 618 007d 00       		.byte	0
 619 007e 0B       		.uleb128 0xb
 620 007f 21       		.uleb128 0x21
 621 0080 00       		.byte	0
 622 0081 49       		.uleb128 0x49
 623 0082 13       		.uleb128 0x13
 624 0083 2F       		.uleb128 0x2f
 625 0084 0B       		.uleb128 0xb
 626 0085 00       		.byte	0
 627 0086 00       		.byte	0
 628 0087 0C       		.uleb128 0xc
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 25


 629 0088 13       		.uleb128 0x13
 630 0089 01       		.byte	0x1
 631 008a 0B       		.uleb128 0xb
 632 008b 0B       		.uleb128 0xb
 633 008c 3A       		.uleb128 0x3a
 634 008d 0B       		.uleb128 0xb
 635 008e 3B       		.uleb128 0x3b
 636 008f 05       		.uleb128 0x5
 637 0090 01       		.uleb128 0x1
 638 0091 13       		.uleb128 0x13
 639 0092 00       		.byte	0
 640 0093 00       		.byte	0
 641 0094 0D       		.uleb128 0xd
 642 0095 0D       		.uleb128 0xd
 643 0096 00       		.byte	0
 644 0097 03       		.uleb128 0x3
 645 0098 0E       		.uleb128 0xe
 646 0099 3A       		.uleb128 0x3a
 647 009a 0B       		.uleb128 0xb
 648 009b 3B       		.uleb128 0x3b
 649 009c 05       		.uleb128 0x5
 650 009d 49       		.uleb128 0x49
 651 009e 13       		.uleb128 0x13
 652 009f 38       		.uleb128 0x38
 653 00a0 0B       		.uleb128 0xb
 654 00a1 00       		.byte	0
 655 00a2 00       		.byte	0
 656 00a3 0E       		.uleb128 0xe
 657 00a4 2E       		.uleb128 0x2e
 658 00a5 00       		.byte	0
 659 00a6 3F       		.uleb128 0x3f
 660 00a7 19       		.uleb128 0x19
 661 00a8 03       		.uleb128 0x3
 662 00a9 0E       		.uleb128 0xe
 663 00aa 3A       		.uleb128 0x3a
 664 00ab 0B       		.uleb128 0xb
 665 00ac 3B       		.uleb128 0x3b
 666 00ad 0B       		.uleb128 0xb
 667 00ae 27       		.uleb128 0x27
 668 00af 19       		.uleb128 0x19
 669 00b0 11       		.uleb128 0x11
 670 00b1 01       		.uleb128 0x1
 671 00b2 12       		.uleb128 0x12
 672 00b3 06       		.uleb128 0x6
 673 00b4 40       		.uleb128 0x40
 674 00b5 18       		.uleb128 0x18
 675 00b6 9742     		.uleb128 0x2117
 676 00b8 19       		.uleb128 0x19
 677 00b9 00       		.byte	0
 678 00ba 00       		.byte	0
 679 00bb 0F       		.uleb128 0xf
 680 00bc 2E       		.uleb128 0x2e
 681 00bd 00       		.byte	0
 682 00be 3F       		.uleb128 0x3f
 683 00bf 19       		.uleb128 0x19
 684 00c0 03       		.uleb128 0x3
 685 00c1 0E       		.uleb128 0xe
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 26


 686 00c2 3A       		.uleb128 0x3a
 687 00c3 0B       		.uleb128 0xb
 688 00c4 3B       		.uleb128 0x3b
 689 00c5 05       		.uleb128 0x5
 690 00c6 27       		.uleb128 0x27
 691 00c7 19       		.uleb128 0x19
 692 00c8 11       		.uleb128 0x11
 693 00c9 01       		.uleb128 0x1
 694 00ca 12       		.uleb128 0x12
 695 00cb 06       		.uleb128 0x6
 696 00cc 40       		.uleb128 0x40
 697 00cd 18       		.uleb128 0x18
 698 00ce 9742     		.uleb128 0x2117
 699 00d0 19       		.uleb128 0x19
 700 00d1 00       		.byte	0
 701 00d2 00       		.byte	0
 702 00d3 10       		.uleb128 0x10
 703 00d4 2E       		.uleb128 0x2e
 704 00d5 01       		.byte	0x1
 705 00d6 3F       		.uleb128 0x3f
 706 00d7 19       		.uleb128 0x19
 707 00d8 03       		.uleb128 0x3
 708 00d9 0E       		.uleb128 0xe
 709 00da 3A       		.uleb128 0x3a
 710 00db 0B       		.uleb128 0xb
 711 00dc 3B       		.uleb128 0x3b
 712 00dd 05       		.uleb128 0x5
 713 00de 27       		.uleb128 0x27
 714 00df 19       		.uleb128 0x19
 715 00e0 11       		.uleb128 0x11
 716 00e1 01       		.uleb128 0x1
 717 00e2 12       		.uleb128 0x12
 718 00e3 06       		.uleb128 0x6
 719 00e4 40       		.uleb128 0x40
 720 00e5 18       		.uleb128 0x18
 721 00e6 9742     		.uleb128 0x2117
 722 00e8 19       		.uleb128 0x19
 723 00e9 01       		.uleb128 0x1
 724 00ea 13       		.uleb128 0x13
 725 00eb 00       		.byte	0
 726 00ec 00       		.byte	0
 727 00ed 11       		.uleb128 0x11
 728 00ee 898201   		.uleb128 0x4109
 729 00f1 00       		.byte	0
 730 00f2 11       		.uleb128 0x11
 731 00f3 01       		.uleb128 0x1
 732 00f4 9542     		.uleb128 0x2115
 733 00f6 19       		.uleb128 0x19
 734 00f7 31       		.uleb128 0x31
 735 00f8 13       		.uleb128 0x13
 736 00f9 00       		.byte	0
 737 00fa 00       		.byte	0
 738 00fb 12       		.uleb128 0x12
 739 00fc 34       		.uleb128 0x34
 740 00fd 00       		.byte	0
 741 00fe 03       		.uleb128 0x3
 742 00ff 0E       		.uleb128 0xe
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 27


 743 0100 3A       		.uleb128 0x3a
 744 0101 0B       		.uleb128 0xb
 745 0102 3B       		.uleb128 0x3b
 746 0103 0B       		.uleb128 0xb
 747 0104 49       		.uleb128 0x49
 748 0105 13       		.uleb128 0x13
 749 0106 3F       		.uleb128 0x3f
 750 0107 19       		.uleb128 0x19
 751 0108 3C       		.uleb128 0x3c
 752 0109 19       		.uleb128 0x19
 753 010a 00       		.byte	0
 754 010b 00       		.byte	0
 755 010c 13       		.uleb128 0x13
 756 010d 2E       		.uleb128 0x2e
 757 010e 00       		.byte	0
 758 010f 3F       		.uleb128 0x3f
 759 0110 19       		.uleb128 0x19
 760 0111 3C       		.uleb128 0x3c
 761 0112 19       		.uleb128 0x19
 762 0113 6E       		.uleb128 0x6e
 763 0114 0E       		.uleb128 0xe
 764 0115 03       		.uleb128 0x3
 765 0116 0E       		.uleb128 0xe
 766 0117 3A       		.uleb128 0x3a
 767 0118 0B       		.uleb128 0xb
 768 0119 3B       		.uleb128 0x3b
 769 011a 0B       		.uleb128 0xb
 770 011b 00       		.byte	0
 771 011c 00       		.byte	0
 772 011d 00       		.byte	0
 773              		.section	.debug_aranges,"",%progbits
 774 0000 3C000000 		.4byte	0x3c
 775 0004 0200     		.2byte	0x2
 776 0006 00000000 		.4byte	.Ldebug_info0
 777 000a 04       		.byte	0x4
 778 000b 00       		.byte	0
 779 000c 0000     		.2byte	0
 780 000e 0000     		.2byte	0
 781 0010 00000000 		.4byte	.LFB0
 782 0014 30000000 		.4byte	.LFE0-.LFB0
 783 0018 00000000 		.4byte	.LFB1
 784 001c 34000000 		.4byte	.LFE1-.LFB1
 785 0020 00000000 		.4byte	.LFB2
 786 0024 3C000000 		.4byte	.LFE2-.LFB2
 787 0028 00000000 		.4byte	.LFB3
 788 002c 02000000 		.4byte	.LFE3-.LFB3
 789 0030 00000000 		.4byte	.LFB4
 790 0034 04000000 		.4byte	.LFE4-.LFB4
 791 0038 00000000 		.4byte	0
 792 003c 00000000 		.4byte	0
 793              		.section	.debug_ranges,"",%progbits
 794              	.Ldebug_ranges0:
 795 0000 00000000 		.4byte	.LFB0
 796 0004 30000000 		.4byte	.LFE0
 797 0008 00000000 		.4byte	.LFB1
 798 000c 34000000 		.4byte	.LFE1
 799 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 28


 800 0014 3C000000 		.4byte	.LFE2
 801 0018 00000000 		.4byte	.LFB3
 802 001c 02000000 		.4byte	.LFE3
 803 0020 00000000 		.4byte	.LFB4
 804 0024 04000000 		.4byte	.LFE4
 805 0028 00000000 		.4byte	0
 806 002c 00000000 		.4byte	0
 807              		.section	.debug_line,"",%progbits
 808              	.Ldebug_line0:
 809 0000 F6000000 		.section	.debug_str,"MS",%progbits,1
 809      02006800 
 809      00000201 
 809      FB0E0D00 
 809      01010101 
 810              	.LASF35:
 811 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 811      4152545F 
 811      45505F33 
 811      5F495352 
 811      00
 812              	.LASF37:
 813 0011 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 813      43313120 
 813      352E342E 
 813      31203230 
 813      31363036 
 814 0044 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 814      20726576 
 814      6973696F 
 814      6E203233 
 814      37373135 
 815 0077 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 815      66756E63 
 815      74696F6E 
 815      2D736563 
 815      74696F6E 
 816              	.LASF42:
 817 009f 55534255 		.ascii	"USBUART_ReInitComponent\000"
 817      4152545F 
 817      5265496E 
 817      6974436F 
 817      6D706F6E 
 818              	.LASF29:
 819 00b7 65704372 		.ascii	"epCr0\000"
 819      3000
 820              	.LASF11:
 821 00bd 666C6F61 		.ascii	"float\000"
 821      7400
 822              	.LASF3:
 823 00c3 73686F72 		.ascii	"short unsigned int\000"
 823      7420756E 
 823      7369676E 
 823      65642069 
 823      6E7400
 824              	.LASF34:
 825 00d6 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 825      4152545F 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 29


 825      45505F32 
 825      5F495352 
 825      00
 826              	.LASF36:
 827 00e7 55534255 		.ascii	"USBUART_SOF_ISR\000"
 827      4152545F 
 827      534F465F 
 827      49535200 
 828              	.LASF27:
 829 00f7 6570436E 		.ascii	"epCnt0\000"
 829      743000
 830              	.LASF28:
 831 00fe 6570436E 		.ascii	"epCnt1\000"
 831      743100
 832              	.LASF20:
 833 0105 6570546F 		.ascii	"epToggle\000"
 833      67676C65 
 833      00
 834              	.LASF41:
 835 010e 55534255 		.ascii	"USBUART_EP\000"
 835      4152545F 
 835      455000
 836              	.LASF14:
 837 0119 72656738 		.ascii	"reg8\000"
 837      00
 838              	.LASF5:
 839 011e 6C6F6E67 		.ascii	"long unsigned int\000"
 839      20756E73 
 839      69676E65 
 839      6420696E 
 839      7400
 840              	.LASF21:
 841 0130 61646472 		.ascii	"addr\000"
 841      00
 842              	.LASF31:
 843 0135 73696545 		.ascii	"sieEp\000"
 843      7000
 844              	.LASF32:
 845 013b 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 845      4152545F 
 845      7369655F 
 845      6570735F 
 845      73747275 
 846              	.LASF1:
 847 0152 756E7369 		.ascii	"unsigned char\000"
 847      676E6564 
 847      20636861 
 847      7200
 848              	.LASF38:
 849 0160 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 849      72617465 
 849      645F536F 
 849      75726365 
 849      5C50536F 
 850              	.LASF12:
 851 0187 646F7562 		.ascii	"double\000"
 851      6C6500
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 30


 852              	.LASF17:
 853 018e 61747472 		.ascii	"attrib\000"
 853      696200
 854              	.LASF23:
 855 0195 62756666 		.ascii	"buffOffset\000"
 855      4F666673 
 855      657400
 856              	.LASF10:
 857 01a0 75696E74 		.ascii	"uint16\000"
 857      313600
 858              	.LASF18:
 859 01a7 61706945 		.ascii	"apiEpState\000"
 859      70537461 
 859      746500
 860              	.LASF8:
 861 01b2 756E7369 		.ascii	"unsigned int\000"
 861      676E6564 
 861      20696E74 
 861      00
 862              	.LASF7:
 863 01bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 863      206C6F6E 
 863      6720756E 
 863      7369676E 
 863      65642069 
 864              	.LASF19:
 865 01d6 68774570 		.ascii	"hwEpState\000"
 865      53746174 
 865      6500
 866              	.LASF30:
 867 01e0 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 867      4152545F 
 867      7369655F 
 867      65705F73 
 867      74727563 
 868              	.LASF39:
 869 01f6 433A5C55 		.ascii	"C:\\Users\\ingan\\Documents\\PSoC Creator\\MegaDriv"
 869      73657273 
 869      5C696E67 
 869      616E5C44 
 869      6F63756D 
 870 0224 655F706C 		.ascii	"e_player\\USBFS_UART01.cydsn\000"
 870      61796572 
 870      5C555342 
 870      46535F55 
 870      41525430 
 871              	.LASF16:
 872 0240 73697A65 		.ascii	"sizetype\000"
 872      74797065 
 872      00
 873              	.LASF22:
 874 0249 65704D6F 		.ascii	"epMode\000"
 874      646500
 875              	.LASF6:
 876 0250 6C6F6E67 		.ascii	"long long int\000"
 876      206C6F6E 
 876      6720696E 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\cc2prN0E.s 			page 31


 876      7400
 877              	.LASF13:
 878 025e 63686172 		.ascii	"char\000"
 878      00
 879              	.LASF24:
 880 0263 62756666 		.ascii	"bufferSize\000"
 880      65725369 
 880      7A6500
 881              	.LASF2:
 882 026e 73686F72 		.ascii	"short int\000"
 882      7420696E 
 882      7400
 883              	.LASF40:
 884 0278 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 884      4152545F 
 884      4255535F 
 884      52455345 
 884      545F4953 
 885              	.LASF9:
 886 028e 75696E74 		.ascii	"uint8\000"
 886      3800
 887              	.LASF25:
 888 0294 696E7465 		.ascii	"interface\000"
 888      72666163 
 888      6500
 889              	.LASF4:
 890 029e 6C6F6E67 		.ascii	"long int\000"
 890      20696E74 
 890      00
 891              	.LASF26:
 892 02a7 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 892      42554152 
 892      545F4550 
 892      5F43544C 
 892      5F424C4F 
 893              	.LASF15:
 894 02be 6C6F6E67 		.ascii	"long double\000"
 894      20646F75 
 894      626C6500 
 895              	.LASF0:
 896 02ca 7369676E 		.ascii	"signed char\000"
 896      65642063 
 896      68617200 
 897              	.LASF33:
 898 02d6 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 898      4152545F 
 898      45505F31 
 898      5F495352 
 898      00
 899              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
