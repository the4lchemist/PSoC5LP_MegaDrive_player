ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_Init, %function
  25              	USBUART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 2


  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 3


  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 4


 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBUART.c **** }
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 5


 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 6


 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
  43              		.loc 1 257 0
  44 0008 424A     		ldr	r2, .L3
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
  45              		.loc 1 259 0
  46 000a 4349     		ldr	r1, .L3+4
 257:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
  47              		.loc 1 257 0
  48 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 250:Generated_Source\PSoC5/USBUART.c **** 
  49              		.loc 1 250 0
  50 000e 8046     		mov	r8, r0
  51              	.LVL1:
 257:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
  52              		.loc 1 257 0
  53 0010 43F00103 		orr	r3, r3, #1
  54 0014 1370     		strb	r3, [r2]
  55              		.loc 1 259 0
  56 0016 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
  57              		.loc 1 262 0
  58 0018 404C     		ldr	r4, .L3+8
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 001a 4148     		ldr	r0, .L3+12
 262:Generated_Source\PSoC5/USBUART.c **** 
  61              		.loc 1 262 0
  62 001c 0126     		movs	r6, #1
  63              		.loc 1 264 0
  64 001e 0225     		movs	r5, #2
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
  65              		.loc 1 268 0
  66 0020 02F5E352 		add	r2, r2, #7264
 259:Generated_Source\PSoC5/USBUART.c **** 
  67              		.loc 1 259 0
  68 0024 43F00103 		orr	r3, r3, #1
  69 0028 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 7


  70              		.loc 1 268 0
  71 002a 0B32     		adds	r2, r2, #11
 262:Generated_Source\PSoC5/USBUART.c **** 
  72              		.loc 1 262 0
  73 002c 2670     		strb	r6, [r4]
 264:Generated_Source\PSoC5/USBUART.c **** 
  74              		.loc 1 264 0
  75 002e 0570     		strb	r5, [r0]
  76              		.loc 1 268 0
  77 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
  78              		.loc 1 274 0
  79 0032 A4F5E854 		sub	r4, r4, #7424
 268:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  80              		.loc 1 268 0
  81 0036 03F07F03 		and	r3, r3, #127
  82              		.loc 1 274 0
  83 003a 093C     		subs	r4, r4, #9
 268:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  84              		.loc 1 268 0
  85 003c 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  86              		.loc 1 269 0
  87 003e 0020     		movs	r0, #0
  88 0040 FFF7FEFF 		bl	CyDelayUs
  89              	.LVL2:
  90              		.loc 1 274 0
  91 0044 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
  92              		.loc 1 278 0
  93 0046 374A     		ldr	r2, .L3+16
 274:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
  94              		.loc 1 274 0
  95 0048 03F0F903 		and	r3, r3, #249
  96 004c 2370     		strb	r3, [r4]
  97              		.loc 1 278 0
  98 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
  99              		.loc 1 283 0
 100 0050 3046     		mov	r0, r6
 278:Generated_Source\PSoC5/USBUART.c **** 
 101              		.loc 1 278 0
 102 0052 03F0DF03 		and	r3, r3, #223
 103 0056 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 8


 104              		.loc 1 281 0
 105 0058 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 106              		.loc 1 297 0
 107 005a 0027     		movs	r7, #0
 281:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 108              		.loc 1 281 0
 109 005c 3343     		orrs	r3, r3, r6
 110 005e 2370     		strb	r3, [r4]
 283:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 111              		.loc 1 283 0
 112 0060 FFF7FEFF 		bl	CyDelayUs
 113              	.LVL3:
 285:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 114              		.loc 1 285 0
 115 0064 2820     		movs	r0, #40
 116 0066 FFF7FEFF 		bl	CyDelayUs
 117              	.LVL4:
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 118              		.loc 1 287 0
 119 006a 2F4B     		ldr	r3, .L3+20
 292:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 120              		.loc 1 292 0
 121 006c 2846     		mov	r0, r5
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 122              		.loc 1 287 0
 123 006e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 124 0070 02F07F02 		and	r2, r2, #127
 125 0074 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBUART.c **** 
 126              		.loc 1 288 0
 127 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 128 0078 02F0BF02 		and	r2, r2, #191
 129 007c 1A70     		strb	r2, [r3]
 291:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 130              		.loc 1 291 0
 131 007e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 132 0080 2B43     		orrs	r3, r3, r5
 133 0082 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 134              		.loc 1 292 0
 135 0084 FFF7FEFF 		bl	CyDelayUs
 136              	.LVL5:
 294:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 9


 137              		.loc 1 294 0
 138 0088 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 139              		.loc 1 298 0
 140 008a 284A     		ldr	r2, .L3+24
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 141              		.loc 1 297 0
 142 008c 2849     		ldr	r1, .L3+28
 294:Generated_Source\PSoC5/USBUART.c **** 
 143              		.loc 1 294 0
 144 008e 43F00403 		orr	r3, r3, #4
 145 0092 2370     		strb	r3, [r4]
 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 146              		.loc 1 312 0
 147 0094 4046     		mov	r0, r8
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 148              		.loc 1 297 0
 149 0096 0F70     		strb	r7, [r1]
 298:Generated_Source\PSoC5/USBUART.c **** 
 150              		.loc 1 298 0
 151 0098 1770     		strb	r7, [r2]
 152              		.loc 1 312 0
 153 009a FFF7FEFF 		bl	CyExitCriticalSection
 154              	.LVL6:
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 155              		.loc 1 331 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 10


 156 009e 0721     		movs	r1, #7
 157 00a0 1720     		movs	r0, #23
 158 00a2 FFF7FEFF 		bl	CyIntSetPriority
 159              	.LVL7:
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 160              		.loc 1 332 0
 161 00a6 2349     		ldr	r1, .L3+32
 162 00a8 1720     		movs	r0, #23
 163 00aa FFF7FEFF 		bl	CyIntSetVector
 164              	.LVL8:
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 165              		.loc 1 335 0
 166 00ae 0721     		movs	r1, #7
 167 00b0 1820     		movs	r0, #24
 168 00b2 FFF7FEFF 		bl	CyIntSetPriority
 169              	.LVL9:
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 170              		.loc 1 336 0
 171 00b6 2049     		ldr	r1, .L3+36
 172 00b8 1820     		movs	r0, #24
 173 00ba FFF7FEFF 		bl	CyIntSetVector
 174              	.LVL10:
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 175              		.loc 1 340 0
 176 00be 0721     		movs	r1, #7
 177 00c0 1520     		movs	r0, #21
 178 00c2 FFF7FEFF 		bl	CyIntSetPriority
 179              	.LVL11:
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 180              		.loc 1 341 0
 181 00c6 1D49     		ldr	r1, .L3+40
 182 00c8 1520     		movs	r0, #21
 183 00ca FFF7FEFF 		bl	CyIntSetVector
 184              	.LVL12:
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 185              		.loc 1 346 0
 186 00ce 3846     		mov	r0, r7
 187 00d0 0721     		movs	r1, #7
 188 00d2 FFF7FEFF 		bl	CyIntSetPriority
 189              	.LVL13:
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 190              		.loc 1 347 0
 191 00d6 3846     		mov	r0, r7
 192 00d8 1949     		ldr	r1, .L3+44
 193 00da FFF7FEFF 		bl	CyIntSetVector
 194              	.LVL14:
 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 11


 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 195              		.loc 1 352 0
 196 00de 3046     		mov	r0, r6
 197 00e0 0721     		movs	r1, #7
 198 00e2 FFF7FEFF 		bl	CyIntSetPriority
 199              	.LVL15:
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 200              		.loc 1 353 0
 201 00e6 3046     		mov	r0, r6
 202 00e8 1649     		ldr	r1, .L3+48
 203 00ea FFF7FEFF 		bl	CyIntSetVector
 204              	.LVL16:
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 205              		.loc 1 358 0
 206 00ee 2846     		mov	r0, r5
 207 00f0 0721     		movs	r1, #7
 208 00f2 FFF7FEFF 		bl	CyIntSetPriority
 209              	.LVL17:
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 210              		.loc 1 359 0
 211 00f6 2846     		mov	r0, r5
 212 00f8 1349     		ldr	r1, .L3+52
 213 00fa FFF7FEFF 		bl	CyIntSetVector
 214              	.LVL18:
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 12


 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 215              		.loc 1 401 0
 216 00fe 0721     		movs	r1, #7
 217 0100 0C20     		movs	r0, #12
 218 0102 FFF7FEFF 		bl	CyIntSetPriority
 219              	.LVL19:
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
 220              		.loc 1 409 0
 221 0106 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 222              		.cfi_restore 14
 223              		.cfi_restore 8
 224              		.cfi_restore 7
 225              		.cfi_restore 6
 226              		.cfi_restore 5
 227              		.cfi_restore 4
 228              		.cfi_def_cfa_offset 0
 229              	.LVL20:
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 230              		.loc 1 402 0
 231 010a 1049     		ldr	r1, .L3+56
 232 010c 0C20     		movs	r0, #12
 233 010e FFF7FEBF 		b	CyIntSetVector
 234              	.LVL21:
 235              	.L4:
 236 0112 00BF     		.align	2
 237              	.L3:
 238 0114 A5430040 		.word	1073759141
 239 0118 B5430040 		.word	1073759157
 240 011c 9D600040 		.word	1073766557
 241 0120 09600040 		.word	1073766409
 242 0124 12600040 		.word	1073766418
 243 0128 F8510040 		.word	1073762808
 244 012c 85600040 		.word	1073766533
 245 0130 84600040 		.word	1073766532
 246 0134 00000000 		.word	USBUART_BUS_RESET_ISR
 247 0138 00000000 		.word	USBUART_EP_0_ISR
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 13


 248 013c 00000000 		.word	USBUART_SOF_ISR
 249 0140 00000000 		.word	USBUART_EP_1_ISR
 250 0144 00000000 		.word	USBUART_EP_2_ISR
 251 0148 00000000 		.word	USBUART_EP_3_ISR
 252 014c 00000000 		.word	USBUART_DP_ISR
 253              		.cfi_endproc
 254              	.LFE1:
 255              		.size	USBUART_Init, .-USBUART_Init
 256              		.section	.text.USBUART_Start,"ax",%progbits
 257              		.align	2
 258              		.global	USBUART_Start
 259              		.thumb
 260              		.thumb_func
 261              		.type	USBUART_Start, %function
 262              	USBUART_Start:
 263              	.LFB0:
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 264              		.loc 1 187 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              	.LVL22:
 269 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 270              		.cfi_def_cfa_offset 24
 271              		.cfi_offset 4, -24
 272              		.cfi_offset 5, -20
 273              		.cfi_offset 6, -16
 274              		.cfi_offset 7, -12
 275              		.cfi_offset 8, -8
 276              		.cfi_offset 14, -4
 188:Generated_Source\PSoC5/USBUART.c ****     {
 277              		.loc 1 188 0
 278 0004 234C     		ldr	r4, .L16
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 279              		.loc 1 187 0
 280 0006 8046     		mov	r8, r0
 188:Generated_Source\PSoC5/USBUART.c ****     {
 281              		.loc 1 188 0
 282 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 283              		.loc 1 187 0
 284 000a 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBUART.c ****     {
 285              		.loc 1 188 0
 286 000c 1BB9     		cbnz	r3, .L6
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 287              		.loc 1 190 0
 288 000e FFF7FEFF 		bl	USBUART_Init
 289              	.LVL23:
 191:Generated_Source\PSoC5/USBUART.c ****     }
 290              		.loc 1 191 0
 291 0012 0123     		movs	r3, #1
 292 0014 2370     		strb	r3, [r4]
 293              	.L6:
 294              	.LVL24:
 295              	.LBB11:
 296              	.LBB12:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 14


 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 15


 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 297              		.loc 1 471 0
 298 0016 204B     		ldr	r3, .L16+4
 299 0018 0124     		movs	r4, #1
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 300              		.loc 1 476 0
 301 001a 204E     		ldr	r6, .L16+8
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 302              		.loc 1 479 0
 303 001c 2048     		ldr	r0, .L16+12
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 304              		.loc 1 480 0
 305 001e 2149     		ldr	r1, .L16+16
 471:Generated_Source\PSoC5/USBUART.c ****     }
 306              		.loc 1 471 0
 307 0020 1C70     		strb	r4, [r3]
 308              	.LVL25:
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 309              		.loc 1 481 0
 310 0022 214A     		ldr	r2, .L16+20
 471:Generated_Source\PSoC5/USBUART.c ****     }
 311              		.loc 1 471 0
 312 0024 5C70     		strb	r4, [r3, #1]
 313              	.LVL26:
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 314              		.loc 1 479 0
 315 0026 0023     		movs	r3, #0
 476:Generated_Source\PSoC5/USBUART.c **** 
 316              		.loc 1 476 0
 317 0028 86F80080 		strb	r8, [r6]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 318              		.loc 1 482 0
 319 002c 1F4F     		ldr	r7, .L16+24
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 320              		.loc 1 479 0
 321 002e 0370     		strb	r3, [r0]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 322              		.loc 1 483 0
 323 0030 1F4E     		ldr	r6, .L16+28
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 324              		.loc 1 480 0
 325 0032 0B70     		strb	r3, [r1]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 326              		.loc 1 484 0
 327 0034 1F48     		ldr	r0, .L16+32
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 328              		.loc 1 485 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 16


 329 0036 2049     		ldr	r1, .L16+36
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 330              		.loc 1 481 0
 331 0038 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 332              		.loc 1 493 0
 333 003a 204A     		ldr	r2, .L16+40
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 334              		.loc 1 482 0
 335 003c 3B70     		strb	r3, [r7]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 336              		.loc 1 483 0
 337 003e 3370     		strb	r3, [r6]
 338              		.loc 1 493 0
 339 0040 4FF40007 		mov	r7, #8388608
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 340              		.loc 1 484 0
 341 0044 0370     		strb	r3, [r0]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 342              		.loc 1 494 0
 343 0046 4FF08076 		mov	r6, #16777216
 485:Generated_Source\PSoC5/USBUART.c **** 
 344              		.loc 1 485 0
 345 004a 0B70     		strb	r3, [r1]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 346              		.loc 1 497 0
 347 004c 4FF40010 		mov	r0, #2097152
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 348              		.loc 1 505 0
 349 0050 0221     		movs	r1, #2
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 350              		.loc 1 509 0
 351 0052 0423     		movs	r3, #4
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 352              		.loc 1 493 0
 353 0054 1760     		str	r7, [r2]
 494:Generated_Source\PSoC5/USBUART.c **** 
 354              		.loc 1 494 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 17


 355 0056 1660     		str	r6, [r2]
 497:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 356              		.loc 1 497 0
 357 0058 1060     		str	r0, [r2]
 501:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 358              		.loc 1 501 0
 359 005a 1460     		str	r4, [r2]
 505:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 360              		.loc 1 505 0
 361 005c 1160     		str	r1, [r2]
 362              		.loc 1 509 0
 363 005e 1360     		str	r3, [r2]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 18


 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 364              		.loc 1 573 0
 365 0060 95B1     		cbz	r5, .L15
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 366              		.loc 1 591 0
 367 0062 174A     		ldr	r2, .L16+44
 368 0064 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 369 0066 43F00103 		orr	r3, r3, #1
 370 006a 1370     		strb	r3, [r2]
 371              	.L10:
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 19


 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 372              		.loc 1 630 0
 373 006c 154B     		ldr	r3, .L16+48
 627:Generated_Source\PSoC5/USBUART.c **** 
 374              		.loc 1 627 0
 375 006e 1649     		ldr	r1, .L16+52
 376              		.loc 1 630 0
 377 0070 8022     		movs	r2, #128
 627:Generated_Source\PSoC5/USBUART.c **** 
 378              		.loc 1 627 0
 379 0072 0320     		movs	r0, #3
 380 0074 0870     		strb	r0, [r1]
 381              		.loc 1 630 0
 382 0076 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 383              		.loc 1 631 0
 384 0078 0120     		movs	r0, #1
 385 007a FFF7FEFF 		bl	CyDelayCycles
 386              	.LVL27:
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 387              		.loc 1 635 0
 388 007e 134B     		ldr	r3, .L16+56
 389 0080 0422     		movs	r2, #4
 390 0082 1A70     		strb	r2, [r3]
 391              	.LVL28:
 392 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 393              	.LVL29:
 394              	.L15:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 20


 577:Generated_Source\PSoC5/USBUART.c ****         break;
 395              		.loc 1 577 0
 396 0088 0D4A     		ldr	r2, .L16+44
 397 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 398 008c 03F0FE03 		and	r3, r3, #254
 399 0090 1370     		strb	r3, [r2]
 400 0092 EBE7     		b	.L10
 401              	.L17:
 402              		.align	2
 403              	.L16:
 404 0094 00000000 		.word	.LANCHOR0
 405 0098 00000000 		.word	USBUART_hidProtocol
 406 009c 00000000 		.word	USBUART_device
 407 00a0 00000000 		.word	USBUART_transferState
 408 00a4 00000000 		.word	USBUART_configurationChanged
 409 00a8 00000000 		.word	USBUART_configuration
 410 00ac 00000000 		.word	USBUART_interfaceNumber
 411 00b0 00000000 		.word	USBUART_deviceAddress
 412 00b4 00000000 		.word	USBUART_deviceStatus
 413 00b8 00000000 		.word	USBUART_lastPacketSize
 414 00bc 00E100E0 		.word	-536813312
 415 00c0 09600040 		.word	1073766409
 416 00c4 08600040 		.word	1073766408
 417 00c8 28600040 		.word	1073766440
 418 00cc 12600040 		.word	1073766418
 419              	.LBE12:
 420              	.LBE11:
 421              		.cfi_endproc
 422              	.LFE0:
 423              		.size	USBUART_Start, .-USBUART_Start
 424              		.section	.text.USBUART_InitComponent,"ax",%progbits
 425              		.align	2
 426              		.global	USBUART_InitComponent
 427              		.thumb
 428              		.thumb_func
 429              		.type	USBUART_InitComponent, %function
 430              	USBUART_InitComponent:
 431              	.LFB2:
 461:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 432              		.loc 1 461 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              	.LVL30:
 437 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 438              		.cfi_def_cfa_offset 24
 439              		.cfi_offset 3, -24
 440              		.cfi_offset 4, -20
 441              		.cfi_offset 5, -16
 442              		.cfi_offset 6, -12
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 471:Generated_Source\PSoC5/USBUART.c ****     }
 445              		.loc 1 471 0
 446 0002 1F4B     		ldr	r3, .L27
 447 0004 0124     		movs	r4, #1
 476:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 21


 448              		.loc 1 476 0
 449 0006 1F4E     		ldr	r6, .L27+4
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 450              		.loc 1 479 0
 451 0008 1F4D     		ldr	r5, .L27+8
 471:Generated_Source\PSoC5/USBUART.c ****     }
 452              		.loc 1 471 0
 453 000a 1C70     		strb	r4, [r3]
 454              	.LVL31:
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 455              		.loc 1 481 0
 456 000c 1F4A     		ldr	r2, .L27+12
 471:Generated_Source\PSoC5/USBUART.c ****     }
 457              		.loc 1 471 0
 458 000e 5C70     		strb	r4, [r3, #1]
 459              	.LVL32:
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 460              		.loc 1 480 0
 461 0010 DFF8A0E0 		ldr	lr, .L27+52
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 462              		.loc 1 479 0
 463 0014 0023     		movs	r3, #0
 476:Generated_Source\PSoC5/USBUART.c **** 
 464              		.loc 1 476 0
 465 0016 3070     		strb	r0, [r6]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 466              		.loc 1 482 0
 467 0018 1D4F     		ldr	r7, .L27+16
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 468              		.loc 1 479 0
 469 001a 2B70     		strb	r3, [r5]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 470              		.loc 1 483 0
 471 001c 1D4E     		ldr	r6, .L27+20
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 472              		.loc 1 484 0
 473 001e 1E4D     		ldr	r5, .L27+24
 485:Generated_Source\PSoC5/USBUART.c **** 
 474              		.loc 1 485 0
 475 0020 1E48     		ldr	r0, .L27+28
 476              	.LVL33:
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 477              		.loc 1 480 0
 478 0022 8EF80030 		strb	r3, [lr]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 479              		.loc 1 481 0
 480 0026 1370     		strb	r3, [r2]
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 481              		.loc 1 493 0
 482 0028 1D4A     		ldr	r2, .L27+32
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 483              		.loc 1 482 0
 484 002a 3B70     		strb	r3, [r7]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 485              		.loc 1 483 0
 486 002c 3370     		strb	r3, [r6]
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 22


 487              		.loc 1 493 0
 488 002e 4FF40007 		mov	r7, #8388608
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 489              		.loc 1 484 0
 490 0032 2B70     		strb	r3, [r5]
 494:Generated_Source\PSoC5/USBUART.c **** 
 491              		.loc 1 494 0
 492 0034 4FF08076 		mov	r6, #16777216
 485:Generated_Source\PSoC5/USBUART.c **** 
 493              		.loc 1 485 0
 494 0038 0370     		strb	r3, [r0]
 497:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 495              		.loc 1 497 0
 496 003a 4FF40015 		mov	r5, #2097152
 505:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 497              		.loc 1 505 0
 498 003e 0220     		movs	r0, #2
 509:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 499              		.loc 1 509 0
 500 0040 0423     		movs	r3, #4
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 501              		.loc 1 493 0
 502 0042 1760     		str	r7, [r2]
 494:Generated_Source\PSoC5/USBUART.c **** 
 503              		.loc 1 494 0
 504 0044 1660     		str	r6, [r2]
 497:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 505              		.loc 1 497 0
 506 0046 1560     		str	r5, [r2]
 501:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 507              		.loc 1 501 0
 508 0048 1460     		str	r4, [r2]
 505:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 509              		.loc 1 505 0
 510 004a 1060     		str	r0, [r2]
 509:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511              		.loc 1 509 0
 512 004c 1360     		str	r3, [r2]
 573:Generated_Source\PSoC5/USBUART.c ****     {
 513              		.loc 1 573 0
 514 004e 89B1     		cbz	r1, .L26
 591:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 515              		.loc 1 591 0
 516 0050 144A     		ldr	r2, .L27+36
 517 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 518 0054 43F00103 		orr	r3, r3, #1
 519 0058 1370     		strb	r3, [r2]
 520              	.L22:
 630:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 521              		.loc 1 630 0
 522 005a 134B     		ldr	r3, .L27+40
 627:Generated_Source\PSoC5/USBUART.c **** 
 523              		.loc 1 627 0
 524 005c 1349     		ldr	r1, .L27+44
 525              	.LVL34:
 630:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 526              		.loc 1 630 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 23


 527 005e 8022     		movs	r2, #128
 627:Generated_Source\PSoC5/USBUART.c **** 
 528              		.loc 1 627 0
 529 0060 0320     		movs	r0, #3
 530 0062 0870     		strb	r0, [r1]
 630:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 531              		.loc 1 630 0
 532 0064 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 533              		.loc 1 631 0
 534 0066 0120     		movs	r0, #1
 535 0068 FFF7FEFF 		bl	CyDelayCycles
 536              	.LVL35:
 537              		.loc 1 635 0
 538 006c 104B     		ldr	r3, .L27+48
 539 006e 0422     		movs	r2, #4
 540 0070 1A70     		strb	r2, [r3]
 541 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 542              	.LVL36:
 543              	.L26:
 577:Generated_Source\PSoC5/USBUART.c ****         break;
 544              		.loc 1 577 0
 545 0074 0B4A     		ldr	r2, .L27+36
 546 0076 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 547 0078 03F0FE03 		and	r3, r3, #254
 548 007c 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c **** 
 549              		.loc 1 578 0
 550 007e ECE7     		b	.L22
 551              	.L28:
 552              		.align	2
 553              	.L27:
 554 0080 00000000 		.word	USBUART_hidProtocol
 555 0084 00000000 		.word	USBUART_device
 556 0088 00000000 		.word	USBUART_transferState
 557 008c 00000000 		.word	USBUART_configuration
 558 0090 00000000 		.word	USBUART_interfaceNumber
 559 0094 00000000 		.word	USBUART_deviceAddress
 560 0098 00000000 		.word	USBUART_deviceStatus
 561 009c 00000000 		.word	USBUART_lastPacketSize
 562 00a0 00E100E0 		.word	-536813312
 563 00a4 09600040 		.word	1073766409
 564 00a8 08600040 		.word	1073766408
 565 00ac 28600040 		.word	1073766440
 566 00b0 12600040 		.word	1073766418
 567 00b4 00000000 		.word	USBUART_configurationChanged
 568              		.cfi_endproc
 569              	.LFE2:
 570              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 571              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 572              		.align	2
 573              		.global	USBUART_ReInitComponent
 574              		.thumb
 575              		.thumb_func
 576              		.type	USBUART_ReInitComponent, %function
 577              	USBUART_ReInitComponent:
 578              	.LFB3:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 24


 636:Generated_Source\PSoC5/USBUART.c **** }
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 579              		.loc 1 672 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              	.LVL37:
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 584              		.loc 1 681 0
 585 0000 0E4B     		ldr	r3, .L31
 672:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 586              		.loc 1 672 0
 587 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 588              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 25


 589              		.cfi_offset 4, -20
 590              		.cfi_offset 5, -16
 591              		.cfi_offset 6, -12
 592              		.cfi_offset 7, -8
 593              		.cfi_offset 14, -4
 594              		.loc 1 681 0
 595 0004 0122     		movs	r2, #1
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 596              		.loc 1 686 0
 597 0006 0E48     		ldr	r0, .L31+4
 681:Generated_Source\PSoC5/USBUART.c ****     }
 598              		.loc 1 681 0
 599 0008 1A70     		strb	r2, [r3]
 600              	.LVL38:
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 601              		.loc 1 688 0
 602 000a 0E4C     		ldr	r4, .L31+8
 681:Generated_Source\PSoC5/USBUART.c ****     }
 603              		.loc 1 681 0
 604 000c 5A70     		strb	r2, [r3, #1]
 605              	.LVL39:
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 606              		.loc 1 689 0
 607 000e 0E49     		ldr	r1, .L31+12
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 608              		.loc 1 686 0
 609 0010 0023     		movs	r3, #0
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 610              		.loc 1 687 0
 611 0012 DFF84CE0 		ldr	lr, .L31+36
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 612              		.loc 1 686 0
 613 0016 0370     		strb	r3, [r0]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 614              		.loc 1 690 0
 615 0018 0C4F     		ldr	r7, .L31+16
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 616              		.loc 1 691 0
 617 001a 0D4E     		ldr	r6, .L31+20
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 618              		.loc 1 692 0
 619 001c 0D4D     		ldr	r5, .L31+24
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 620              		.loc 1 699 0
 621 001e 0E48     		ldr	r0, .L31+28
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 26


 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 622              		.loc 1 703 0
 623 0020 0E4A     		ldr	r2, .L31+32
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 624              		.loc 1 687 0
 625 0022 8EF80030 		strb	r3, [lr]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 626              		.loc 1 688 0
 627 0026 2370     		strb	r3, [r4]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 628              		.loc 1 689 0
 629 0028 0B70     		strb	r3, [r1]
 699:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 630              		.loc 1 699 0
 631 002a 0324     		movs	r4, #3
 632              		.loc 1 703 0
 633 002c 8021     		movs	r1, #128
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 634              		.loc 1 690 0
 635 002e 3B70     		strb	r3, [r7]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 636              		.loc 1 691 0
 637 0030 3370     		strb	r3, [r6]
 692:Generated_Source\PSoC5/USBUART.c **** 
 638              		.loc 1 692 0
 639 0032 2B70     		strb	r3, [r5]
 699:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 640              		.loc 1 699 0
 641 0034 0470     		strb	r4, [r0]
 642              		.loc 1 703 0
 643 0036 1170     		strb	r1, [r2]
 644 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 645              	.L32:
 646 003a 00BF     		.align	2
 647              	.L31:
 648 003c 00000000 		.word	USBUART_hidProtocol
 649 0040 00000000 		.word	USBUART_transferState
 650 0044 00000000 		.word	USBUART_configuration
 651 0048 00000000 		.word	USBUART_interfaceNumber
 652 004c 00000000 		.word	USBUART_deviceAddress
 653 0050 00000000 		.word	USBUART_deviceStatus
 654 0054 00000000 		.word	USBUART_lastPacketSize
 655 0058 28600040 		.word	1073766440
 656 005c 08600040 		.word	1073766408
 657 0060 00000000 		.word	USBUART_configurationChanged
 658              		.cfi_endproc
 659              	.LFE3:
 660              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 661              		.section	.text.USBUART_Stop,"ax",%progbits
 662              		.align	2
 663              		.global	USBUART_Stop
 664              		.thumb
 665              		.thumb_func
 666              		.type	USBUART_Stop, %function
 667              	USBUART_Stop:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 27


 668              	.LFB4:
 704:Generated_Source\PSoC5/USBUART.c **** }
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 669              		.loc 1 730 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 674              		.cfi_def_cfa_offset 24
 675              		.cfi_offset 3, -24
 676              		.cfi_offset 4, -20
 677              		.cfi_offset 5, -16
 678              		.cfi_offset 6, -12
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 681              		.loc 1 738 0
 682 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 683              	.LVL40:
 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 684              		.loc 1 741 0
 685 0006 2249     		ldr	r1, .L35
 742:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 28


 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 686              		.loc 1 744 0
 687 0008 224A     		ldr	r2, .L35+4
 741:Generated_Source\PSoC5/USBUART.c **** 
 688              		.loc 1 741 0
 689 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 690              		.loc 1 751 0
 691 000c 224C     		ldr	r4, .L35+8
 741:Generated_Source\PSoC5/USBUART.c **** 
 692              		.loc 1 741 0
 693 000e 03F07F03 		and	r3, r3, #127
 694 0012 0B70     		strb	r3, [r1]
 744:Generated_Source\PSoC5/USBUART.c **** 
 695              		.loc 1 744 0
 696 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 697              		.loc 1 752 0
 698 0016 A1F5E251 		sub	r1, r1, #7232
 744:Generated_Source\PSoC5/USBUART.c **** 
 699              		.loc 1 744 0
 700 001a 03F0FB03 		and	r3, r3, #251
 701 001e 1370     		strb	r3, [r2]
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 702              		.loc 1 751 0
 703 0020 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 704              		.loc 1 752 0
 705 0022 1339     		subs	r1, r1, #19
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 706              		.loc 1 751 0
 707 0024 02F0FE02 		and	r2, r2, #254
 708 0028 2270     		strb	r2, [r4]
 709              		.loc 1 752 0
 710 002a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 711              		.loc 1 756 0
 712 002c 1B4B     		ldr	r3, .L35+12
 752:Generated_Source\PSoC5/USBUART.c **** 
 713              		.loc 1 752 0
 714 002e 02F0FE02 		and	r2, r2, #254
 715 0032 0A70     		strb	r2, [r1]
 716              		.loc 1 756 0
 717 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 29


 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 762:Generated_Source\PSoC5/USBUART.c **** 
 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 718              		.loc 1 770 0
 719 0036 4FF40006 		mov	r6, #8388608
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 720              		.loc 1 756 0
 721 003a 42F08002 		orr	r2, r2, #128
 722 003e 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 723              		.loc 1 757 0
 724 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 725              		.loc 1 771 0
 726 0042 4FF08075 		mov	r5, #16777216
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 727              		.loc 1 757 0
 728 0046 42F04002 		orr	r2, r2, #64
 729 004a 1A70     		strb	r2, [r3]
 761:Generated_Source\PSoC5/USBUART.c **** 
 730              		.loc 1 761 0
 731 004c FFF7FEFF 		bl	CyExitCriticalSection
 732              	.LVL41:
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 733              		.loc 1 770 0
 734 0050 134B     		ldr	r3, .L35+16
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 735              		.loc 1 782 0
 736 0052 0221     		movs	r1, #2
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 737              		.loc 1 786 0
 738 0054 0422     		movs	r2, #4
 774:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 739              		.loc 1 774 0
 740 0056 4FF40014 		mov	r4, #2097152
 778:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 741              		.loc 1 778 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 30


 742 005a 0120     		movs	r0, #1
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 743              		.loc 1 770 0
 744 005c 1E60     		str	r6, [r3]
 771:Generated_Source\PSoC5/USBUART.c **** 
 745              		.loc 1 771 0
 746 005e 1D60     		str	r5, [r3]
 774:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 747              		.loc 1 774 0
 748 0060 1C60     		str	r4, [r3]
 778:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 749              		.loc 1 778 0
 750 0062 1860     		str	r0, [r3]
 782:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 751              		.loc 1 782 0
 752 0064 1960     		str	r1, [r3]
 753              		.loc 1 786 0
 754 0066 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 755              		.loc 1 811 0
 756 0068 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 757              	.LVL42:
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 758              		.loc 1 812 0
 759 006c 0D4B     		ldr	r3, .L35+20
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 760              		.loc 1 818 0
 761 006e 0E4E     		ldr	r6, .L35+24
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 31


 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 762              		.loc 1 819 0
 763 0070 0E4C     		ldr	r4, .L35+28
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 764              		.loc 1 820 0
 765 0072 0F48     		ldr	r0, .L35+32
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 766              		.loc 1 821 0
 767 0074 0F49     		ldr	r1, .L35+36
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 768              		.loc 1 822 0
 769 0076 104A     		ldr	r2, .L35+40
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 770              		.loc 1 825 0
 771 0078 104D     		ldr	r5, .L35+44
 812:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 772              		.loc 1 812 0
 773 007a 4FF48057 		mov	r7, #4096
 774 007e 1F60     		str	r7, [r3]
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 775              		.loc 1 818 0
 776 0080 0023     		movs	r3, #0
 777 0082 3370     		strb	r3, [r6]
 778              		.loc 1 825 0
 779 0084 2B70     		strb	r3, [r5]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 780              		.loc 1 819 0
 781 0086 2370     		strb	r3, [r4]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 782              		.loc 1 820 0
 783 0088 0370     		strb	r3, [r0]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 784              		.loc 1 821 0
 785 008a 0B70     		strb	r3, [r1]
 822:Generated_Source\PSoC5/USBUART.c **** 
 786              		.loc 1 822 0
 787 008c 1370     		strb	r3, [r2]
 788 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 789              	.L36:
 790              		.align	2
 791              	.L35:
 792 0090 08600040 		.word	1073766408
 793 0094 12600040 		.word	1073766418
 794 0098 A5430040 		.word	1073759141
 795 009c F8510040 		.word	1073762808
 796 00a0 80E100E0 		.word	-536813184
 797 00a4 80E200E0 		.word	-536812928
 798 00a8 00000000 		.word	USBUART_configurationChanged
 799 00ac 00000000 		.word	USBUART_configuration
 800 00b0 00000000 		.word	USBUART_interfaceNumber
 801 00b4 00000000 		.word	USBUART_deviceAddress
 802 00b8 00000000 		.word	USBUART_deviceStatus
 803 00bc 00000000 		.word	.LANCHOR0
 804              		.cfi_endproc
 805              	.LFE4:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 32


 806              		.size	USBUART_Stop, .-USBUART_Stop
 807              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 808              		.align	2
 809              		.global	USBUART_CheckActivity
 810              		.thumb
 811              		.thumb_func
 812              		.type	USBUART_CheckActivity, %function
 813              	USBUART_CheckActivity:
 814              	.LFB5:
 826:Generated_Source\PSoC5/USBUART.c **** }
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 815              		.loc 1 850 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 820              		.loc 1 851 0
 821 0000 044B     		ldr	r3, .L38
 822 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 823 0004 C0B2     		uxtb	r0, r0
 824              	.LVL43:
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 825              		.loc 1 854 0
 826 0006 00F0FB02 		and	r2, r0, #251
 827 000a 1A70     		strb	r2, [r3]
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 858:Generated_Source\PSoC5/USBUART.c **** }
 828              		.loc 1 858 0
 829 000c C0F38000 		ubfx	r0, r0, #2, #1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 33


 830              	.LVL44:
 831 0010 7047     		bx	lr
 832              	.L39:
 833 0012 00BF     		.align	2
 834              	.L38:
 835 0014 09600040 		.word	1073766409
 836              		.cfi_endproc
 837              	.LFE5:
 838              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 839              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 840              		.align	2
 841              		.global	USBUART_GetConfiguration
 842              		.thumb
 843              		.thumb_func
 844              		.type	USBUART_GetConfiguration, %function
 845              	USBUART_GetConfiguration:
 846              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 847              		.loc 1 873 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 852              		.loc 1 874 0
 853 0000 014B     		ldr	r3, .L41
 854 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBUART.c **** }
 855              		.loc 1 875 0
 856 0004 7047     		bx	lr
 857              	.L42:
 858 0006 00BF     		.align	2
 859              	.L41:
 860 0008 00000000 		.word	USBUART_configuration
 861              		.cfi_endproc
 862              	.LFE6:
 863              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 864              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 865              		.align	2
 866              		.global	USBUART_IsConfigurationChanged
 867              		.thumb
 868              		.thumb_func
 869              		.type	USBUART_IsConfigurationChanged, %function
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 34


 870              	USBUART_IsConfigurationChanged:
 871              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 872              		.loc 1 899 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              		@ link register save eliminated.
 877              	.LVL45:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 878              		.loc 1 902 0
 879 0000 044B     		ldr	r3, .L46
 880 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 881 0004 02F0FF00 		and	r0, r2, #255
 882 0008 1AB1     		cbz	r2, .L44
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 883              		.loc 1 904 0
 884 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 885              		.loc 1 905 0
 886 000c 0022     		movs	r2, #0
 904:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 887              		.loc 1 904 0
 888 000e C0B2     		uxtb	r0, r0
 889              	.LVL46:
 890              		.loc 1 905 0
 891 0010 1A70     		strb	r2, [r3]
 892              	.LVL47:
 893              	.L44:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 35


 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 909:Generated_Source\PSoC5/USBUART.c **** }
 894              		.loc 1 909 0
 895 0012 7047     		bx	lr
 896              	.L47:
 897              		.align	2
 898              	.L46:
 899 0014 00000000 		.word	USBUART_configurationChanged
 900              		.cfi_endproc
 901              	.LFE7:
 902              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 903              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 904              		.align	2
 905              		.global	USBUART_GetInterfaceSetting
 906              		.thumb
 907              		.thumb_func
 908              		.type	USBUART_GetInterfaceSetting, %function
 909              	USBUART_GetInterfaceSetting:
 910              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
 911              		.loc 1 929 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 916              	.LVL48:
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 917              		.loc 1 930 0
 918 0000 014B     		ldr	r3, .L49
 919 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 920              	.LVL49:
 931:Generated_Source\PSoC5/USBUART.c **** }
 921              		.loc 1 931 0
 922 0004 7047     		bx	lr
 923              	.L50:
 924 0006 00BF     		.align	2
 925              	.L49:
 926 0008 00000000 		.word	USBUART_interfaceSetting
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 36


 927              		.cfi_endproc
 928              	.LFE8:
 929              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 930              		.section	.text.USBUART_GetEPState,"ax",%progbits
 931              		.align	2
 932              		.global	USBUART_GetEPState
 933              		.thumb
 934              		.thumb_func
 935              		.type	USBUART_GetEPState, %function
 936              	USBUART_GetEPState:
 937              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART.c **** {
 938              		.loc 1 960 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943              	.LVL50:
 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 944              		.loc 1 961 0
 945 0000 034B     		ldr	r3, .L52
 946 0002 00EB4000 		add	r0, r0, r0, lsl #1
 947              	.LVL51:
 948 0006 03EB8003 		add	r3, r3, r0, lsl #2
 949 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBUART.c **** }
 950              		.loc 1 962 0
 951 000c 7047     		bx	lr
 952              	.L53:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 37


 953 000e 00BF     		.align	2
 954              	.L52:
 955 0010 00000000 		.word	USBUART_EP
 956              		.cfi_endproc
 957              	.LFE9:
 958              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 959              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 960              		.align	2
 961              		.global	USBUART_GetEPCount
 962              		.thumb
 963              		.thumb_func
 964              		.type	USBUART_GetEPCount, %function
 965              	USBUART_GetEPCount:
 966              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 967              		.loc 1 983 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              		@ link register save eliminated.
 972              	.LVL52:
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 973              		.loc 1 986 0
 974 0000 431E     		subs	r3, r0, #1
 975 0002 072B     		cmp	r3, #7
 976 0004 0CD8     		bhi	.L56
 977              	.LVL53:
 978 0006 074B     		ldr	r3, .L57
 979 0008 0001     		lsls	r0, r0, #4
 980              	.LVL54:
 981 000a 1A46     		mov	r2, r3
 982 000c 0344     		add	r3, r3, r0
 983              	.LBB15:
 984              	.LBB16:
 987:Generated_Source\PSoC5/USBUART.c ****     {
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 38


 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 985              		.loc 1 989 0
 986 000e 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 987              	.LVL55:
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 988              		.loc 1 990 0
 989 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 990 0012 00F00F00 		and	r0, r0, #15
 991              	.LVL56:
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 992              		.loc 1 991 0
 993 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 994              	.LVL57:
 995 001a 0238     		subs	r0, r0, #2
 996 001c 80B2     		uxth	r0, r0
 997              	.LVL58:
 998 001e 7047     		bx	lr
 999              	.LVL59:
 1000              	.L56:
 1001              	.LBE16:
 1002              	.LBE15:
 984:Generated_Source\PSoC5/USBUART.c **** 
 1003              		.loc 1 984 0
 1004 0020 0020     		movs	r0, #0
 1005              	.LVL60:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBUART.c **** }
 1006              		.loc 1 995 0
 1007 0022 7047     		bx	lr
 1008              	.L58:
 1009              		.align	2
 1010              	.L57:
 1011 0024 FC5F0040 		.word	1073766396
 1012              		.cfi_endproc
 1013              	.LFE10:
 1014              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 1015              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 1016              		.align	2
 1017              		.global	USBUART_LoadInEP
 1018              		.thumb
 1019              		.thumb_func
 1020              		.type	USBUART_LoadInEP, %function
 1021              	USBUART_LoadInEP:
 1022              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 39


1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 40


1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 41


1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 42


1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 43


1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 44


1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 1023              		.loc 1 1344 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 45


 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              	.LVL61:
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1028              		.loc 1 1345 0
 1029 0000 431E     		subs	r3, r0, #1
 1030 0002 072B     		cmp	r3, #7
 1031 0004 35D8     		bhi	.L70
1344:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1032              		.loc 1 1344 0
 1033 0006 F0B5     		push	{r4, r5, r6, r7, lr}
 1034              		.cfi_def_cfa_offset 20
 1035              		.cfi_offset 4, -20
 1036              		.cfi_offset 5, -16
 1037              		.cfi_offset 6, -12
 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1040              		.loc 1 1349 0
 1041 0008 4500     		lsls	r5, r0, #1
 1042 000a 1A4E     		ldr	r6, .L72
 1043 000c 2C18     		adds	r4, r5, r0
 1044 000e 06EB8404 		add	r4, r6, r4, lsl #2
 1045 0012 E388     		ldrh	r3, [r4, #6]
 1046 0014 9BB2     		uxth	r3, r3
 1047 0016 C3F50073 		rsb	r3, r3, #512
 1048 001a 9A42     		cmp	r2, r3
 1049 001c 24D8     		bhi	.L71
 1050              	.L61:
 1051 001e 164F     		ldr	r7, .L72+4
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 1052              		.loc 1 1356 0
 1053 0020 2B18     		adds	r3, r5, r0
 1054 0022 3C46     		mov	r4, r7
 1055 0024 06EB8303 		add	r3, r6, r3, lsl #2
 1056 0028 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1057 002a 4FEA001E 		lsl	lr, r0, #4
 1058 002e 43EA1223 		orr	r3, r3, r2, lsr #8
 1059 0032 0EF80430 		strb	r3, [lr, r4]
 1060 0036 7744     		add	r7, r7, lr
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1061              		.loc 1 1357 0
 1062 0038 D3B2     		uxtb	r3, r2
 1063 003a 7B70     		strb	r3, [r7, #1]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 1064              		.loc 1 1360 0
 1065 003c 59B1     		cbz	r1, .L63
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 46


 1066              	.LVL62:
 1067              	.LBB17:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1068              		.loc 1 1364 0 discriminator 1
 1069 003e 52B1     		cbz	r2, .L63
 1070 0040 531E     		subs	r3, r2, #1
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1071              		.loc 1 1366 0
 1072 0042 0E4C     		ldr	r4, .L72+8
 1073 0044 9BB2     		uxth	r3, r3
 1074 0046 0B44     		add	r3, r3, r1
 1075 0048 7444     		add	r4, r4, lr
 1076 004a 0139     		subs	r1, r1, #1
 1077              	.LVL63:
 1078              	.L64:
 1079              		.loc 1 1366 0 is_stmt 0 discriminator 3
 1080 004c 11F8012F 		ldrb	r2, [r1, #1]!	@ zero_extendqisi2
 1081              	.LVL64:
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1082              		.loc 1 1364 0 is_stmt 1 discriminator 3
 1083 0050 9942     		cmp	r1, r3
 1084              		.loc 1 1366 0 discriminator 3
 1085 0052 2272     		strb	r2, [r4, #8]
 1086              	.LVL65:
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1087              		.loc 1 1364 0 discriminator 3
 1088 0054 FAD1     		bne	.L64
 1089              	.LVL66:
 1090              	.L63:
 1091              	.LBE17:
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1092              		.loc 1 1371 0
 1093 0056 2844     		add	r0, r0, r5
 1094              	.LVL67:
 1095 0058 06EB8006 		add	r6, r6, r0, lsl #2
 1096 005c 0023     		movs	r3, #0
 1097 005e 7370     		strb	r3, [r6, #1]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1098              		.loc 1 1374 0
 1099 0060 7379     		ldrb	r3, [r6, #5]	@ zero_extendqisi2
 1100 0062 DBB2     		uxtb	r3, r3
 1101 0064 BB70     		strb	r3, [r7, #2]
 1102 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 1103              	.LVL68:
 1104              	.L71:
1351:Generated_Source\PSoC5/USBUART.c ****         }
 1105              		.loc 1 1351 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 47


 1106 0068 E288     		ldrh	r2, [r4, #6]
 1107              	.LVL69:
 1108 006a C2F50072 		rsb	r2, r2, #512
 1109 006e 92B2     		uxth	r2, r2
 1110              	.LVL70:
 1111 0070 D5E7     		b	.L61
 1112              	.L70:
 1113              		.cfi_def_cfa_offset 0
 1114              		.cfi_restore 4
 1115              		.cfi_restore 5
 1116              		.cfi_restore 6
 1117              		.cfi_restore 7
 1118              		.cfi_restore 14
 1119 0072 7047     		bx	lr
 1120              	.L73:
 1121              		.align	2
 1122              	.L72:
 1123 0074 00000000 		.word	USBUART_EP
 1124 0078 FC5F0040 		.word	1073766396
 1125 007c 70600040 		.word	1073766512
 1126              		.cfi_endproc
 1127              	.LFE11:
 1128              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1129              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1130              		.align	2
 1131              		.global	USBUART_ReadOutEP
 1132              		.thumb
 1133              		.thumb_func
 1134              		.type	USBUART_ReadOutEP, %function
 1135              	USBUART_ReadOutEP:
 1136              	.LFB12:
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 48


1401:Generated_Source\PSoC5/USBUART.c **** 
1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 49


1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 50


1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 51


1572:Generated_Source\PSoC5/USBUART.c **** 
1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 52


1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
 1137              		.loc 1 1655 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 1142              	.LVL71:
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1143              		.loc 1 1656 0
 1144 0000 69B3     		cbz	r1, .L80
 1145              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1146 0002 431E     		subs	r3, r0, #1
 1147 0004 072B     		cmp	r3, #7
 1148 0006 27D8     		bhi	.L81
 1149              	.LVL72:
1655:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1150              		.loc 1 1655 0 is_stmt 1
 1151 0008 F0B4     		push	{r4, r5, r6, r7}
 1152              		.cfi_def_cfa_offset 16
 1153              		.cfi_offset 4, -16
 1154              		.cfi_offset 5, -12
 1155              		.cfi_offset 6, -8
 1156              		.cfi_offset 7, -4
 1157 000a 1B4D     		ldr	r5, .L86
 1158 000c 0701     		lsls	r7, r0, #4
 1159 000e 2E46     		mov	r6, r5
 1160              	.LBB29:
 1161              	.LBB30:
 1162              	.LBB31:
 1163              	.LBB32:
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 53


 1164              		.loc 1 989 0
 1165 0010 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 1166              	.LVL73:
 1167 0012 3E44     		add	r6, r6, r7
 990:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 1168              		.loc 1 990 0
 1169 0014 7478     		ldrb	r4, [r6, #1]	@ zero_extendqisi2
 1170 0016 03F00F03 		and	r3, r3, #15
 1171              	.LBE32:
 1172              	.LBE31:
 1173              	.LBE30:
 1174              	.LBE29:
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1175              		.loc 1 1660 0
 1176 001a 44EA0323 		orr	r3, r4, r3, lsl #8
 1177 001e 023B     		subs	r3, r3, #2
 1178 0020 9BB2     		uxth	r3, r3
 1179 0022 9A42     		cmp	r2, r3
 1180 0024 1ED8     		bhi	.L85
 1181              	.LVL74:
 1182              	.L76:
 1183              	.LBB33:
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1184              		.loc 1 1667 0 discriminator 4
 1185 0026 52B1     		cbz	r2, .L79
 1186 0028 541E     		subs	r4, r2, #1
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1187              		.loc 1 1669 0
 1188 002a 144D     		ldr	r5, .L86+4
 1189 002c A4B2     		uxth	r4, r4
 1190 002e 0C44     		add	r4, r4, r1
 1191 0030 3D44     		add	r5, r5, r7
 1192 0032 0139     		subs	r1, r1, #1
 1193              	.LVL75:
 1194              	.L78:
 1195              		.loc 1 1669 0 is_stmt 0 discriminator 3
 1196 0034 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 1197 0036 01F8013F 		strb	r3, [r1, #1]!
 1198              	.LVL76:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1199              		.loc 1 1667 0 is_stmt 1 discriminator 3
 1200 003a A142     		cmp	r1, r4
 1201 003c FAD1     		bne	.L78
 1202              	.LVL77:
 1203              	.L79:
 1204              	.LBE33:
 1205              	.LBB34:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 54


 1206              	.LBB35:
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 55


1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 56


1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
1824:Generated_Source\PSoC5/USBUART.c **** }
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 57


1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 58


1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 59


1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 60


2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 61


2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 62


2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 63


2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 64


2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1207              		.loc 1 2280 0
 1208 003e 104B     		ldr	r3, .L86+8
 1209 0040 00EB4000 		add	r0, r0, r0, lsl #1
 1210              	.LVL78:
 1211 0044 03EB8000 		add	r0, r3, r0, lsl #2
 1212 0048 0023     		movs	r3, #0
 1213 004a 4370     		strb	r3, [r0, #1]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1214              		.loc 1 2283 0
 1215 004c 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 1216              	.LBE35:
 1217              	.LBE34:
1824:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 65


 1218              		.loc 1 1824 0
 1219 004e 1046     		mov	r0, r2
 1220              	.LBB37:
 1221              	.LBB36:
 1222              		.loc 1 2283 0
 1223 0050 DBB2     		uxtb	r3, r3
 1224 0052 B370     		strb	r3, [r6, #2]
 1225              	.LBE36:
 1226              	.LBE37:
1824:Generated_Source\PSoC5/USBUART.c **** 
 1227              		.loc 1 1824 0
 1228 0054 F0BC     		pop	{r4, r5, r6, r7}
 1229              		.cfi_restore 7
 1230              		.cfi_restore 6
 1231              		.cfi_restore 5
 1232              		.cfi_restore 4
 1233              		.cfi_def_cfa_offset 0
 1234 0056 7047     		bx	lr
 1235              	.LVL79:
 1236              	.L81:
1820:Generated_Source\PSoC5/USBUART.c ****     }
 1237              		.loc 1 1820 0
 1238 0058 0022     		movs	r2, #0
 1239              	.LVL80:
1824:Generated_Source\PSoC5/USBUART.c **** 
 1240              		.loc 1 1824 0
 1241 005a 1046     		mov	r0, r2
 1242              	.LVL81:
 1243 005c 7047     		bx	lr
 1244              	.LVL82:
 1245              	.L80:
1820:Generated_Source\PSoC5/USBUART.c ****     }
 1246              		.loc 1 1820 0
 1247 005e 0A46     		mov	r2, r1
 1248              	.LVL83:
1824:Generated_Source\PSoC5/USBUART.c **** 
 1249              		.loc 1 1824 0
 1250 0060 1046     		mov	r0, r2
 1251              	.LVL84:
 1252 0062 7047     		bx	lr
 1253              	.LVL85:
 1254              	.L85:
 1255              		.cfi_def_cfa_offset 16
 1256              		.cfi_offset 4, -16
 1257              		.cfi_offset 5, -12
 1258              		.cfi_offset 6, -8
 1259              		.cfi_offset 7, -4
 1260              	.LBB38:
 1261              	.LBB39:
 1262              	.LBB40:
 1263              	.LBB41:
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 1264              		.loc 1 989 0
 1265 0064 7A5D     		ldrb	r2, [r7, r5]	@ zero_extendqisi2
 1266              	.LVL86:
 990:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 1267              		.loc 1 990 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 66


 1268 0066 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1269 0068 02F00F02 		and	r2, r2, #15
 1270              	.LVL87:
 991:Generated_Source\PSoC5/USBUART.c ****     }
 1271              		.loc 1 991 0
 1272 006c 43EA0222 		orr	r2, r3, r2, lsl #8
 1273              	.LVL88:
 1274 0070 023A     		subs	r2, r2, #2
 1275 0072 92B2     		uxth	r2, r2
 1276              	.LVL89:
 1277 0074 D7E7     		b	.L76
 1278              	.L87:
 1279 0076 00BF     		.align	2
 1280              	.L86:
 1281 0078 FC5F0040 		.word	1073766396
 1282 007c 70600040 		.word	1073766512
 1283 0080 00000000 		.word	USBUART_EP
 1284              	.LBE41:
 1285              	.LBE40:
 1286              	.LBE39:
 1287              	.LBE38:
 1288              		.cfi_endproc
 1289              	.LFE12:
 1290              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1291              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1292              		.align	2
 1293              		.global	USBUART_EnableOutEP
 1294              		.thumb
 1295              		.thumb_func
 1296              		.type	USBUART_EnableOutEP, %function
 1297              	USBUART_EnableOutEP:
 1298              	.LFB13:
2277:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1299              		.loc 1 2277 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              		@ link register save eliminated.
 1304              	.LVL90:
2278:Generated_Source\PSoC5/USBUART.c ****     {
 1305              		.loc 1 2278 0
 1306 0000 431E     		subs	r3, r0, #1
 1307 0002 072B     		cmp	r3, #7
 1308 0004 0CD8     		bhi	.L88
2280:Generated_Source\PSoC5/USBUART.c **** 
 1309              		.loc 1 2280 0
 1310 0006 074B     		ldr	r3, .L90
 1311 0008 00EB4002 		add	r2, r0, r0, lsl #1
 1312 000c 03EB8203 		add	r3, r3, r2, lsl #2
 1313 0010 0022     		movs	r2, #0
 1314 0012 5A70     		strb	r2, [r3, #1]
 1315              		.loc 1 2283 0
 1316 0014 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1317 0016 044B     		ldr	r3, .L90+4
 1318 0018 0001     		lsls	r0, r0, #4
 1319              	.LVL91:
 1320 001a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 67


 1321 001c 0344     		add	r3, r3, r0
 1322 001e 9A70     		strb	r2, [r3, #2]
 1323              	.L88:
 1324 0020 7047     		bx	lr
 1325              	.L91:
 1326 0022 00BF     		.align	2
 1327              	.L90:
 1328 0024 00000000 		.word	USBUART_EP
 1329 0028 FC5F0040 		.word	1073766396
 1330              		.cfi_endproc
 1331              	.LFE13:
 1332              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1333              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1334              		.align	2
 1335              		.global	USBUART_DisableOutEP
 1336              		.thumb
 1337              		.thumb_func
 1338              		.type	USBUART_DisableOutEP, %function
 1339              	USBUART_DisableOutEP:
 1340              	.LFB14:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1341              		.loc 1 2301 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              		@ link register save eliminated.
 1346              	.LVL92:
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1347              		.loc 1 2302 0
 1348 0000 431E     		subs	r3, r0, #1
 1349 0002 072B     		cmp	r3, #7
 1350 0004 04D8     		bhi	.L92
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1351              		.loc 1 2305 0
 1352 0006 034B     		ldr	r3, .L94
 1353 0008 0001     		lsls	r0, r0, #4
 1354              	.LVL93:
 1355 000a 0344     		add	r3, r3, r0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 68


 1356 000c 0822     		movs	r2, #8
 1357 000e 9A70     		strb	r2, [r3, #2]
 1358              	.L92:
 1359 0010 7047     		bx	lr
 1360              	.L95:
 1361 0012 00BF     		.align	2
 1362              	.L94:
 1363 0014 FC5F0040 		.word	1073766396
 1364              		.cfi_endproc
 1365              	.LFE14:
 1366              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1367              		.section	.text.USBUART_Force,"ax",%progbits
 1368              		.align	2
 1369              		.global	USBUART_Force
 1370              		.thumb
 1371              		.thumb_func
 1372              		.type	USBUART_Force, %function
 1373              	USBUART_Force:
 1374              	.LFB15:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1375              		.loc 1 2331 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380              	.LVL94:
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1381              		.loc 1 2335 0
 1382 0000 014B     		ldr	r3, .L97
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 69


 1383 0002 1870     		strb	r0, [r3]
 1384 0004 7047     		bx	lr
 1385              	.L98:
 1386 0006 00BF     		.align	2
 1387              	.L97:
 1388 0008 10600040 		.word	1073766416
 1389              		.cfi_endproc
 1390              	.LFE15:
 1391              		.size	USBUART_Force, .-USBUART_Force
 1392              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1393              		.align	2
 1394              		.global	USBUART_GetEPAckState
 1395              		.thumb
 1396              		.thumb_func
 1397              		.type	USBUART_GetEPAckState, %function
 1398              	USBUART_GetEPAckState:
 1399              	.LFB16:
2336:Generated_Source\PSoC5/USBUART.c **** }
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1400              		.loc 1 2356 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 1405              	.LVL95:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1406              		.loc 1 2359 0
 1407 0000 431E     		subs	r3, r0, #1
 1408 0002 072B     		cmp	r3, #7
 1409 0004 07D8     		bhi	.L101
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1410              		.loc 1 2361 0
 1411 0006 054B     		ldr	r3, .L102
 1412 0008 0001     		lsls	r0, r0, #4
 1413              	.LVL96:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 70


 1414 000a 0344     		add	r3, r3, r0
 1415 000c 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 1416 000e 00F01000 		and	r0, r0, #16
 1417 0012 C0B2     		uxtb	r0, r0
 1418              	.LVL97:
 1419 0014 7047     		bx	lr
 1420              	.LVL98:
 1421              	.L101:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1422              		.loc 1 2357 0
 1423 0016 0020     		movs	r0, #0
 1424              	.LVL99:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBUART.c **** }
 1425              		.loc 1 2365 0
 1426 0018 7047     		bx	lr
 1427              	.L103:
 1428 001a 00BF     		.align	2
 1429              	.L102:
 1430 001c FC5F0040 		.word	1073766396
 1431              		.cfi_endproc
 1432              	.LFE16:
 1433              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1434              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1435              		.align	2
 1436              		.global	USBUART_SetPowerStatus
 1437              		.thumb
 1438              		.thumb_func
 1439              		.type	USBUART_SetPowerStatus, %function
 1440              	USBUART_SetPowerStatus:
 1441              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 71


2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1442              		.loc 1 2397 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 1446              		@ link register save eliminated.
 1447              	.LVL100:
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1448              		.loc 1 2400 0
 1449 0000 054A     		ldr	r2, .L108
 1450 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1451              		.loc 1 2398 0
 1452 0004 18B9     		cbnz	r0, .L107
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
 1453              		.loc 1 2404 0
 1454 0006 03F0FE03 		and	r3, r3, #254
 1455 000a 1370     		strb	r3, [r2]
 1456 000c 7047     		bx	lr
 1457              	.L107:
2400:Generated_Source\PSoC5/USBUART.c ****     }
 1458              		.loc 1 2400 0
 1459 000e 43F00103 		orr	r3, r3, #1
 1460 0012 1370     		strb	r3, [r2]
 1461 0014 7047     		bx	lr
 1462              	.L109:
 1463 0016 00BF     		.align	2
 1464              	.L108:
 1465 0018 00000000 		.word	USBUART_deviceStatus
 1466              		.cfi_endproc
 1467              	.LFE17:
 1468              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1469              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1470              		.align	2
 1471              		.global	USBUART_RWUEnabled
 1472              		.thumb
 1473              		.thumb_func
 1474              		.type	USBUART_RWUEnabled, %function
 1475              	USBUART_RWUEnabled:
 1476              	.LFB18:
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 72


2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1477              		.loc 1 2454 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
 1481              		@ link register save eliminated.
 1482              	.LVL101:
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1483              		.loc 1 2457 0
 1484 0000 024B     		ldr	r3, .L111
 1485 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 73


 1486              	.LVL102:
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
2463:Generated_Source\PSoC5/USBUART.c **** }
 1487              		.loc 1 2463 0
 1488 0004 C0F34000 		ubfx	r0, r0, #1, #1
 1489              	.LVL103:
 1490 0008 7047     		bx	lr
 1491              	.L112:
 1492 000a 00BF     		.align	2
 1493              	.L111:
 1494 000c 00000000 		.word	USBUART_deviceStatus
 1495              		.cfi_endproc
 1496              	.LFE18:
 1497              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1498              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1499              		.align	2
 1500              		.global	USBUART_GetDeviceAddress
 1501              		.thumb
 1502              		.thumb_func
 1503              		.type	USBUART_GetDeviceAddress, %function
 1504              	USBUART_GetDeviceAddress:
 1505              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
 1506              		.loc 1 2478 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1511              		.loc 1 2479 0
 1512 0000 024B     		ldr	r3, .L114
 1513 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBUART.c **** }
 1514              		.loc 1 2480 0
 1515 0004 00F07F00 		and	r0, r0, #127
 1516 0008 7047     		bx	lr
 1517              	.L115:
 1518 000a 00BF     		.align	2
 1519              	.L114:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 74


 1520 000c 08600040 		.word	1073766408
 1521              		.cfi_endproc
 1522              	.LFE19:
 1523              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1524              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1525              		.align	2
 1526              		.global	USBUART_EnableSofInt
 1527              		.thumb
 1528              		.thumb_func
 1529              		.type	USBUART_EnableSofInt, %function
 1530              	USBUART_EnableSofInt:
 1531              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1532              		.loc 1 2492 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1537              		.loc 1 2499 0
 1538 0000 024B     		ldr	r3, .L117
 1539 0002 4FF40012 		mov	r2, #2097152
 1540 0006 1A60     		str	r2, [r3]
 1541 0008 7047     		bx	lr
 1542              	.L118:
 1543 000a 00BF     		.align	2
 1544              	.L117:
 1545 000c 00E100E0 		.word	-536813312
 1546              		.cfi_endproc
 1547              	.LFE20:
 1548              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1549              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1550              		.align	2
 1551              		.global	USBUART_DisableSofInt
 1552              		.thumb
 1553              		.thumb_func
 1554              		.type	USBUART_DisableSofInt, %function
 1555              	USBUART_DisableSofInt:
 1556              	.LFB21:
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 75


2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1557              		.loc 1 2514 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1562              		.loc 1 2521 0
 1563 0000 024B     		ldr	r3, .L120
 1564 0002 4FF40012 		mov	r2, #2097152
 1565 0006 1A60     		str	r2, [r3]
 1566 0008 7047     		bx	lr
 1567              	.L121:
 1568 000a 00BF     		.align	2
 1569              	.L120:
 1570 000c 80E100E0 		.word	-536813184
 1571              		.cfi_endproc
 1572              	.LFE21:
 1573              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1574              		.global	USBUART_initVar
 1575              		.bss
 1576              		.set	.LANCHOR0,. + 0
 1577              		.type	USBUART_initVar, %object
 1578              		.size	USBUART_initVar, 1
 1579              	USBUART_initVar:
 1580 0000 00       		.space	1
 1581              		.text
 1582              	.Letext0:
 1583              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1584              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1585              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1586              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1587              		.file 6 "Generated_Source\\PSoC5\\USBUART_Dp.h"
 1588              		.section	.debug_info,"",%progbits
 1589              	.Ldebug_info0:
 1590 0000 E90A0000 		.4byte	0xae9
 1591 0004 0400     		.2byte	0x4
 1592 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 76


 1593 000a 04       		.byte	0x4
 1594 000b 01       		.uleb128 0x1
 1595 000c 81020000 		.4byte	.LASF99
 1596 0010 0C       		.byte	0xc
 1597 0011 3A020000 		.4byte	.LASF100
 1598 0015 60040000 		.4byte	.LASF101
 1599 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1600 001d 00000000 		.4byte	0
 1601 0021 00000000 		.4byte	.Ldebug_line0
 1602 0025 02       		.uleb128 0x2
 1603 0026 01       		.byte	0x1
 1604 0027 06       		.byte	0x6
 1605 0028 70030000 		.4byte	.LASF0
 1606 002c 02       		.uleb128 0x2
 1607 002d 01       		.byte	0x1
 1608 002e 08       		.byte	0x8
 1609 002f 50030000 		.4byte	.LASF1
 1610 0033 02       		.uleb128 0x2
 1611 0034 02       		.byte	0x2
 1612 0035 05       		.byte	0x5
 1613 0036 8C000000 		.4byte	.LASF2
 1614 003a 02       		.uleb128 0x2
 1615 003b 02       		.byte	0x2
 1616 003c 07       		.byte	0x7
 1617 003d 03040000 		.4byte	.LASF3
 1618 0041 02       		.uleb128 0x2
 1619 0042 04       		.byte	0x4
 1620 0043 05       		.byte	0x5
 1621 0044 3B040000 		.4byte	.LASF4
 1622 0048 02       		.uleb128 0x2
 1623 0049 04       		.byte	0x4
 1624 004a 07       		.byte	0x7
 1625 004b 06050000 		.4byte	.LASF5
 1626 004f 02       		.uleb128 0x2
 1627 0050 08       		.byte	0x8
 1628 0051 05       		.byte	0x5
 1629 0052 03020000 		.4byte	.LASF6
 1630 0056 02       		.uleb128 0x2
 1631 0057 08       		.byte	0x8
 1632 0058 07       		.byte	0x7
 1633 0059 94030000 		.4byte	.LASF7
 1634 005d 03       		.uleb128 0x3
 1635 005e 04       		.byte	0x4
 1636 005f 05       		.byte	0x5
 1637 0060 696E7400 		.ascii	"int\000"
 1638 0064 02       		.uleb128 0x2
 1639 0065 04       		.byte	0x4
 1640 0066 07       		.byte	0x7
 1641 0067 C1030000 		.4byte	.LASF8
 1642 006b 04       		.uleb128 0x4
 1643 006c B6040000 		.4byte	.LASF9
 1644 0070 02       		.byte	0x2
 1645 0071 9201     		.2byte	0x192
 1646 0073 2C000000 		.4byte	0x2c
 1647 0077 04       		.uleb128 0x4
 1648 0078 46010000 		.4byte	.LASF10
 1649 007c 02       		.byte	0x2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 77


 1650 007d 9301     		.2byte	0x193
 1651 007f 3A000000 		.4byte	0x3a
 1652 0083 04       		.uleb128 0x4
 1653 0084 FA040000 		.4byte	.LASF11
 1654 0088 02       		.byte	0x2
 1655 0089 9401     		.2byte	0x194
 1656 008b 48000000 		.4byte	0x48
 1657 008f 02       		.uleb128 0x2
 1658 0090 04       		.byte	0x4
 1659 0091 04       		.byte	0x4
 1660 0092 BA010000 		.4byte	.LASF12
 1661 0096 02       		.uleb128 0x2
 1662 0097 08       		.byte	0x8
 1663 0098 04       		.byte	0x4
 1664 0099 18050000 		.4byte	.LASF13
 1665 009d 02       		.uleb128 0x2
 1666 009e 01       		.byte	0x1
 1667 009f 08       		.byte	0x8
 1668 00a0 36040000 		.4byte	.LASF14
 1669 00a4 04       		.uleb128 0x4
 1670 00a5 01050000 		.4byte	.LASF15
 1671 00a9 02       		.byte	0x2
 1672 00aa 3C02     		.2byte	0x23c
 1673 00ac B0000000 		.4byte	0xb0
 1674 00b0 05       		.uleb128 0x5
 1675 00b1 6B000000 		.4byte	0x6b
 1676 00b5 04       		.uleb128 0x4
 1677 00b6 E6030000 		.4byte	.LASF16
 1678 00ba 02       		.byte	0x2
 1679 00bb 3E02     		.2byte	0x23e
 1680 00bd C1000000 		.4byte	0xc1
 1681 00c1 05       		.uleb128 0x5
 1682 00c2 83000000 		.4byte	0x83
 1683 00c6 02       		.uleb128 0x2
 1684 00c7 08       		.byte	0x8
 1685 00c8 04       		.byte	0x4
 1686 00c9 CF000000 		.4byte	.LASF17
 1687 00cd 02       		.uleb128 0x2
 1688 00ce 04       		.byte	0x4
 1689 00cf 07       		.byte	0x7
 1690 00d0 96000000 		.4byte	.LASF18
 1691 00d4 06       		.uleb128 0x6
 1692 00d5 0C       		.byte	0xc
 1693 00d6 03       		.byte	0x3
 1694 00d7 91       		.byte	0x91
 1695 00d8 49010000 		.4byte	0x149
 1696 00dc 07       		.uleb128 0x7
 1697 00dd 1E040000 		.4byte	.LASF19
 1698 00e1 03       		.byte	0x3
 1699 00e2 93       		.byte	0x93
 1700 00e3 6B000000 		.4byte	0x6b
 1701 00e7 00       		.byte	0
 1702 00e8 07       		.uleb128 0x7
 1703 00e9 54050000 		.4byte	.LASF20
 1704 00ed 03       		.byte	0x3
 1705 00ee 94       		.byte	0x94
 1706 00ef 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 78


 1707 00f3 01       		.byte	0x1
 1708 00f4 07       		.uleb128 0x7
 1709 00f5 DC040000 		.4byte	.LASF21
 1710 00f9 03       		.byte	0x3
 1711 00fa 95       		.byte	0x95
 1712 00fb 6B000000 		.4byte	0x6b
 1713 00ff 02       		.byte	0x2
 1714 0100 07       		.uleb128 0x7
 1715 0101 00000000 		.4byte	.LASF22
 1716 0105 03       		.byte	0x3
 1717 0106 96       		.byte	0x96
 1718 0107 6B000000 		.4byte	0x6b
 1719 010b 03       		.byte	0x3
 1720 010c 07       		.uleb128 0x7
 1721 010d AA040000 		.4byte	.LASF23
 1722 0111 03       		.byte	0x3
 1723 0112 97       		.byte	0x97
 1724 0113 6B000000 		.4byte	0x6b
 1725 0117 04       		.byte	0x4
 1726 0118 07       		.uleb128 0x7
 1727 0119 B6000000 		.4byte	.LASF24
 1728 011d 03       		.byte	0x3
 1729 011e 98       		.byte	0x98
 1730 011f 6B000000 		.4byte	0x6b
 1731 0123 05       		.byte	0x5
 1732 0124 07       		.uleb128 0x7
 1733 0125 3B030000 		.4byte	.LASF25
 1734 0129 03       		.byte	0x3
 1735 012a 99       		.byte	0x99
 1736 012b 77000000 		.4byte	0x77
 1737 012f 06       		.byte	0x6
 1738 0130 07       		.uleb128 0x7
 1739 0131 79050000 		.4byte	.LASF26
 1740 0135 03       		.byte	0x3
 1741 0136 9A       		.byte	0x9a
 1742 0137 77000000 		.4byte	0x77
 1743 013b 08       		.byte	0x8
 1744 013c 07       		.uleb128 0x7
 1745 013d 37060000 		.4byte	.LASF27
 1746 0141 03       		.byte	0x3
 1747 0142 9B       		.byte	0x9b
 1748 0143 6B000000 		.4byte	0x6b
 1749 0147 0A       		.byte	0xa
 1750 0148 00       		.byte	0
 1751 0149 08       		.uleb128 0x8
 1752 014a 9A050000 		.4byte	.LASF28
 1753 014e 03       		.byte	0x3
 1754 014f 9C       		.byte	0x9c
 1755 0150 D4000000 		.4byte	0xd4
 1756 0154 06       		.uleb128 0x6
 1757 0155 10       		.byte	0x10
 1758 0156 03       		.byte	0x3
 1759 0157 D8       		.byte	0xd8
 1760 0158 8D010000 		.4byte	0x18d
 1761 015c 07       		.uleb128 0x7
 1762 015d AF040000 		.4byte	.LASF29
 1763 0161 03       		.byte	0x3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 79


 1764 0162 DA       		.byte	0xda
 1765 0163 6B000000 		.4byte	0x6b
 1766 0167 00       		.byte	0
 1767 0168 07       		.uleb128 0x7
 1768 0169 D5040000 		.4byte	.LASF30
 1769 016d 03       		.byte	0x3
 1770 016e DB       		.byte	0xdb
 1771 016f 6B000000 		.4byte	0x6b
 1772 0173 01       		.byte	0x1
 1773 0174 07       		.uleb128 0x7
 1774 0175 2E020000 		.4byte	.LASF31
 1775 0179 03       		.byte	0x3
 1776 017a DC       		.byte	0xdc
 1777 017b 6B000000 		.4byte	0x6b
 1778 017f 02       		.byte	0x2
 1779 0180 09       		.uleb128 0x9
 1780 0181 67617000 		.ascii	"gap\000"
 1781 0185 03       		.byte	0x3
 1782 0186 DD       		.byte	0xdd
 1783 0187 8D010000 		.4byte	0x18d
 1784 018b 03       		.byte	0x3
 1785 018c 00       		.byte	0
 1786 018d 0A       		.uleb128 0xa
 1787 018e 6B000000 		.4byte	0x6b
 1788 0192 9D010000 		.4byte	0x19d
 1789 0196 0B       		.uleb128 0xb
 1790 0197 CD000000 		.4byte	0xcd
 1791 019b 0C       		.byte	0xc
 1792 019c 00       		.byte	0
 1793 019d 08       		.uleb128 0x8
 1794 019e 69010000 		.4byte	.LASF32
 1795 01a2 03       		.byte	0x3
 1796 01a3 DE       		.byte	0xde
 1797 01a4 54010000 		.4byte	0x154
 1798 01a8 06       		.uleb128 0x6
 1799 01a9 10       		.byte	0x10
 1800 01aa 03       		.byte	0x3
 1801 01ab EA       		.byte	0xea
 1802 01ac 29020000 		.4byte	0x229
 1803 01b0 07       		.uleb128 0x7
 1804 01b1 34020000 		.4byte	.LASF33
 1805 01b5 03       		.byte	0x3
 1806 01b6 EC       		.byte	0xec
 1807 01b7 6B000000 		.4byte	0x6b
 1808 01bb 00       		.byte	0
 1809 01bc 07       		.uleb128 0x7
 1810 01bd 84000000 		.4byte	.LASF34
 1811 01c1 03       		.byte	0x3
 1812 01c2 ED       		.byte	0xed
 1813 01c3 6B000000 		.4byte	0x6b
 1814 01c7 01       		.byte	0x1
 1815 01c8 07       		.uleb128 0x7
 1816 01c9 5E030000 		.4byte	.LASF35
 1817 01cd 03       		.byte	0x3
 1818 01ce EE       		.byte	0xee
 1819 01cf 6B000000 		.4byte	0x6b
 1820 01d3 02       		.byte	0x2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 80


 1821 01d4 07       		.uleb128 0x7
 1822 01d5 2E060000 		.4byte	.LASF36
 1823 01d9 03       		.byte	0x3
 1824 01da EF       		.byte	0xef
 1825 01db 6B000000 		.4byte	0x6b
 1826 01df 03       		.byte	0x3
 1827 01e0 07       		.uleb128 0x7
 1828 01e1 D3030000 		.4byte	.LASF37
 1829 01e5 03       		.byte	0x3
 1830 01e6 F0       		.byte	0xf0
 1831 01e7 6B000000 		.4byte	0x6b
 1832 01eb 04       		.byte	0x4
 1833 01ec 07       		.uleb128 0x7
 1834 01ed 18060000 		.4byte	.LASF38
 1835 01f1 03       		.byte	0x3
 1836 01f2 F1       		.byte	0xf1
 1837 01f3 6B000000 		.4byte	0x6b
 1838 01f7 05       		.byte	0x5
 1839 01f8 07       		.uleb128 0x7
 1840 01f9 4D010000 		.4byte	.LASF39
 1841 01fd 03       		.byte	0x3
 1842 01fe F2       		.byte	0xf2
 1843 01ff 6B000000 		.4byte	0x6b
 1844 0203 06       		.byte	0x6
 1845 0204 07       		.uleb128 0x7
 1846 0205 16040000 		.4byte	.LASF40
 1847 0209 03       		.byte	0x3
 1848 020a F3       		.byte	0xf3
 1849 020b 6B000000 		.4byte	0x6b
 1850 020f 07       		.byte	0x7
 1851 0210 07       		.uleb128 0x7
 1852 0211 CE030000 		.4byte	.LASF41
 1853 0215 03       		.byte	0x3
 1854 0216 F4       		.byte	0xf4
 1855 0217 6B000000 		.4byte	0x6b
 1856 021b 08       		.byte	0x8
 1857 021c 09       		.uleb128 0x9
 1858 021d 67617000 		.ascii	"gap\000"
 1859 0221 03       		.byte	0x3
 1860 0222 F5       		.byte	0xf5
 1861 0223 29020000 		.4byte	0x229
 1862 0227 09       		.byte	0x9
 1863 0228 00       		.byte	0
 1864 0229 0A       		.uleb128 0xa
 1865 022a 6B000000 		.4byte	0x6b
 1866 022e 39020000 		.4byte	0x239
 1867 0232 0B       		.uleb128 0xb
 1868 0233 CD000000 		.4byte	0xcd
 1869 0237 06       		.byte	0x6
 1870 0238 00       		.byte	0
 1871 0239 08       		.uleb128 0x8
 1872 023a AB030000 		.4byte	.LASF42
 1873 023e 03       		.byte	0x3
 1874 023f F6       		.byte	0xf6
 1875 0240 A8010000 		.4byte	0x1a8
 1876 0244 0C       		.uleb128 0xc
 1877 0245 90       		.byte	0x90
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 81


 1878 0246 03       		.byte	0x3
 1879 0247 1201     		.2byte	0x112
 1880 0249 5B020000 		.4byte	0x25b
 1881 024d 0D       		.uleb128 0xd
 1882 024e 90010000 		.4byte	.LASF43
 1883 0252 03       		.byte	0x3
 1884 0253 1401     		.2byte	0x114
 1885 0255 5B020000 		.4byte	0x25b
 1886 0259 00       		.byte	0
 1887 025a 00       		.byte	0
 1888 025b 0A       		.uleb128 0xa
 1889 025c 9D010000 		.4byte	0x19d
 1890 0260 6B020000 		.4byte	0x26b
 1891 0264 0B       		.uleb128 0xb
 1892 0265 CD000000 		.4byte	0xcd
 1893 0269 08       		.byte	0x8
 1894 026a 00       		.byte	0
 1895 026b 04       		.uleb128 0x4
 1896 026c F3000000 		.4byte	.LASF44
 1897 0270 03       		.byte	0x3
 1898 0271 1501     		.2byte	0x115
 1899 0273 44020000 		.4byte	0x244
 1900 0277 0C       		.uleb128 0xc
 1901 0278 90       		.byte	0x90
 1902 0279 03       		.byte	0x3
 1903 027a 1801     		.2byte	0x118
 1904 027c 8E020000 		.4byte	0x28e
 1905 0280 0D       		.uleb128 0xd
 1906 0281 BD000000 		.4byte	.LASF45
 1907 0285 03       		.byte	0x3
 1908 0286 1A01     		.2byte	0x11a
 1909 0288 8E020000 		.4byte	0x28e
 1910 028c 00       		.byte	0
 1911 028d 00       		.byte	0
 1912 028e 0A       		.uleb128 0xa
 1913 028f 39020000 		.4byte	0x239
 1914 0293 9E020000 		.4byte	0x29e
 1915 0297 0B       		.uleb128 0xb
 1916 0298 CD000000 		.4byte	0xcd
 1917 029c 08       		.byte	0x8
 1918 029d 00       		.byte	0
 1919 029e 04       		.uleb128 0x4
 1920 029f 9F000000 		.4byte	.LASF46
 1921 02a3 03       		.byte	0x3
 1922 02a4 1B01     		.2byte	0x11b
 1923 02a6 77020000 		.4byte	0x277
 1924 02aa 0E       		.uleb128 0xe
 1925 02ab D6050000 		.4byte	.LASF102
 1926 02af 01       		.byte	0x1
 1927 02b0 D603     		.2byte	0x3d6
 1928 02b2 77000000 		.4byte	0x77
 1929 02b6 01       		.byte	0x1
 1930 02b7 D4020000 		.4byte	0x2d4
 1931 02bb 0F       		.uleb128 0xf
 1932 02bc 57040000 		.4byte	.LASF47
 1933 02c0 01       		.byte	0x1
 1934 02c1 D603     		.2byte	0x3d6
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 82


 1935 02c3 6B000000 		.4byte	0x6b
 1936 02c7 10       		.uleb128 0x10
 1937 02c8 19000000 		.4byte	.LASF52
 1938 02cc 01       		.byte	0x1
 1939 02cd D803     		.2byte	0x3d8
 1940 02cf 77000000 		.4byte	0x77
 1941 02d3 00       		.byte	0
 1942 02d4 11       		.uleb128 0x11
 1943 02d5 D9010000 		.4byte	.LASF48
 1944 02d9 01       		.byte	0x1
 1945 02da E408     		.2byte	0x8e4
 1946 02dc 01       		.byte	0x1
 1947 02dd EE020000 		.4byte	0x2ee
 1948 02e1 0F       		.uleb128 0xf
 1949 02e2 57040000 		.4byte	.LASF47
 1950 02e6 01       		.byte	0x1
 1951 02e7 E408     		.2byte	0x8e4
 1952 02e9 6B000000 		.4byte	0x6b
 1953 02ed 00       		.byte	0
 1954 02ee 12       		.uleb128 0x12
 1955 02ef 63030000 		.4byte	.LASF53
 1956 02f3 01       		.byte	0x1
 1957 02f4 D3       		.byte	0xd3
 1958 02f5 00000000 		.4byte	.LFB1
 1959 02f9 50010000 		.4byte	.LFE1-.LFB1
 1960 02fd 01       		.uleb128 0x1
 1961 02fe 9C       		.byte	0x9c
 1962 02ff AE040000 		.4byte	0x4ae
 1963 0303 13       		.uleb128 0x13
 1964 0304 48060000 		.4byte	.LASF56
 1965 0308 01       		.byte	0x1
 1966 0309 FA       		.byte	0xfa
 1967 030a 6B000000 		.4byte	0x6b
 1968 030e 00000000 		.4byte	.LLST0
 1969 0312 14       		.uleb128 0x14
 1970 0313 08000000 		.4byte	.LVL0
 1971 0317 9F0A0000 		.4byte	0xa9f
 1972 031b 15       		.uleb128 0x15
 1973 031c 44000000 		.4byte	.LVL2
 1974 0320 AA0A0000 		.4byte	0xaaa
 1975 0324 2E030000 		.4byte	0x32e
 1976 0328 16       		.uleb128 0x16
 1977 0329 01       		.uleb128 0x1
 1978 032a 50       		.byte	0x50
 1979 032b 01       		.uleb128 0x1
 1980 032c 30       		.byte	0x30
 1981 032d 00       		.byte	0
 1982 032e 15       		.uleb128 0x15
 1983 032f 64000000 		.4byte	.LVL3
 1984 0333 AA0A0000 		.4byte	0xaaa
 1985 0337 42030000 		.4byte	0x342
 1986 033b 16       		.uleb128 0x16
 1987 033c 01       		.uleb128 0x1
 1988 033d 50       		.byte	0x50
 1989 033e 02       		.uleb128 0x2
 1990 033f 76       		.byte	0x76
 1991 0340 00       		.sleb128 0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 83


 1992 0341 00       		.byte	0
 1993 0342 15       		.uleb128 0x15
 1994 0343 6A000000 		.4byte	.LVL4
 1995 0347 AA0A0000 		.4byte	0xaaa
 1996 034b 56030000 		.4byte	0x356
 1997 034f 16       		.uleb128 0x16
 1998 0350 01       		.uleb128 0x1
 1999 0351 50       		.byte	0x50
 2000 0352 02       		.uleb128 0x2
 2001 0353 08       		.byte	0x8
 2002 0354 28       		.byte	0x28
 2003 0355 00       		.byte	0
 2004 0356 15       		.uleb128 0x15
 2005 0357 88000000 		.4byte	.LVL5
 2006 035b AA0A0000 		.4byte	0xaaa
 2007 035f 6A030000 		.4byte	0x36a
 2008 0363 16       		.uleb128 0x16
 2009 0364 01       		.uleb128 0x1
 2010 0365 50       		.byte	0x50
 2011 0366 02       		.uleb128 0x2
 2012 0367 75       		.byte	0x75
 2013 0368 00       		.sleb128 0
 2014 0369 00       		.byte	0
 2015 036a 15       		.uleb128 0x15
 2016 036b 9E000000 		.4byte	.LVL6
 2017 036f B50A0000 		.4byte	0xab5
 2018 0373 7E030000 		.4byte	0x37e
 2019 0377 16       		.uleb128 0x16
 2020 0378 01       		.uleb128 0x1
 2021 0379 50       		.byte	0x50
 2022 037a 02       		.uleb128 0x2
 2023 037b 78       		.byte	0x78
 2024 037c 00       		.sleb128 0
 2025 037d 00       		.byte	0
 2026 037e 15       		.uleb128 0x15
 2027 037f A6000000 		.4byte	.LVL7
 2028 0383 C00A0000 		.4byte	0xac0
 2029 0387 96030000 		.4byte	0x396
 2030 038b 16       		.uleb128 0x16
 2031 038c 01       		.uleb128 0x1
 2032 038d 50       		.byte	0x50
 2033 038e 01       		.uleb128 0x1
 2034 038f 47       		.byte	0x47
 2035 0390 16       		.uleb128 0x16
 2036 0391 01       		.uleb128 0x1
 2037 0392 51       		.byte	0x51
 2038 0393 01       		.uleb128 0x1
 2039 0394 37       		.byte	0x37
 2040 0395 00       		.byte	0
 2041 0396 15       		.uleb128 0x15
 2042 0397 AE000000 		.4byte	.LVL8
 2043 039b CB0A0000 		.4byte	0xacb
 2044 039f A9030000 		.4byte	0x3a9
 2045 03a3 16       		.uleb128 0x16
 2046 03a4 01       		.uleb128 0x1
 2047 03a5 50       		.byte	0x50
 2048 03a6 01       		.uleb128 0x1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 84


 2049 03a7 47       		.byte	0x47
 2050 03a8 00       		.byte	0
 2051 03a9 15       		.uleb128 0x15
 2052 03aa B6000000 		.4byte	.LVL9
 2053 03ae C00A0000 		.4byte	0xac0
 2054 03b2 C1030000 		.4byte	0x3c1
 2055 03b6 16       		.uleb128 0x16
 2056 03b7 01       		.uleb128 0x1
 2057 03b8 50       		.byte	0x50
 2058 03b9 01       		.uleb128 0x1
 2059 03ba 48       		.byte	0x48
 2060 03bb 16       		.uleb128 0x16
 2061 03bc 01       		.uleb128 0x1
 2062 03bd 51       		.byte	0x51
 2063 03be 01       		.uleb128 0x1
 2064 03bf 37       		.byte	0x37
 2065 03c0 00       		.byte	0
 2066 03c1 15       		.uleb128 0x15
 2067 03c2 BE000000 		.4byte	.LVL10
 2068 03c6 CB0A0000 		.4byte	0xacb
 2069 03ca D4030000 		.4byte	0x3d4
 2070 03ce 16       		.uleb128 0x16
 2071 03cf 01       		.uleb128 0x1
 2072 03d0 50       		.byte	0x50
 2073 03d1 01       		.uleb128 0x1
 2074 03d2 48       		.byte	0x48
 2075 03d3 00       		.byte	0
 2076 03d4 15       		.uleb128 0x15
 2077 03d5 C6000000 		.4byte	.LVL11
 2078 03d9 C00A0000 		.4byte	0xac0
 2079 03dd EC030000 		.4byte	0x3ec
 2080 03e1 16       		.uleb128 0x16
 2081 03e2 01       		.uleb128 0x1
 2082 03e3 50       		.byte	0x50
 2083 03e4 01       		.uleb128 0x1
 2084 03e5 45       		.byte	0x45
 2085 03e6 16       		.uleb128 0x16
 2086 03e7 01       		.uleb128 0x1
 2087 03e8 51       		.byte	0x51
 2088 03e9 01       		.uleb128 0x1
 2089 03ea 37       		.byte	0x37
 2090 03eb 00       		.byte	0
 2091 03ec 15       		.uleb128 0x15
 2092 03ed CE000000 		.4byte	.LVL12
 2093 03f1 CB0A0000 		.4byte	0xacb
 2094 03f5 FF030000 		.4byte	0x3ff
 2095 03f9 16       		.uleb128 0x16
 2096 03fa 01       		.uleb128 0x1
 2097 03fb 50       		.byte	0x50
 2098 03fc 01       		.uleb128 0x1
 2099 03fd 45       		.byte	0x45
 2100 03fe 00       		.byte	0
 2101 03ff 15       		.uleb128 0x15
 2102 0400 D6000000 		.4byte	.LVL13
 2103 0404 C00A0000 		.4byte	0xac0
 2104 0408 18040000 		.4byte	0x418
 2105 040c 16       		.uleb128 0x16
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 85


 2106 040d 01       		.uleb128 0x1
 2107 040e 50       		.byte	0x50
 2108 040f 02       		.uleb128 0x2
 2109 0410 77       		.byte	0x77
 2110 0411 00       		.sleb128 0
 2111 0412 16       		.uleb128 0x16
 2112 0413 01       		.uleb128 0x1
 2113 0414 51       		.byte	0x51
 2114 0415 01       		.uleb128 0x1
 2115 0416 37       		.byte	0x37
 2116 0417 00       		.byte	0
 2117 0418 15       		.uleb128 0x15
 2118 0419 DE000000 		.4byte	.LVL14
 2119 041d CB0A0000 		.4byte	0xacb
 2120 0421 2C040000 		.4byte	0x42c
 2121 0425 16       		.uleb128 0x16
 2122 0426 01       		.uleb128 0x1
 2123 0427 50       		.byte	0x50
 2124 0428 02       		.uleb128 0x2
 2125 0429 77       		.byte	0x77
 2126 042a 00       		.sleb128 0
 2127 042b 00       		.byte	0
 2128 042c 15       		.uleb128 0x15
 2129 042d E6000000 		.4byte	.LVL15
 2130 0431 C00A0000 		.4byte	0xac0
 2131 0435 45040000 		.4byte	0x445
 2132 0439 16       		.uleb128 0x16
 2133 043a 01       		.uleb128 0x1
 2134 043b 50       		.byte	0x50
 2135 043c 02       		.uleb128 0x2
 2136 043d 76       		.byte	0x76
 2137 043e 00       		.sleb128 0
 2138 043f 16       		.uleb128 0x16
 2139 0440 01       		.uleb128 0x1
 2140 0441 51       		.byte	0x51
 2141 0442 01       		.uleb128 0x1
 2142 0443 37       		.byte	0x37
 2143 0444 00       		.byte	0
 2144 0445 15       		.uleb128 0x15
 2145 0446 EE000000 		.4byte	.LVL16
 2146 044a CB0A0000 		.4byte	0xacb
 2147 044e 59040000 		.4byte	0x459
 2148 0452 16       		.uleb128 0x16
 2149 0453 01       		.uleb128 0x1
 2150 0454 50       		.byte	0x50
 2151 0455 02       		.uleb128 0x2
 2152 0456 76       		.byte	0x76
 2153 0457 00       		.sleb128 0
 2154 0458 00       		.byte	0
 2155 0459 15       		.uleb128 0x15
 2156 045a F6000000 		.4byte	.LVL17
 2157 045e C00A0000 		.4byte	0xac0
 2158 0462 72040000 		.4byte	0x472
 2159 0466 16       		.uleb128 0x16
 2160 0467 01       		.uleb128 0x1
 2161 0468 50       		.byte	0x50
 2162 0469 02       		.uleb128 0x2
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 86


 2163 046a 75       		.byte	0x75
 2164 046b 00       		.sleb128 0
 2165 046c 16       		.uleb128 0x16
 2166 046d 01       		.uleb128 0x1
 2167 046e 51       		.byte	0x51
 2168 046f 01       		.uleb128 0x1
 2169 0470 37       		.byte	0x37
 2170 0471 00       		.byte	0
 2171 0472 15       		.uleb128 0x15
 2172 0473 FE000000 		.4byte	.LVL18
 2173 0477 CB0A0000 		.4byte	0xacb
 2174 047b 86040000 		.4byte	0x486
 2175 047f 16       		.uleb128 0x16
 2176 0480 01       		.uleb128 0x1
 2177 0481 50       		.byte	0x50
 2178 0482 02       		.uleb128 0x2
 2179 0483 75       		.byte	0x75
 2180 0484 00       		.sleb128 0
 2181 0485 00       		.byte	0
 2182 0486 15       		.uleb128 0x15
 2183 0487 06010000 		.4byte	.LVL19
 2184 048b C00A0000 		.4byte	0xac0
 2185 048f 9E040000 		.4byte	0x49e
 2186 0493 16       		.uleb128 0x16
 2187 0494 01       		.uleb128 0x1
 2188 0495 50       		.byte	0x50
 2189 0496 01       		.uleb128 0x1
 2190 0497 3C       		.byte	0x3c
 2191 0498 16       		.uleb128 0x16
 2192 0499 01       		.uleb128 0x1
 2193 049a 51       		.byte	0x51
 2194 049b 01       		.uleb128 0x1
 2195 049c 37       		.byte	0x37
 2196 049d 00       		.byte	0
 2197 049e 17       		.uleb128 0x17
 2198 049f 12010000 		.4byte	.LVL21
 2199 04a3 CB0A0000 		.4byte	0xacb
 2200 04a7 16       		.uleb128 0x16
 2201 04a8 01       		.uleb128 0x1
 2202 04a9 50       		.byte	0x50
 2203 04aa 01       		.uleb128 0x1
 2204 04ab 3C       		.byte	0x3c
 2205 04ac 00       		.byte	0
 2206 04ad 00       		.byte	0
 2207 04ae 11       		.uleb128 0x11
 2208 04af 84050000 		.4byte	.LASF49
 2209 04b3 01       		.byte	0x1
 2210 04b4 CC01     		.2byte	0x1cc
 2211 04b6 01       		.byte	0x1
 2212 04b7 DE040000 		.4byte	0x4de
 2213 04bb 0F       		.uleb128 0xf
 2214 04bc B3010000 		.4byte	.LASF50
 2215 04c0 01       		.byte	0x1
 2216 04c1 CC01     		.2byte	0x1cc
 2217 04c3 6B000000 		.4byte	0x6b
 2218 04c7 0F       		.uleb128 0xf
 2219 04c8 EE000000 		.4byte	.LASF51
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 87


 2220 04cc 01       		.byte	0x1
 2221 04cd CC01     		.2byte	0x1cc
 2222 04cf 6B000000 		.4byte	0x6b
 2223 04d3 18       		.uleb128 0x18
 2224 04d4 6900     		.ascii	"i\000"
 2225 04d6 01       		.byte	0x1
 2226 04d7 D301     		.2byte	0x1d3
 2227 04d9 6B000000 		.4byte	0x6b
 2228 04dd 00       		.byte	0
 2229 04de 12       		.uleb128 0x12
 2230 04df 1F010000 		.4byte	.LASF54
 2231 04e3 01       		.byte	0x1
 2232 04e4 BA       		.byte	0xba
 2233 04e5 00000000 		.4byte	.LFB0
 2234 04e9 D0000000 		.4byte	.LFE0-.LFB0
 2235 04ed 01       		.uleb128 0x1
 2236 04ee 9C       		.byte	0x9c
 2237 04ef 64050000 		.4byte	0x564
 2238 04f3 19       		.uleb128 0x19
 2239 04f4 B3010000 		.4byte	.LASF50
 2240 04f8 01       		.byte	0x1
 2241 04f9 BA       		.byte	0xba
 2242 04fa 6B000000 		.4byte	0x6b
 2243 04fe 13000000 		.4byte	.LLST1
 2244 0502 19       		.uleb128 0x19
 2245 0503 EE000000 		.4byte	.LASF51
 2246 0507 01       		.byte	0x1
 2247 0508 BA       		.byte	0xba
 2248 0509 6B000000 		.4byte	0x6b
 2249 050d 34000000 		.4byte	.LLST2
 2250 0511 1A       		.uleb128 0x1a
 2251 0512 AE040000 		.4byte	0x4ae
 2252 0516 16000000 		.4byte	.LBB11
 2253 051a BA000000 		.4byte	.LBE11-.LBB11
 2254 051e 01       		.byte	0x1
 2255 051f C2       		.byte	0xc2
 2256 0520 5A050000 		.4byte	0x55a
 2257 0524 1B       		.uleb128 0x1b
 2258 0525 C7040000 		.4byte	0x4c7
 2259 0529 55000000 		.4byte	.LLST3
 2260 052d 1B       		.uleb128 0x1b
 2261 052e BB040000 		.4byte	0x4bb
 2262 0532 73000000 		.4byte	.LLST4
 2263 0536 1C       		.uleb128 0x1c
 2264 0537 16000000 		.4byte	.LBB12
 2265 053b BA000000 		.4byte	.LBE12-.LBB12
 2266 053f 1D       		.uleb128 0x1d
 2267 0540 D3040000 		.4byte	0x4d3
 2268 0544 91000000 		.4byte	.LLST5
 2269 0548 1E       		.uleb128 0x1e
 2270 0549 7E000000 		.4byte	.LVL27
 2271 054d D60A0000 		.4byte	0xad6
 2272 0551 16       		.uleb128 0x16
 2273 0552 01       		.uleb128 0x1
 2274 0553 50       		.byte	0x50
 2275 0554 02       		.uleb128 0x2
 2276 0555 74       		.byte	0x74
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 88


 2277 0556 00       		.sleb128 0
 2278 0557 00       		.byte	0
 2279 0558 00       		.byte	0
 2280 0559 00       		.byte	0
 2281 055a 14       		.uleb128 0x14
 2282 055b 12000000 		.4byte	.LVL23
 2283 055f EE020000 		.4byte	0x2ee
 2284 0563 00       		.byte	0
 2285 0564 1F       		.uleb128 0x1f
 2286 0565 AE040000 		.4byte	0x4ae
 2287 0569 00000000 		.4byte	.LFB2
 2288 056d B8000000 		.4byte	.LFE2-.LFB2
 2289 0571 01       		.uleb128 0x1
 2290 0572 9C       		.byte	0x9c
 2291 0573 A3050000 		.4byte	0x5a3
 2292 0577 1B       		.uleb128 0x1b
 2293 0578 BB040000 		.4byte	0x4bb
 2294 057c C9000000 		.4byte	.LLST6
 2295 0580 1B       		.uleb128 0x1b
 2296 0581 C7040000 		.4byte	0x4c7
 2297 0585 EA000000 		.4byte	.LLST7
 2298 0589 1D       		.uleb128 0x1d
 2299 058a D3040000 		.4byte	0x4d3
 2300 058e 16010000 		.4byte	.LLST8
 2301 0592 1E       		.uleb128 0x1e
 2302 0593 6C000000 		.4byte	.LVL35
 2303 0597 D60A0000 		.4byte	0xad6
 2304 059b 16       		.uleb128 0x16
 2305 059c 01       		.uleb128 0x1
 2306 059d 50       		.byte	0x50
 2307 059e 02       		.uleb128 0x2
 2308 059f 74       		.byte	0x74
 2309 05a0 00       		.sleb128 0
 2310 05a1 00       		.byte	0
 2311 05a2 00       		.byte	0
 2312 05a3 20       		.uleb128 0x20
 2313 05a4 7C030000 		.4byte	.LASF55
 2314 05a8 01       		.byte	0x1
 2315 05a9 9F02     		.2byte	0x29f
 2316 05ab 00000000 		.4byte	.LFB3
 2317 05af 64000000 		.4byte	.LFE3-.LFB3
 2318 05b3 01       		.uleb128 0x1
 2319 05b4 9C       		.byte	0x9c
 2320 05b5 C8050000 		.4byte	0x5c8
 2321 05b9 21       		.uleb128 0x21
 2322 05ba 6900     		.ascii	"i\000"
 2323 05bc 01       		.byte	0x1
 2324 05bd A502     		.2byte	0x2a5
 2325 05bf 6B000000 		.4byte	0x6b
 2326 05c3 42010000 		.4byte	.LLST9
 2327 05c7 00       		.byte	0
 2328 05c8 20       		.uleb128 0x20
 2329 05c9 79060000 		.4byte	.LASF57
 2330 05cd 01       		.byte	0x1
 2331 05ce D902     		.2byte	0x2d9
 2332 05d0 00000000 		.4byte	.LFB4
 2333 05d4 C0000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 89


 2334 05d8 01       		.uleb128 0x1
 2335 05d9 9C       		.byte	0x9c
 2336 05da 0A060000 		.4byte	0x60a
 2337 05de 22       		.uleb128 0x22
 2338 05df 48060000 		.4byte	.LASF56
 2339 05e3 01       		.byte	0x1
 2340 05e4 DB02     		.2byte	0x2db
 2341 05e6 6B000000 		.4byte	0x6b
 2342 05ea 6E010000 		.4byte	.LLST10
 2343 05ee 14       		.uleb128 0x14
 2344 05ef 06000000 		.4byte	.LVL40
 2345 05f3 9F0A0000 		.4byte	0xa9f
 2346 05f7 14       		.uleb128 0x14
 2347 05f8 50000000 		.4byte	.LVL41
 2348 05fc B50A0000 		.4byte	0xab5
 2349 0600 14       		.uleb128 0x14
 2350 0601 6C000000 		.4byte	.LVL42
 2351 0605 E10A0000 		.4byte	0xae1
 2352 0609 00       		.byte	0
 2353 060a 23       		.uleb128 0x23
 2354 060b C0050000 		.4byte	.LASF59
 2355 060f 01       		.byte	0x1
 2356 0610 5103     		.2byte	0x351
 2357 0612 6B000000 		.4byte	0x6b
 2358 0616 00000000 		.4byte	.LFB5
 2359 061a 18000000 		.4byte	.LFE5-.LFB5
 2360 061e 01       		.uleb128 0x1
 2361 061f 9C       		.byte	0x9c
 2362 0620 35060000 		.4byte	0x635
 2363 0624 22       		.uleb128 0x22
 2364 0625 CE040000 		.4byte	.LASF58
 2365 0629 01       		.byte	0x1
 2366 062a 5303     		.2byte	0x353
 2367 062c 6B000000 		.4byte	0x6b
 2368 0630 81010000 		.4byte	.LLST11
 2369 0634 00       		.byte	0
 2370 0635 24       		.uleb128 0x24
 2371 0636 C0010000 		.4byte	.LASF76
 2372 063a 01       		.byte	0x1
 2373 063b 6803     		.2byte	0x368
 2374 063d 6B000000 		.4byte	0x6b
 2375 0641 00000000 		.4byte	.LFB6
 2376 0645 0C000000 		.4byte	.LFE6-.LFB6
 2377 0649 01       		.uleb128 0x1
 2378 064a 9C       		.byte	0x9c
 2379 064b 23       		.uleb128 0x23
 2380 064c 1E000000 		.4byte	.LASF60
 2381 0650 01       		.byte	0x1
 2382 0651 8203     		.2byte	0x382
 2383 0653 6B000000 		.4byte	0x6b
 2384 0657 00000000 		.4byte	.LFB7
 2385 065b 18000000 		.4byte	.LFE7-.LFB7
 2386 065f 01       		.uleb128 0x1
 2387 0660 9C       		.byte	0x9c
 2388 0661 76060000 		.4byte	0x676
 2389 0665 21       		.uleb128 0x21
 2390 0666 72657300 		.ascii	"res\000"
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 90


 2391 066a 01       		.byte	0x1
 2392 066b 8403     		.2byte	0x384
 2393 066d 6B000000 		.4byte	0x6b
 2394 0671 94010000 		.4byte	.LLST12
 2395 0675 00       		.byte	0
 2396 0676 23       		.uleb128 0x23
 2397 0677 38050000 		.4byte	.LASF61
 2398 067b 01       		.byte	0x1
 2399 067c 9F03     		.2byte	0x39f
 2400 067e 6B000000 		.4byte	0x6b
 2401 0682 00000000 		.4byte	.LFB8
 2402 0686 0C000000 		.4byte	.LFE8-.LFB8
 2403 068a 01       		.uleb128 0x1
 2404 068b 9C       		.byte	0x9c
 2405 068c A1060000 		.4byte	0x6a1
 2406 0690 25       		.uleb128 0x25
 2407 0691 09000000 		.4byte	.LASF62
 2408 0695 01       		.byte	0x1
 2409 0696 9F03     		.2byte	0x39f
 2410 0698 6B000000 		.4byte	0x6b
 2411 069c B3010000 		.4byte	.LLST13
 2412 06a0 00       		.byte	0
 2413 06a1 23       		.uleb128 0x23
 2414 06a2 44040000 		.4byte	.LASF63
 2415 06a6 01       		.byte	0x1
 2416 06a7 BF03     		.2byte	0x3bf
 2417 06a9 6B000000 		.4byte	0x6b
 2418 06ad 00000000 		.4byte	.LFB9
 2419 06b1 14000000 		.4byte	.LFE9-.LFB9
 2420 06b5 01       		.uleb128 0x1
 2421 06b6 9C       		.byte	0x9c
 2422 06b7 CC060000 		.4byte	0x6cc
 2423 06bb 25       		.uleb128 0x25
 2424 06bc 57040000 		.4byte	.LASF47
 2425 06c0 01       		.byte	0x1
 2426 06c1 BF03     		.2byte	0x3bf
 2427 06c3 6B000000 		.4byte	0x6b
 2428 06c7 D4010000 		.4byte	.LLST14
 2429 06cb 00       		.byte	0
 2430 06cc 1F       		.uleb128 0x1f
 2431 06cd AA020000 		.4byte	0x2aa
 2432 06d1 00000000 		.4byte	.LFB10
 2433 06d5 28000000 		.4byte	.LFE10-.LFB10
 2434 06d9 01       		.uleb128 0x1
 2435 06da 9C       		.byte	0x9c
 2436 06db 18070000 		.4byte	0x718
 2437 06df 1B       		.uleb128 0x1b
 2438 06e0 BB020000 		.4byte	0x2bb
 2439 06e4 F5010000 		.4byte	.LLST15
 2440 06e8 1D       		.uleb128 0x1d
 2441 06e9 C7020000 		.4byte	0x2c7
 2442 06ed 2F020000 		.4byte	.LLST16
 2443 06f1 1C       		.uleb128 0x1c
 2444 06f2 0E000000 		.4byte	.LBB15
 2445 06f6 12000000 		.4byte	.LBE15-.LBB15
 2446 06fa 1B       		.uleb128 0x1b
 2447 06fb BB020000 		.4byte	0x2bb
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 91


 2448 06ff 4E020000 		.4byte	.LLST17
 2449 0703 1C       		.uleb128 0x1c
 2450 0704 0E000000 		.4byte	.LBB16
 2451 0708 12000000 		.4byte	.LBE16-.LBB16
 2452 070c 1D       		.uleb128 0x1d
 2453 070d C7020000 		.4byte	0x2c7
 2454 0711 6F020000 		.4byte	.LLST18
 2455 0715 00       		.byte	0
 2456 0716 00       		.byte	0
 2457 0717 00       		.byte	0
 2458 0718 20       		.uleb128 0x20
 2459 0719 25040000 		.4byte	.LASF64
 2460 071d 01       		.byte	0x1
 2461 071e 3E05     		.2byte	0x53e
 2462 0720 00000000 		.4byte	.LFB11
 2463 0724 80000000 		.4byte	.LFE11-.LFB11
 2464 0728 01       		.uleb128 0x1
 2465 0729 9C       		.byte	0x9c
 2466 072a 77070000 		.4byte	0x777
 2467 072e 25       		.uleb128 0x25
 2468 072f 57040000 		.4byte	.LASF47
 2469 0733 01       		.byte	0x1
 2470 0734 3E05     		.2byte	0x53e
 2471 0736 6B000000 		.4byte	0x6b
 2472 073a 9E020000 		.4byte	.LLST19
 2473 073e 25       		.uleb128 0x25
 2474 073f 7E000000 		.4byte	.LASF65
 2475 0743 01       		.byte	0x1
 2476 0744 3E05     		.2byte	0x53e
 2477 0746 77070000 		.4byte	0x777
 2478 074a CA020000 		.4byte	.LLST20
 2479 074e 25       		.uleb128 0x25
 2480 074f AC010000 		.4byte	.LASF66
 2481 0753 01       		.byte	0x1
 2482 0754 3E05     		.2byte	0x53e
 2483 0756 77000000 		.4byte	0x77
 2484 075a F6020000 		.4byte	.LLST21
 2485 075e 1C       		.uleb128 0x1c
 2486 075f 3E000000 		.4byte	.LBB17
 2487 0763 18000000 		.4byte	.LBE17-.LBB17
 2488 0767 21       		.uleb128 0x21
 2489 0768 6900     		.ascii	"i\000"
 2490 076a 01       		.byte	0x1
 2491 076b 5305     		.2byte	0x553
 2492 076d 77000000 		.4byte	0x77
 2493 0771 2D030000 		.4byte	.LLST22
 2494 0775 00       		.byte	0
 2495 0776 00       		.byte	0
 2496 0777 26       		.uleb128 0x26
 2497 0778 04       		.byte	0x4
 2498 0779 7D070000 		.4byte	0x77d
 2499 077d 27       		.uleb128 0x27
 2500 077e 6B000000 		.4byte	0x6b
 2501 0782 23       		.uleb128 0x23
 2502 0783 BC040000 		.4byte	.LASF67
 2503 0787 01       		.byte	0x1
 2504 0788 7506     		.2byte	0x675
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 92


 2505 078a 77000000 		.4byte	0x77
 2506 078e 00000000 		.4byte	.LFB12
 2507 0792 84000000 		.4byte	.LFE12-.LFB12
 2508 0796 01       		.uleb128 0x1
 2509 0797 9C       		.byte	0x9c
 2510 0798 A8080000 		.4byte	0x8a8
 2511 079c 25       		.uleb128 0x25
 2512 079d 57040000 		.4byte	.LASF47
 2513 07a1 01       		.byte	0x1
 2514 07a2 7506     		.2byte	0x675
 2515 07a4 6B000000 		.4byte	0x6b
 2516 07a8 67030000 		.4byte	.LLST23
 2517 07ac 25       		.uleb128 0x25
 2518 07ad 7E000000 		.4byte	.LASF65
 2519 07b1 01       		.byte	0x1
 2520 07b2 7506     		.2byte	0x675
 2521 07b4 A8080000 		.4byte	0x8a8
 2522 07b8 C5030000 		.4byte	.LLST24
 2523 07bc 25       		.uleb128 0x25
 2524 07bd AC010000 		.4byte	.LASF66
 2525 07c1 01       		.byte	0x1
 2526 07c2 7506     		.2byte	0x675
 2527 07c4 77000000 		.4byte	0x77
 2528 07c8 F1030000 		.4byte	.LLST25
 2529 07cc 28       		.uleb128 0x28
 2530 07cd AA020000 		.4byte	0x2aa
 2531 07d1 10000000 		.4byte	.LBB29
 2532 07d5 0A000000 		.4byte	.LBE29-.LBB29
 2533 07d9 01       		.byte	0x1
 2534 07da 7C06     		.2byte	0x67c
 2535 07dc 1F080000 		.4byte	0x81f
 2536 07e0 1B       		.uleb128 0x1b
 2537 07e1 BB020000 		.4byte	0x2bb
 2538 07e5 1D040000 		.4byte	.LLST26
 2539 07e9 1C       		.uleb128 0x1c
 2540 07ea 10000000 		.4byte	.LBB30
 2541 07ee 0A000000 		.4byte	.LBE30-.LBB30
 2542 07f2 1D       		.uleb128 0x1d
 2543 07f3 C7020000 		.4byte	0x2c7
 2544 07f7 30040000 		.4byte	.LLST27
 2545 07fb 1C       		.uleb128 0x1c
 2546 07fc 10000000 		.4byte	.LBB31
 2547 0800 0A000000 		.4byte	.LBE31-.LBB31
 2548 0804 1B       		.uleb128 0x1b
 2549 0805 BB020000 		.4byte	0x2bb
 2550 0809 1D040000 		.4byte	.LLST26
 2551 080d 1C       		.uleb128 0x1c
 2552 080e 10000000 		.4byte	.LBB32
 2553 0812 0A000000 		.4byte	.LBE32-.LBB32
 2554 0816 29       		.uleb128 0x29
 2555 0817 C7020000 		.4byte	0x2c7
 2556 081b 00       		.byte	0
 2557 081c 00       		.byte	0
 2558 081d 00       		.byte	0
 2559 081e 00       		.byte	0
 2560 081f 2A       		.uleb128 0x2a
 2561 0820 26000000 		.4byte	.LBB33
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 93


 2562 0824 18000000 		.4byte	.LBE33-.LBB33
 2563 0828 3B080000 		.4byte	0x83b
 2564 082c 21       		.uleb128 0x21
 2565 082d 6900     		.ascii	"i\000"
 2566 082f 01       		.byte	0x1
 2567 0830 8206     		.2byte	0x682
 2568 0832 77000000 		.4byte	0x77
 2569 0836 44040000 		.4byte	.LLST29
 2570 083a 00       		.byte	0
 2571 083b 2B       		.uleb128 0x2b
 2572 083c D4020000 		.4byte	0x2d4
 2573 0840 3E000000 		.4byte	.LBB34
 2574 0844 00000000 		.4byte	.Ldebug_ranges0+0
 2575 0848 01       		.byte	0x1
 2576 0849 8A06     		.2byte	0x68a
 2577 084b 59080000 		.4byte	0x859
 2578 084f 1B       		.uleb128 0x1b
 2579 0850 E1020000 		.4byte	0x2e1
 2580 0854 77040000 		.4byte	.LLST30
 2581 0858 00       		.byte	0
 2582 0859 2C       		.uleb128 0x2c
 2583 085a AA020000 		.4byte	0x2aa
 2584 085e 64000000 		.4byte	.LBB38
 2585 0862 20000000 		.4byte	.LBE38-.LBB38
 2586 0866 01       		.byte	0x1
 2587 0867 7C06     		.2byte	0x67c
 2588 0869 2D       		.uleb128 0x2d
 2589 086a BB020000 		.4byte	0x2bb
 2590 086e 01       		.uleb128 0x1
 2591 086f 50       		.byte	0x50
 2592 0870 1C       		.uleb128 0x1c
 2593 0871 64000000 		.4byte	.LBB39
 2594 0875 20000000 		.4byte	.LBE39-.LBB39
 2595 0879 2E       		.uleb128 0x2e
 2596 087a C7020000 		.4byte	0x2c7
 2597 087e 00       		.byte	0
 2598 087f 1C       		.uleb128 0x1c
 2599 0880 64000000 		.4byte	.LBB40
 2600 0884 20000000 		.4byte	.LBE40-.LBB40
 2601 0888 1B       		.uleb128 0x1b
 2602 0889 BB020000 		.4byte	0x2bb
 2603 088d 8A040000 		.4byte	.LLST31
 2604 0891 1C       		.uleb128 0x1c
 2605 0892 64000000 		.4byte	.LBB41
 2606 0896 20000000 		.4byte	.LBE41-.LBB41
 2607 089a 1D       		.uleb128 0x1d
 2608 089b C7020000 		.4byte	0x2c7
 2609 089f 9D040000 		.4byte	.LLST32
 2610 08a3 00       		.byte	0
 2611 08a4 00       		.byte	0
 2612 08a5 00       		.byte	0
 2613 08a6 00       		.byte	0
 2614 08a7 00       		.byte	0
 2615 08a8 26       		.uleb128 0x26
 2616 08a9 04       		.byte	0x4
 2617 08aa 6B000000 		.4byte	0x6b
 2618 08ae 1F       		.uleb128 0x1f
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 94


 2619 08af D4020000 		.4byte	0x2d4
 2620 08b3 00000000 		.4byte	.LFB13
 2621 08b7 2C000000 		.4byte	.LFE13-.LFB13
 2622 08bb 01       		.uleb128 0x1
 2623 08bc 9C       		.byte	0x9c
 2624 08bd CB080000 		.4byte	0x8cb
 2625 08c1 1B       		.uleb128 0x1b
 2626 08c2 E1020000 		.4byte	0x2e1
 2627 08c6 CC040000 		.4byte	.LLST33
 2628 08ca 00       		.byte	0
 2629 08cb 20       		.uleb128 0x20
 2630 08cc 59060000 		.4byte	.LASF68
 2631 08d0 01       		.byte	0x1
 2632 08d1 FC08     		.2byte	0x8fc
 2633 08d3 00000000 		.4byte	.LFB14
 2634 08d7 18000000 		.4byte	.LFE14-.LFB14
 2635 08db 01       		.uleb128 0x1
 2636 08dc 9C       		.byte	0x9c
 2637 08dd F2080000 		.4byte	0x8f2
 2638 08e1 25       		.uleb128 0x25
 2639 08e2 57040000 		.4byte	.LASF47
 2640 08e6 01       		.byte	0x1
 2641 08e7 FC08     		.2byte	0x8fc
 2642 08e9 6B000000 		.4byte	0x6b
 2643 08ed ED040000 		.4byte	.LLST34
 2644 08f1 00       		.byte	0
 2645 08f2 20       		.uleb128 0x20
 2646 08f3 20060000 		.4byte	.LASF69
 2647 08f7 01       		.byte	0x1
 2648 08f8 1A09     		.2byte	0x91a
 2649 08fa 00000000 		.4byte	.LFB15
 2650 08fe 0C000000 		.4byte	.LFE15-.LFB15
 2651 0902 01       		.uleb128 0x1
 2652 0903 9C       		.byte	0x9c
 2653 0904 17090000 		.4byte	0x917
 2654 0908 2F       		.uleb128 0x2f
 2655 0909 41060000 		.4byte	.LASF70
 2656 090d 01       		.byte	0x1
 2657 090e 1A09     		.2byte	0x91a
 2658 0910 6B000000 		.4byte	0x6b
 2659 0914 01       		.uleb128 0x1
 2660 0915 50       		.byte	0x50
 2661 0916 00       		.byte	0
 2662 0917 23       		.uleb128 0x23
 2663 0918 0F030000 		.4byte	.LASF71
 2664 091c 01       		.byte	0x1
 2665 091d 3309     		.2byte	0x933
 2666 091f 6B000000 		.4byte	0x6b
 2667 0923 00000000 		.4byte	.LFB16
 2668 0927 20000000 		.4byte	.LFE16-.LFB16
 2669 092b 01       		.uleb128 0x1
 2670 092c 9C       		.byte	0x9c
 2671 092d 51090000 		.4byte	0x951
 2672 0931 25       		.uleb128 0x25
 2673 0932 57040000 		.4byte	.LASF47
 2674 0936 01       		.byte	0x1
 2675 0937 3309     		.2byte	0x933
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 95


 2676 0939 6B000000 		.4byte	0x6b
 2677 093d 0E050000 		.4byte	.LLST35
 2678 0941 21       		.uleb128 0x21
 2679 0942 637200   		.ascii	"cr\000"
 2680 0945 01       		.byte	0x1
 2681 0946 3509     		.2byte	0x935
 2682 0948 6B000000 		.4byte	0x6b
 2683 094c 48050000 		.4byte	.LLST36
 2684 0950 00       		.byte	0
 2685 0951 20       		.uleb128 0x20
 2686 0952 52010000 		.4byte	.LASF72
 2687 0956 01       		.byte	0x1
 2688 0957 5C09     		.2byte	0x95c
 2689 0959 00000000 		.4byte	.LFB17
 2690 095d 1C000000 		.4byte	.LFE17-.LFB17
 2691 0961 01       		.uleb128 0x1
 2692 0962 9C       		.byte	0x9c
 2693 0963 76090000 		.4byte	0x976
 2694 0967 2F       		.uleb128 0x2f
 2695 0968 C3000000 		.4byte	.LASF73
 2696 096c 01       		.byte	0x1
 2697 096d 5C09     		.2byte	0x95c
 2698 096f 6B000000 		.4byte	0x6b
 2699 0973 01       		.uleb128 0x1
 2700 0974 50       		.byte	0x50
 2701 0975 00       		.byte	0
 2702 0976 23       		.uleb128 0x23
 2703 0977 DB000000 		.4byte	.LASF74
 2704 097b 01       		.byte	0x1
 2705 097c 9509     		.2byte	0x995
 2706 097e 6B000000 		.4byte	0x6b
 2707 0982 00000000 		.4byte	.LFB18
 2708 0986 10000000 		.4byte	.LFE18-.LFB18
 2709 098a 01       		.uleb128 0x1
 2710 098b 9C       		.byte	0x9c
 2711 098c A1090000 		.4byte	0x9a1
 2712 0990 22       		.uleb128 0x22
 2713 0991 6A020000 		.4byte	.LASF75
 2714 0995 01       		.byte	0x1
 2715 0996 9709     		.2byte	0x997
 2716 0998 6B000000 		.4byte	0x6b
 2717 099c 7E050000 		.4byte	.LLST37
 2718 09a0 00       		.byte	0
 2719 09a1 24       		.uleb128 0x24
 2720 09a2 1F050000 		.4byte	.LASF77
 2721 09a6 01       		.byte	0x1
 2722 09a7 AD09     		.2byte	0x9ad
 2723 09a9 6B000000 		.4byte	0x6b
 2724 09ad 00000000 		.4byte	.LFB19
 2725 09b1 10000000 		.4byte	.LFE19-.LFB19
 2726 09b5 01       		.uleb128 0x1
 2727 09b6 9C       		.byte	0x9c
 2728 09b7 30       		.uleb128 0x30
 2729 09b8 0A010000 		.4byte	.LASF78
 2730 09bc 01       		.byte	0x1
 2731 09bd BB09     		.2byte	0x9bb
 2732 09bf 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 96


 2733 09c3 10000000 		.4byte	.LFE20-.LFB20
 2734 09c7 01       		.uleb128 0x1
 2735 09c8 9C       		.byte	0x9c
 2736 09c9 30       		.uleb128 0x30
 2737 09ca ED010000 		.4byte	.LASF79
 2738 09ce 01       		.byte	0x1
 2739 09cf D109     		.2byte	0x9d1
 2740 09d1 00000000 		.4byte	.LFB21
 2741 09d5 10000000 		.4byte	.LFE21-.LFB21
 2742 09d9 01       		.uleb128 0x1
 2743 09da 9C       		.byte	0x9c
 2744 09db 31       		.uleb128 0x31
 2745 09dc 71020000 		.4byte	.LASF80
 2746 09e0 01       		.byte	0x1
 2747 09e1 28       		.byte	0x28
 2748 09e2 6B000000 		.4byte	0x6b
 2749 09e6 05       		.uleb128 0x5
 2750 09e7 03       		.byte	0x3
 2751 09e8 00000000 		.4byte	USBUART_initVar
 2752 09ec 32       		.uleb128 0x32
 2753 09ed 5B020000 		.4byte	.LASF81
 2754 09f1 03       		.byte	0x3
 2755 09f2 D602     		.2byte	0x2d6
 2756 09f4 B0000000 		.4byte	0xb0
 2757 09f8 32       		.uleb128 0x32
 2758 09f9 96010000 		.4byte	.LASF82
 2759 09fd 03       		.byte	0x3
 2760 09fe D702     		.2byte	0x2d7
 2761 0a00 B0000000 		.4byte	0xb0
 2762 0a04 32       		.uleb128 0x32
 2763 0a05 3D000000 		.4byte	.LASF83
 2764 0a09 03       		.byte	0x3
 2765 0a0a D802     		.2byte	0x2d8
 2766 0a0c B0000000 		.4byte	0xb0
 2767 0a10 32       		.uleb128 0x32
 2768 0a11 11020000 		.4byte	.LASF84
 2769 0a15 03       		.byte	0x3
 2770 0a16 D902     		.2byte	0x2d9
 2771 0a18 B0000000 		.4byte	0xb0
 2772 0a1c 32       		.uleb128 0x32
 2773 0a1d 53000000 		.4byte	.LASF85
 2774 0a21 03       		.byte	0x3
 2775 0a22 DA02     		.2byte	0x2da
 2776 0a24 B0000000 		.4byte	0xb0
 2777 0a28 0A       		.uleb128 0xa
 2778 0a29 B0000000 		.4byte	0xb0
 2779 0a2d 380A0000 		.4byte	0xa38
 2780 0a31 0B       		.uleb128 0xb
 2781 0a32 CD000000 		.4byte	0xcd
 2782 0a36 01       		.byte	0x1
 2783 0a37 00       		.byte	0
 2784 0a38 32       		.uleb128 0x32
 2785 0a39 E6040000 		.4byte	.LASF86
 2786 0a3d 03       		.byte	0x3
 2787 0a3e E302     		.2byte	0x2e3
 2788 0a40 440A0000 		.4byte	0xa44
 2789 0a44 05       		.uleb128 0x5
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 97


 2790 0a45 280A0000 		.4byte	0xa28
 2791 0a49 33       		.uleb128 0x33
 2792 0a4a 00060000 		.4byte	.LASF87
 2793 0a4e 04       		.byte	0x4
 2794 0a4f 73       		.byte	0x73
 2795 0a50 B0000000 		.4byte	0xb0
 2796 0a54 33       		.uleb128 0x33
 2797 0a55 2D010000 		.4byte	.LASF88
 2798 0a59 04       		.byte	0x4
 2799 0a5a 74       		.byte	0x74
 2800 0a5b 5F0A0000 		.4byte	0xa5f
 2801 0a5f 05       		.uleb128 0x5
 2802 0a60 280A0000 		.4byte	0xa28
 2803 0a64 33       		.uleb128 0x33
 2804 0a65 25030000 		.4byte	.LASF89
 2805 0a69 04       		.byte	0x4
 2806 0a6a 76       		.byte	0x76
 2807 0a6b B0000000 		.4byte	0xb0
 2808 0a6f 0A       		.uleb128 0xa
 2809 0a70 7F0A0000 		.4byte	0xa7f
 2810 0a74 7F0A0000 		.4byte	0xa7f
 2811 0a78 0B       		.uleb128 0xb
 2812 0a79 CD000000 		.4byte	0xcd
 2813 0a7d 08       		.byte	0x8
 2814 0a7e 00       		.byte	0
 2815 0a7f 05       		.uleb128 0x5
 2816 0a80 49010000 		.4byte	0x149
 2817 0a84 33       		.uleb128 0x33
 2818 0a85 6E060000 		.4byte	.LASF90
 2819 0a89 04       		.byte	0x4
 2820 0a8a 7A       		.byte	0x7a
 2821 0a8b 8F0A0000 		.4byte	0xa8f
 2822 0a8f 05       		.uleb128 0x5
 2823 0a90 6F0A0000 		.4byte	0xa6f
 2824 0a94 33       		.uleb128 0x33
 2825 0a95 EC030000 		.4byte	.LASF91
 2826 0a99 04       		.byte	0x4
 2827 0a9a 9C       		.byte	0x9c
 2828 0a9b B0000000 		.4byte	0xb0
 2829 0a9f 34       		.uleb128 0x34
 2830 0aa0 E9050000 		.4byte	.LASF92
 2831 0aa4 E9050000 		.4byte	.LASF92
 2832 0aa8 05       		.byte	0x5
 2833 0aa9 7D       		.byte	0x7d
 2834 0aaa 34       		.uleb128 0x34
 2835 0aab 46030000 		.4byte	.LASF93
 2836 0aaf 46030000 		.4byte	.LASF93
 2837 0ab3 05       		.byte	0x5
 2838 0ab4 77       		.byte	0x77
 2839 0ab5 34       		.uleb128 0x34
 2840 0ab6 68000000 		.4byte	.LASF94
 2841 0aba 68000000 		.4byte	.LASF94
 2842 0abe 05       		.byte	0x5
 2843 0abf 7E       		.byte	0x7e
 2844 0ac0 34       		.uleb128 0x34
 2845 0ac1 7F010000 		.4byte	.LASF95
 2846 0ac5 7F010000 		.4byte	.LASF95
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 98


 2847 0ac9 05       		.byte	0x5
 2848 0aca 8B       		.byte	0x8b
 2849 0acb 34       		.uleb128 0x34
 2850 0acc B1050000 		.4byte	.LASF96
 2851 0ad0 B1050000 		.4byte	.LASF96
 2852 0ad4 05       		.byte	0x5
 2853 0ad5 88       		.byte	0x88
 2854 0ad6 34       		.uleb128 0x34
 2855 0ad7 D8030000 		.4byte	.LASF97
 2856 0adb D8030000 		.4byte	.LASF97
 2857 0adf 05       		.byte	0x5
 2858 0ae0 79       		.byte	0x79
 2859 0ae1 34       		.uleb128 0x34
 2860 0ae2 5F050000 		.4byte	.LASF98
 2861 0ae6 5F050000 		.4byte	.LASF98
 2862 0aea 06       		.byte	0x6
 2863 0aeb 2B       		.byte	0x2b
 2864 0aec 00       		.byte	0
 2865              		.section	.debug_abbrev,"",%progbits
 2866              	.Ldebug_abbrev0:
 2867 0000 01       		.uleb128 0x1
 2868 0001 11       		.uleb128 0x11
 2869 0002 01       		.byte	0x1
 2870 0003 25       		.uleb128 0x25
 2871 0004 0E       		.uleb128 0xe
 2872 0005 13       		.uleb128 0x13
 2873 0006 0B       		.uleb128 0xb
 2874 0007 03       		.uleb128 0x3
 2875 0008 0E       		.uleb128 0xe
 2876 0009 1B       		.uleb128 0x1b
 2877 000a 0E       		.uleb128 0xe
 2878 000b 55       		.uleb128 0x55
 2879 000c 17       		.uleb128 0x17
 2880 000d 11       		.uleb128 0x11
 2881 000e 01       		.uleb128 0x1
 2882 000f 10       		.uleb128 0x10
 2883 0010 17       		.uleb128 0x17
 2884 0011 00       		.byte	0
 2885 0012 00       		.byte	0
 2886 0013 02       		.uleb128 0x2
 2887 0014 24       		.uleb128 0x24
 2888 0015 00       		.byte	0
 2889 0016 0B       		.uleb128 0xb
 2890 0017 0B       		.uleb128 0xb
 2891 0018 3E       		.uleb128 0x3e
 2892 0019 0B       		.uleb128 0xb
 2893 001a 03       		.uleb128 0x3
 2894 001b 0E       		.uleb128 0xe
 2895 001c 00       		.byte	0
 2896 001d 00       		.byte	0
 2897 001e 03       		.uleb128 0x3
 2898 001f 24       		.uleb128 0x24
 2899 0020 00       		.byte	0
 2900 0021 0B       		.uleb128 0xb
 2901 0022 0B       		.uleb128 0xb
 2902 0023 3E       		.uleb128 0x3e
 2903 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 99


 2904 0025 03       		.uleb128 0x3
 2905 0026 08       		.uleb128 0x8
 2906 0027 00       		.byte	0
 2907 0028 00       		.byte	0
 2908 0029 04       		.uleb128 0x4
 2909 002a 16       		.uleb128 0x16
 2910 002b 00       		.byte	0
 2911 002c 03       		.uleb128 0x3
 2912 002d 0E       		.uleb128 0xe
 2913 002e 3A       		.uleb128 0x3a
 2914 002f 0B       		.uleb128 0xb
 2915 0030 3B       		.uleb128 0x3b
 2916 0031 05       		.uleb128 0x5
 2917 0032 49       		.uleb128 0x49
 2918 0033 13       		.uleb128 0x13
 2919 0034 00       		.byte	0
 2920 0035 00       		.byte	0
 2921 0036 05       		.uleb128 0x5
 2922 0037 35       		.uleb128 0x35
 2923 0038 00       		.byte	0
 2924 0039 49       		.uleb128 0x49
 2925 003a 13       		.uleb128 0x13
 2926 003b 00       		.byte	0
 2927 003c 00       		.byte	0
 2928 003d 06       		.uleb128 0x6
 2929 003e 13       		.uleb128 0x13
 2930 003f 01       		.byte	0x1
 2931 0040 0B       		.uleb128 0xb
 2932 0041 0B       		.uleb128 0xb
 2933 0042 3A       		.uleb128 0x3a
 2934 0043 0B       		.uleb128 0xb
 2935 0044 3B       		.uleb128 0x3b
 2936 0045 0B       		.uleb128 0xb
 2937 0046 01       		.uleb128 0x1
 2938 0047 13       		.uleb128 0x13
 2939 0048 00       		.byte	0
 2940 0049 00       		.byte	0
 2941 004a 07       		.uleb128 0x7
 2942 004b 0D       		.uleb128 0xd
 2943 004c 00       		.byte	0
 2944 004d 03       		.uleb128 0x3
 2945 004e 0E       		.uleb128 0xe
 2946 004f 3A       		.uleb128 0x3a
 2947 0050 0B       		.uleb128 0xb
 2948 0051 3B       		.uleb128 0x3b
 2949 0052 0B       		.uleb128 0xb
 2950 0053 49       		.uleb128 0x49
 2951 0054 13       		.uleb128 0x13
 2952 0055 38       		.uleb128 0x38
 2953 0056 0B       		.uleb128 0xb
 2954 0057 00       		.byte	0
 2955 0058 00       		.byte	0
 2956 0059 08       		.uleb128 0x8
 2957 005a 16       		.uleb128 0x16
 2958 005b 00       		.byte	0
 2959 005c 03       		.uleb128 0x3
 2960 005d 0E       		.uleb128 0xe
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 100


 2961 005e 3A       		.uleb128 0x3a
 2962 005f 0B       		.uleb128 0xb
 2963 0060 3B       		.uleb128 0x3b
 2964 0061 0B       		.uleb128 0xb
 2965 0062 49       		.uleb128 0x49
 2966 0063 13       		.uleb128 0x13
 2967 0064 00       		.byte	0
 2968 0065 00       		.byte	0
 2969 0066 09       		.uleb128 0x9
 2970 0067 0D       		.uleb128 0xd
 2971 0068 00       		.byte	0
 2972 0069 03       		.uleb128 0x3
 2973 006a 08       		.uleb128 0x8
 2974 006b 3A       		.uleb128 0x3a
 2975 006c 0B       		.uleb128 0xb
 2976 006d 3B       		.uleb128 0x3b
 2977 006e 0B       		.uleb128 0xb
 2978 006f 49       		.uleb128 0x49
 2979 0070 13       		.uleb128 0x13
 2980 0071 38       		.uleb128 0x38
 2981 0072 0B       		.uleb128 0xb
 2982 0073 00       		.byte	0
 2983 0074 00       		.byte	0
 2984 0075 0A       		.uleb128 0xa
 2985 0076 01       		.uleb128 0x1
 2986 0077 01       		.byte	0x1
 2987 0078 49       		.uleb128 0x49
 2988 0079 13       		.uleb128 0x13
 2989 007a 01       		.uleb128 0x1
 2990 007b 13       		.uleb128 0x13
 2991 007c 00       		.byte	0
 2992 007d 00       		.byte	0
 2993 007e 0B       		.uleb128 0xb
 2994 007f 21       		.uleb128 0x21
 2995 0080 00       		.byte	0
 2996 0081 49       		.uleb128 0x49
 2997 0082 13       		.uleb128 0x13
 2998 0083 2F       		.uleb128 0x2f
 2999 0084 0B       		.uleb128 0xb
 3000 0085 00       		.byte	0
 3001 0086 00       		.byte	0
 3002 0087 0C       		.uleb128 0xc
 3003 0088 13       		.uleb128 0x13
 3004 0089 01       		.byte	0x1
 3005 008a 0B       		.uleb128 0xb
 3006 008b 0B       		.uleb128 0xb
 3007 008c 3A       		.uleb128 0x3a
 3008 008d 0B       		.uleb128 0xb
 3009 008e 3B       		.uleb128 0x3b
 3010 008f 05       		.uleb128 0x5
 3011 0090 01       		.uleb128 0x1
 3012 0091 13       		.uleb128 0x13
 3013 0092 00       		.byte	0
 3014 0093 00       		.byte	0
 3015 0094 0D       		.uleb128 0xd
 3016 0095 0D       		.uleb128 0xd
 3017 0096 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 101


 3018 0097 03       		.uleb128 0x3
 3019 0098 0E       		.uleb128 0xe
 3020 0099 3A       		.uleb128 0x3a
 3021 009a 0B       		.uleb128 0xb
 3022 009b 3B       		.uleb128 0x3b
 3023 009c 05       		.uleb128 0x5
 3024 009d 49       		.uleb128 0x49
 3025 009e 13       		.uleb128 0x13
 3026 009f 38       		.uleb128 0x38
 3027 00a0 0B       		.uleb128 0xb
 3028 00a1 00       		.byte	0
 3029 00a2 00       		.byte	0
 3030 00a3 0E       		.uleb128 0xe
 3031 00a4 2E       		.uleb128 0x2e
 3032 00a5 01       		.byte	0x1
 3033 00a6 3F       		.uleb128 0x3f
 3034 00a7 19       		.uleb128 0x19
 3035 00a8 03       		.uleb128 0x3
 3036 00a9 0E       		.uleb128 0xe
 3037 00aa 3A       		.uleb128 0x3a
 3038 00ab 0B       		.uleb128 0xb
 3039 00ac 3B       		.uleb128 0x3b
 3040 00ad 05       		.uleb128 0x5
 3041 00ae 27       		.uleb128 0x27
 3042 00af 19       		.uleb128 0x19
 3043 00b0 49       		.uleb128 0x49
 3044 00b1 13       		.uleb128 0x13
 3045 00b2 20       		.uleb128 0x20
 3046 00b3 0B       		.uleb128 0xb
 3047 00b4 01       		.uleb128 0x1
 3048 00b5 13       		.uleb128 0x13
 3049 00b6 00       		.byte	0
 3050 00b7 00       		.byte	0
 3051 00b8 0F       		.uleb128 0xf
 3052 00b9 05       		.uleb128 0x5
 3053 00ba 00       		.byte	0
 3054 00bb 03       		.uleb128 0x3
 3055 00bc 0E       		.uleb128 0xe
 3056 00bd 3A       		.uleb128 0x3a
 3057 00be 0B       		.uleb128 0xb
 3058 00bf 3B       		.uleb128 0x3b
 3059 00c0 05       		.uleb128 0x5
 3060 00c1 49       		.uleb128 0x49
 3061 00c2 13       		.uleb128 0x13
 3062 00c3 00       		.byte	0
 3063 00c4 00       		.byte	0
 3064 00c5 10       		.uleb128 0x10
 3065 00c6 34       		.uleb128 0x34
 3066 00c7 00       		.byte	0
 3067 00c8 03       		.uleb128 0x3
 3068 00c9 0E       		.uleb128 0xe
 3069 00ca 3A       		.uleb128 0x3a
 3070 00cb 0B       		.uleb128 0xb
 3071 00cc 3B       		.uleb128 0x3b
 3072 00cd 05       		.uleb128 0x5
 3073 00ce 49       		.uleb128 0x49
 3074 00cf 13       		.uleb128 0x13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 102


 3075 00d0 00       		.byte	0
 3076 00d1 00       		.byte	0
 3077 00d2 11       		.uleb128 0x11
 3078 00d3 2E       		.uleb128 0x2e
 3079 00d4 01       		.byte	0x1
 3080 00d5 3F       		.uleb128 0x3f
 3081 00d6 19       		.uleb128 0x19
 3082 00d7 03       		.uleb128 0x3
 3083 00d8 0E       		.uleb128 0xe
 3084 00d9 3A       		.uleb128 0x3a
 3085 00da 0B       		.uleb128 0xb
 3086 00db 3B       		.uleb128 0x3b
 3087 00dc 05       		.uleb128 0x5
 3088 00dd 27       		.uleb128 0x27
 3089 00de 19       		.uleb128 0x19
 3090 00df 20       		.uleb128 0x20
 3091 00e0 0B       		.uleb128 0xb
 3092 00e1 01       		.uleb128 0x1
 3093 00e2 13       		.uleb128 0x13
 3094 00e3 00       		.byte	0
 3095 00e4 00       		.byte	0
 3096 00e5 12       		.uleb128 0x12
 3097 00e6 2E       		.uleb128 0x2e
 3098 00e7 01       		.byte	0x1
 3099 00e8 3F       		.uleb128 0x3f
 3100 00e9 19       		.uleb128 0x19
 3101 00ea 03       		.uleb128 0x3
 3102 00eb 0E       		.uleb128 0xe
 3103 00ec 3A       		.uleb128 0x3a
 3104 00ed 0B       		.uleb128 0xb
 3105 00ee 3B       		.uleb128 0x3b
 3106 00ef 0B       		.uleb128 0xb
 3107 00f0 27       		.uleb128 0x27
 3108 00f1 19       		.uleb128 0x19
 3109 00f2 11       		.uleb128 0x11
 3110 00f3 01       		.uleb128 0x1
 3111 00f4 12       		.uleb128 0x12
 3112 00f5 06       		.uleb128 0x6
 3113 00f6 40       		.uleb128 0x40
 3114 00f7 18       		.uleb128 0x18
 3115 00f8 9742     		.uleb128 0x2117
 3116 00fa 19       		.uleb128 0x19
 3117 00fb 01       		.uleb128 0x1
 3118 00fc 13       		.uleb128 0x13
 3119 00fd 00       		.byte	0
 3120 00fe 00       		.byte	0
 3121 00ff 13       		.uleb128 0x13
 3122 0100 34       		.uleb128 0x34
 3123 0101 00       		.byte	0
 3124 0102 03       		.uleb128 0x3
 3125 0103 0E       		.uleb128 0xe
 3126 0104 3A       		.uleb128 0x3a
 3127 0105 0B       		.uleb128 0xb
 3128 0106 3B       		.uleb128 0x3b
 3129 0107 0B       		.uleb128 0xb
 3130 0108 49       		.uleb128 0x49
 3131 0109 13       		.uleb128 0x13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 103


 3132 010a 02       		.uleb128 0x2
 3133 010b 17       		.uleb128 0x17
 3134 010c 00       		.byte	0
 3135 010d 00       		.byte	0
 3136 010e 14       		.uleb128 0x14
 3137 010f 898201   		.uleb128 0x4109
 3138 0112 00       		.byte	0
 3139 0113 11       		.uleb128 0x11
 3140 0114 01       		.uleb128 0x1
 3141 0115 31       		.uleb128 0x31
 3142 0116 13       		.uleb128 0x13
 3143 0117 00       		.byte	0
 3144 0118 00       		.byte	0
 3145 0119 15       		.uleb128 0x15
 3146 011a 898201   		.uleb128 0x4109
 3147 011d 01       		.byte	0x1
 3148 011e 11       		.uleb128 0x11
 3149 011f 01       		.uleb128 0x1
 3150 0120 31       		.uleb128 0x31
 3151 0121 13       		.uleb128 0x13
 3152 0122 01       		.uleb128 0x1
 3153 0123 13       		.uleb128 0x13
 3154 0124 00       		.byte	0
 3155 0125 00       		.byte	0
 3156 0126 16       		.uleb128 0x16
 3157 0127 8A8201   		.uleb128 0x410a
 3158 012a 00       		.byte	0
 3159 012b 02       		.uleb128 0x2
 3160 012c 18       		.uleb128 0x18
 3161 012d 9142     		.uleb128 0x2111
 3162 012f 18       		.uleb128 0x18
 3163 0130 00       		.byte	0
 3164 0131 00       		.byte	0
 3165 0132 17       		.uleb128 0x17
 3166 0133 898201   		.uleb128 0x4109
 3167 0136 01       		.byte	0x1
 3168 0137 11       		.uleb128 0x11
 3169 0138 01       		.uleb128 0x1
 3170 0139 9542     		.uleb128 0x2115
 3171 013b 19       		.uleb128 0x19
 3172 013c 31       		.uleb128 0x31
 3173 013d 13       		.uleb128 0x13
 3174 013e 00       		.byte	0
 3175 013f 00       		.byte	0
 3176 0140 18       		.uleb128 0x18
 3177 0141 34       		.uleb128 0x34
 3178 0142 00       		.byte	0
 3179 0143 03       		.uleb128 0x3
 3180 0144 08       		.uleb128 0x8
 3181 0145 3A       		.uleb128 0x3a
 3182 0146 0B       		.uleb128 0xb
 3183 0147 3B       		.uleb128 0x3b
 3184 0148 05       		.uleb128 0x5
 3185 0149 49       		.uleb128 0x49
 3186 014a 13       		.uleb128 0x13
 3187 014b 00       		.byte	0
 3188 014c 00       		.byte	0
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 104


 3189 014d 19       		.uleb128 0x19
 3190 014e 05       		.uleb128 0x5
 3191 014f 00       		.byte	0
 3192 0150 03       		.uleb128 0x3
 3193 0151 0E       		.uleb128 0xe
 3194 0152 3A       		.uleb128 0x3a
 3195 0153 0B       		.uleb128 0xb
 3196 0154 3B       		.uleb128 0x3b
 3197 0155 0B       		.uleb128 0xb
 3198 0156 49       		.uleb128 0x49
 3199 0157 13       		.uleb128 0x13
 3200 0158 02       		.uleb128 0x2
 3201 0159 17       		.uleb128 0x17
 3202 015a 00       		.byte	0
 3203 015b 00       		.byte	0
 3204 015c 1A       		.uleb128 0x1a
 3205 015d 1D       		.uleb128 0x1d
 3206 015e 01       		.byte	0x1
 3207 015f 31       		.uleb128 0x31
 3208 0160 13       		.uleb128 0x13
 3209 0161 11       		.uleb128 0x11
 3210 0162 01       		.uleb128 0x1
 3211 0163 12       		.uleb128 0x12
 3212 0164 06       		.uleb128 0x6
 3213 0165 58       		.uleb128 0x58
 3214 0166 0B       		.uleb128 0xb
 3215 0167 59       		.uleb128 0x59
 3216 0168 0B       		.uleb128 0xb
 3217 0169 01       		.uleb128 0x1
 3218 016a 13       		.uleb128 0x13
 3219 016b 00       		.byte	0
 3220 016c 00       		.byte	0
 3221 016d 1B       		.uleb128 0x1b
 3222 016e 05       		.uleb128 0x5
 3223 016f 00       		.byte	0
 3224 0170 31       		.uleb128 0x31
 3225 0171 13       		.uleb128 0x13
 3226 0172 02       		.uleb128 0x2
 3227 0173 17       		.uleb128 0x17
 3228 0174 00       		.byte	0
 3229 0175 00       		.byte	0
 3230 0176 1C       		.uleb128 0x1c
 3231 0177 0B       		.uleb128 0xb
 3232 0178 01       		.byte	0x1
 3233 0179 11       		.uleb128 0x11
 3234 017a 01       		.uleb128 0x1
 3235 017b 12       		.uleb128 0x12
 3236 017c 06       		.uleb128 0x6
 3237 017d 00       		.byte	0
 3238 017e 00       		.byte	0
 3239 017f 1D       		.uleb128 0x1d
 3240 0180 34       		.uleb128 0x34
 3241 0181 00       		.byte	0
 3242 0182 31       		.uleb128 0x31
 3243 0183 13       		.uleb128 0x13
 3244 0184 02       		.uleb128 0x2
 3245 0185 17       		.uleb128 0x17
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 105


 3246 0186 00       		.byte	0
 3247 0187 00       		.byte	0
 3248 0188 1E       		.uleb128 0x1e
 3249 0189 898201   		.uleb128 0x4109
 3250 018c 01       		.byte	0x1
 3251 018d 11       		.uleb128 0x11
 3252 018e 01       		.uleb128 0x1
 3253 018f 31       		.uleb128 0x31
 3254 0190 13       		.uleb128 0x13
 3255 0191 00       		.byte	0
 3256 0192 00       		.byte	0
 3257 0193 1F       		.uleb128 0x1f
 3258 0194 2E       		.uleb128 0x2e
 3259 0195 01       		.byte	0x1
 3260 0196 31       		.uleb128 0x31
 3261 0197 13       		.uleb128 0x13
 3262 0198 11       		.uleb128 0x11
 3263 0199 01       		.uleb128 0x1
 3264 019a 12       		.uleb128 0x12
 3265 019b 06       		.uleb128 0x6
 3266 019c 40       		.uleb128 0x40
 3267 019d 18       		.uleb128 0x18
 3268 019e 9742     		.uleb128 0x2117
 3269 01a0 19       		.uleb128 0x19
 3270 01a1 01       		.uleb128 0x1
 3271 01a2 13       		.uleb128 0x13
 3272 01a3 00       		.byte	0
 3273 01a4 00       		.byte	0
 3274 01a5 20       		.uleb128 0x20
 3275 01a6 2E       		.uleb128 0x2e
 3276 01a7 01       		.byte	0x1
 3277 01a8 3F       		.uleb128 0x3f
 3278 01a9 19       		.uleb128 0x19
 3279 01aa 03       		.uleb128 0x3
 3280 01ab 0E       		.uleb128 0xe
 3281 01ac 3A       		.uleb128 0x3a
 3282 01ad 0B       		.uleb128 0xb
 3283 01ae 3B       		.uleb128 0x3b
 3284 01af 05       		.uleb128 0x5
 3285 01b0 27       		.uleb128 0x27
 3286 01b1 19       		.uleb128 0x19
 3287 01b2 11       		.uleb128 0x11
 3288 01b3 01       		.uleb128 0x1
 3289 01b4 12       		.uleb128 0x12
 3290 01b5 06       		.uleb128 0x6
 3291 01b6 40       		.uleb128 0x40
 3292 01b7 18       		.uleb128 0x18
 3293 01b8 9742     		.uleb128 0x2117
 3294 01ba 19       		.uleb128 0x19
 3295 01bb 01       		.uleb128 0x1
 3296 01bc 13       		.uleb128 0x13
 3297 01bd 00       		.byte	0
 3298 01be 00       		.byte	0
 3299 01bf 21       		.uleb128 0x21
 3300 01c0 34       		.uleb128 0x34
 3301 01c1 00       		.byte	0
 3302 01c2 03       		.uleb128 0x3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 106


 3303 01c3 08       		.uleb128 0x8
 3304 01c4 3A       		.uleb128 0x3a
 3305 01c5 0B       		.uleb128 0xb
 3306 01c6 3B       		.uleb128 0x3b
 3307 01c7 05       		.uleb128 0x5
 3308 01c8 49       		.uleb128 0x49
 3309 01c9 13       		.uleb128 0x13
 3310 01ca 02       		.uleb128 0x2
 3311 01cb 17       		.uleb128 0x17
 3312 01cc 00       		.byte	0
 3313 01cd 00       		.byte	0
 3314 01ce 22       		.uleb128 0x22
 3315 01cf 34       		.uleb128 0x34
 3316 01d0 00       		.byte	0
 3317 01d1 03       		.uleb128 0x3
 3318 01d2 0E       		.uleb128 0xe
 3319 01d3 3A       		.uleb128 0x3a
 3320 01d4 0B       		.uleb128 0xb
 3321 01d5 3B       		.uleb128 0x3b
 3322 01d6 05       		.uleb128 0x5
 3323 01d7 49       		.uleb128 0x49
 3324 01d8 13       		.uleb128 0x13
 3325 01d9 02       		.uleb128 0x2
 3326 01da 17       		.uleb128 0x17
 3327 01db 00       		.byte	0
 3328 01dc 00       		.byte	0
 3329 01dd 23       		.uleb128 0x23
 3330 01de 2E       		.uleb128 0x2e
 3331 01df 01       		.byte	0x1
 3332 01e0 3F       		.uleb128 0x3f
 3333 01e1 19       		.uleb128 0x19
 3334 01e2 03       		.uleb128 0x3
 3335 01e3 0E       		.uleb128 0xe
 3336 01e4 3A       		.uleb128 0x3a
 3337 01e5 0B       		.uleb128 0xb
 3338 01e6 3B       		.uleb128 0x3b
 3339 01e7 05       		.uleb128 0x5
 3340 01e8 27       		.uleb128 0x27
 3341 01e9 19       		.uleb128 0x19
 3342 01ea 49       		.uleb128 0x49
 3343 01eb 13       		.uleb128 0x13
 3344 01ec 11       		.uleb128 0x11
 3345 01ed 01       		.uleb128 0x1
 3346 01ee 12       		.uleb128 0x12
 3347 01ef 06       		.uleb128 0x6
 3348 01f0 40       		.uleb128 0x40
 3349 01f1 18       		.uleb128 0x18
 3350 01f2 9742     		.uleb128 0x2117
 3351 01f4 19       		.uleb128 0x19
 3352 01f5 01       		.uleb128 0x1
 3353 01f6 13       		.uleb128 0x13
 3354 01f7 00       		.byte	0
 3355 01f8 00       		.byte	0
 3356 01f9 24       		.uleb128 0x24
 3357 01fa 2E       		.uleb128 0x2e
 3358 01fb 00       		.byte	0
 3359 01fc 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 107


 3360 01fd 19       		.uleb128 0x19
 3361 01fe 03       		.uleb128 0x3
 3362 01ff 0E       		.uleb128 0xe
 3363 0200 3A       		.uleb128 0x3a
 3364 0201 0B       		.uleb128 0xb
 3365 0202 3B       		.uleb128 0x3b
 3366 0203 05       		.uleb128 0x5
 3367 0204 27       		.uleb128 0x27
 3368 0205 19       		.uleb128 0x19
 3369 0206 49       		.uleb128 0x49
 3370 0207 13       		.uleb128 0x13
 3371 0208 11       		.uleb128 0x11
 3372 0209 01       		.uleb128 0x1
 3373 020a 12       		.uleb128 0x12
 3374 020b 06       		.uleb128 0x6
 3375 020c 40       		.uleb128 0x40
 3376 020d 18       		.uleb128 0x18
 3377 020e 9742     		.uleb128 0x2117
 3378 0210 19       		.uleb128 0x19
 3379 0211 00       		.byte	0
 3380 0212 00       		.byte	0
 3381 0213 25       		.uleb128 0x25
 3382 0214 05       		.uleb128 0x5
 3383 0215 00       		.byte	0
 3384 0216 03       		.uleb128 0x3
 3385 0217 0E       		.uleb128 0xe
 3386 0218 3A       		.uleb128 0x3a
 3387 0219 0B       		.uleb128 0xb
 3388 021a 3B       		.uleb128 0x3b
 3389 021b 05       		.uleb128 0x5
 3390 021c 49       		.uleb128 0x49
 3391 021d 13       		.uleb128 0x13
 3392 021e 02       		.uleb128 0x2
 3393 021f 17       		.uleb128 0x17
 3394 0220 00       		.byte	0
 3395 0221 00       		.byte	0
 3396 0222 26       		.uleb128 0x26
 3397 0223 0F       		.uleb128 0xf
 3398 0224 00       		.byte	0
 3399 0225 0B       		.uleb128 0xb
 3400 0226 0B       		.uleb128 0xb
 3401 0227 49       		.uleb128 0x49
 3402 0228 13       		.uleb128 0x13
 3403 0229 00       		.byte	0
 3404 022a 00       		.byte	0
 3405 022b 27       		.uleb128 0x27
 3406 022c 26       		.uleb128 0x26
 3407 022d 00       		.byte	0
 3408 022e 49       		.uleb128 0x49
 3409 022f 13       		.uleb128 0x13
 3410 0230 00       		.byte	0
 3411 0231 00       		.byte	0
 3412 0232 28       		.uleb128 0x28
 3413 0233 1D       		.uleb128 0x1d
 3414 0234 01       		.byte	0x1
 3415 0235 31       		.uleb128 0x31
 3416 0236 13       		.uleb128 0x13
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 108


 3417 0237 11       		.uleb128 0x11
 3418 0238 01       		.uleb128 0x1
 3419 0239 12       		.uleb128 0x12
 3420 023a 06       		.uleb128 0x6
 3421 023b 58       		.uleb128 0x58
 3422 023c 0B       		.uleb128 0xb
 3423 023d 59       		.uleb128 0x59
 3424 023e 05       		.uleb128 0x5
 3425 023f 01       		.uleb128 0x1
 3426 0240 13       		.uleb128 0x13
 3427 0241 00       		.byte	0
 3428 0242 00       		.byte	0
 3429 0243 29       		.uleb128 0x29
 3430 0244 34       		.uleb128 0x34
 3431 0245 00       		.byte	0
 3432 0246 31       		.uleb128 0x31
 3433 0247 13       		.uleb128 0x13
 3434 0248 00       		.byte	0
 3435 0249 00       		.byte	0
 3436 024a 2A       		.uleb128 0x2a
 3437 024b 0B       		.uleb128 0xb
 3438 024c 01       		.byte	0x1
 3439 024d 11       		.uleb128 0x11
 3440 024e 01       		.uleb128 0x1
 3441 024f 12       		.uleb128 0x12
 3442 0250 06       		.uleb128 0x6
 3443 0251 01       		.uleb128 0x1
 3444 0252 13       		.uleb128 0x13
 3445 0253 00       		.byte	0
 3446 0254 00       		.byte	0
 3447 0255 2B       		.uleb128 0x2b
 3448 0256 1D       		.uleb128 0x1d
 3449 0257 01       		.byte	0x1
 3450 0258 31       		.uleb128 0x31
 3451 0259 13       		.uleb128 0x13
 3452 025a 52       		.uleb128 0x52
 3453 025b 01       		.uleb128 0x1
 3454 025c 55       		.uleb128 0x55
 3455 025d 17       		.uleb128 0x17
 3456 025e 58       		.uleb128 0x58
 3457 025f 0B       		.uleb128 0xb
 3458 0260 59       		.uleb128 0x59
 3459 0261 05       		.uleb128 0x5
 3460 0262 01       		.uleb128 0x1
 3461 0263 13       		.uleb128 0x13
 3462 0264 00       		.byte	0
 3463 0265 00       		.byte	0
 3464 0266 2C       		.uleb128 0x2c
 3465 0267 1D       		.uleb128 0x1d
 3466 0268 01       		.byte	0x1
 3467 0269 31       		.uleb128 0x31
 3468 026a 13       		.uleb128 0x13
 3469 026b 11       		.uleb128 0x11
 3470 026c 01       		.uleb128 0x1
 3471 026d 12       		.uleb128 0x12
 3472 026e 06       		.uleb128 0x6
 3473 026f 58       		.uleb128 0x58
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 109


 3474 0270 0B       		.uleb128 0xb
 3475 0271 59       		.uleb128 0x59
 3476 0272 05       		.uleb128 0x5
 3477 0273 00       		.byte	0
 3478 0274 00       		.byte	0
 3479 0275 2D       		.uleb128 0x2d
 3480 0276 05       		.uleb128 0x5
 3481 0277 00       		.byte	0
 3482 0278 31       		.uleb128 0x31
 3483 0279 13       		.uleb128 0x13
 3484 027a 02       		.uleb128 0x2
 3485 027b 18       		.uleb128 0x18
 3486 027c 00       		.byte	0
 3487 027d 00       		.byte	0
 3488 027e 2E       		.uleb128 0x2e
 3489 027f 34       		.uleb128 0x34
 3490 0280 00       		.byte	0
 3491 0281 31       		.uleb128 0x31
 3492 0282 13       		.uleb128 0x13
 3493 0283 1C       		.uleb128 0x1c
 3494 0284 0B       		.uleb128 0xb
 3495 0285 00       		.byte	0
 3496 0286 00       		.byte	0
 3497 0287 2F       		.uleb128 0x2f
 3498 0288 05       		.uleb128 0x5
 3499 0289 00       		.byte	0
 3500 028a 03       		.uleb128 0x3
 3501 028b 0E       		.uleb128 0xe
 3502 028c 3A       		.uleb128 0x3a
 3503 028d 0B       		.uleb128 0xb
 3504 028e 3B       		.uleb128 0x3b
 3505 028f 05       		.uleb128 0x5
 3506 0290 49       		.uleb128 0x49
 3507 0291 13       		.uleb128 0x13
 3508 0292 02       		.uleb128 0x2
 3509 0293 18       		.uleb128 0x18
 3510 0294 00       		.byte	0
 3511 0295 00       		.byte	0
 3512 0296 30       		.uleb128 0x30
 3513 0297 2E       		.uleb128 0x2e
 3514 0298 00       		.byte	0
 3515 0299 3F       		.uleb128 0x3f
 3516 029a 19       		.uleb128 0x19
 3517 029b 03       		.uleb128 0x3
 3518 029c 0E       		.uleb128 0xe
 3519 029d 3A       		.uleb128 0x3a
 3520 029e 0B       		.uleb128 0xb
 3521 029f 3B       		.uleb128 0x3b
 3522 02a0 05       		.uleb128 0x5
 3523 02a1 27       		.uleb128 0x27
 3524 02a2 19       		.uleb128 0x19
 3525 02a3 11       		.uleb128 0x11
 3526 02a4 01       		.uleb128 0x1
 3527 02a5 12       		.uleb128 0x12
 3528 02a6 06       		.uleb128 0x6
 3529 02a7 40       		.uleb128 0x40
 3530 02a8 18       		.uleb128 0x18
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 110


 3531 02a9 9742     		.uleb128 0x2117
 3532 02ab 19       		.uleb128 0x19
 3533 02ac 00       		.byte	0
 3534 02ad 00       		.byte	0
 3535 02ae 31       		.uleb128 0x31
 3536 02af 34       		.uleb128 0x34
 3537 02b0 00       		.byte	0
 3538 02b1 03       		.uleb128 0x3
 3539 02b2 0E       		.uleb128 0xe
 3540 02b3 3A       		.uleb128 0x3a
 3541 02b4 0B       		.uleb128 0xb
 3542 02b5 3B       		.uleb128 0x3b
 3543 02b6 0B       		.uleb128 0xb
 3544 02b7 49       		.uleb128 0x49
 3545 02b8 13       		.uleb128 0x13
 3546 02b9 3F       		.uleb128 0x3f
 3547 02ba 19       		.uleb128 0x19
 3548 02bb 02       		.uleb128 0x2
 3549 02bc 18       		.uleb128 0x18
 3550 02bd 00       		.byte	0
 3551 02be 00       		.byte	0
 3552 02bf 32       		.uleb128 0x32
 3553 02c0 34       		.uleb128 0x34
 3554 02c1 00       		.byte	0
 3555 02c2 03       		.uleb128 0x3
 3556 02c3 0E       		.uleb128 0xe
 3557 02c4 3A       		.uleb128 0x3a
 3558 02c5 0B       		.uleb128 0xb
 3559 02c6 3B       		.uleb128 0x3b
 3560 02c7 05       		.uleb128 0x5
 3561 02c8 49       		.uleb128 0x49
 3562 02c9 13       		.uleb128 0x13
 3563 02ca 3F       		.uleb128 0x3f
 3564 02cb 19       		.uleb128 0x19
 3565 02cc 3C       		.uleb128 0x3c
 3566 02cd 19       		.uleb128 0x19
 3567 02ce 00       		.byte	0
 3568 02cf 00       		.byte	0
 3569 02d0 33       		.uleb128 0x33
 3570 02d1 34       		.uleb128 0x34
 3571 02d2 00       		.byte	0
 3572 02d3 03       		.uleb128 0x3
 3573 02d4 0E       		.uleb128 0xe
 3574 02d5 3A       		.uleb128 0x3a
 3575 02d6 0B       		.uleb128 0xb
 3576 02d7 3B       		.uleb128 0x3b
 3577 02d8 0B       		.uleb128 0xb
 3578 02d9 49       		.uleb128 0x49
 3579 02da 13       		.uleb128 0x13
 3580 02db 3F       		.uleb128 0x3f
 3581 02dc 19       		.uleb128 0x19
 3582 02dd 3C       		.uleb128 0x3c
 3583 02de 19       		.uleb128 0x19
 3584 02df 00       		.byte	0
 3585 02e0 00       		.byte	0
 3586 02e1 34       		.uleb128 0x34
 3587 02e2 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 111


 3588 02e3 00       		.byte	0
 3589 02e4 3F       		.uleb128 0x3f
 3590 02e5 19       		.uleb128 0x19
 3591 02e6 3C       		.uleb128 0x3c
 3592 02e7 19       		.uleb128 0x19
 3593 02e8 6E       		.uleb128 0x6e
 3594 02e9 0E       		.uleb128 0xe
 3595 02ea 03       		.uleb128 0x3
 3596 02eb 0E       		.uleb128 0xe
 3597 02ec 3A       		.uleb128 0x3a
 3598 02ed 0B       		.uleb128 0xb
 3599 02ee 3B       		.uleb128 0x3b
 3600 02ef 0B       		.uleb128 0xb
 3601 02f0 00       		.byte	0
 3602 02f1 00       		.byte	0
 3603 02f2 00       		.byte	0
 3604              		.section	.debug_loc,"",%progbits
 3605              	.Ldebug_loc0:
 3606              	.LLST0:
 3607 0000 10000000 		.4byte	.LVL1
 3608 0004 0A010000 		.4byte	.LVL20
 3609 0008 0100     		.2byte	0x1
 3610 000a 58       		.byte	0x58
 3611 000b 00000000 		.4byte	0
 3612 000f 00000000 		.4byte	0
 3613              	.LLST1:
 3614 0013 00000000 		.4byte	.LVL22
 3615 0017 11000000 		.4byte	.LVL23-1
 3616 001b 0100     		.2byte	0x1
 3617 001d 50       		.byte	0x50
 3618 001e 11000000 		.4byte	.LVL23-1
 3619 0022 D0000000 		.4byte	.LFE0
 3620 0026 0400     		.2byte	0x4
 3621 0028 F3       		.byte	0xf3
 3622 0029 01       		.uleb128 0x1
 3623 002a 50       		.byte	0x50
 3624 002b 9F       		.byte	0x9f
 3625 002c 00000000 		.4byte	0
 3626 0030 00000000 		.4byte	0
 3627              	.LLST2:
 3628 0034 00000000 		.4byte	.LVL22
 3629 0038 11000000 		.4byte	.LVL23-1
 3630 003c 0100     		.2byte	0x1
 3631 003e 51       		.byte	0x51
 3632 003f 11000000 		.4byte	.LVL23-1
 3633 0043 D0000000 		.4byte	.LFE0
 3634 0047 0400     		.2byte	0x4
 3635 0049 F3       		.byte	0xf3
 3636 004a 01       		.uleb128 0x1
 3637 004b 51       		.byte	0x51
 3638 004c 9F       		.byte	0x9f
 3639 004d 00000000 		.4byte	0
 3640 0051 00000000 		.4byte	0
 3641              	.LLST3:
 3642 0055 16000000 		.4byte	.LVL24
 3643 0059 84000000 		.4byte	.LVL28
 3644 005d 0100     		.2byte	0x1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 112


 3645 005f 55       		.byte	0x55
 3646 0060 88000000 		.4byte	.LVL29
 3647 0064 D0000000 		.4byte	.LFE0
 3648 0068 0100     		.2byte	0x1
 3649 006a 55       		.byte	0x55
 3650 006b 00000000 		.4byte	0
 3651 006f 00000000 		.4byte	0
 3652              	.LLST4:
 3653 0073 16000000 		.4byte	.LVL24
 3654 0077 84000000 		.4byte	.LVL28
 3655 007b 0100     		.2byte	0x1
 3656 007d 58       		.byte	0x58
 3657 007e 88000000 		.4byte	.LVL29
 3658 0082 D0000000 		.4byte	.LFE0
 3659 0086 0100     		.2byte	0x1
 3660 0088 58       		.byte	0x58
 3661 0089 00000000 		.4byte	0
 3662 008d 00000000 		.4byte	0
 3663              	.LLST5:
 3664 0091 16000000 		.4byte	.LVL24
 3665 0095 22000000 		.4byte	.LVL25
 3666 0099 0200     		.2byte	0x2
 3667 009b 30       		.byte	0x30
 3668 009c 9F       		.byte	0x9f
 3669 009d 22000000 		.4byte	.LVL25
 3670 00a1 26000000 		.4byte	.LVL26
 3671 00a5 0200     		.2byte	0x2
 3672 00a7 31       		.byte	0x31
 3673 00a8 9F       		.byte	0x9f
 3674 00a9 26000000 		.4byte	.LVL26
 3675 00ad 84000000 		.4byte	.LVL28
 3676 00b1 0200     		.2byte	0x2
 3677 00b3 32       		.byte	0x32
 3678 00b4 9F       		.byte	0x9f
 3679 00b5 88000000 		.4byte	.LVL29
 3680 00b9 D0000000 		.4byte	.LFE0
 3681 00bd 0200     		.2byte	0x2
 3682 00bf 32       		.byte	0x32
 3683 00c0 9F       		.byte	0x9f
 3684 00c1 00000000 		.4byte	0
 3685 00c5 00000000 		.4byte	0
 3686              	.LLST6:
 3687 00c9 00000000 		.4byte	.LVL30
 3688 00cd 22000000 		.4byte	.LVL33
 3689 00d1 0100     		.2byte	0x1
 3690 00d3 50       		.byte	0x50
 3691 00d4 22000000 		.4byte	.LVL33
 3692 00d8 B8000000 		.4byte	.LFE2
 3693 00dc 0400     		.2byte	0x4
 3694 00de F3       		.byte	0xf3
 3695 00df 01       		.uleb128 0x1
 3696 00e0 50       		.byte	0x50
 3697 00e1 9F       		.byte	0x9f
 3698 00e2 00000000 		.4byte	0
 3699 00e6 00000000 		.4byte	0
 3700              	.LLST7:
 3701 00ea 00000000 		.4byte	.LVL30
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 113


 3702 00ee 5E000000 		.4byte	.LVL34
 3703 00f2 0100     		.2byte	0x1
 3704 00f4 51       		.byte	0x51
 3705 00f5 5E000000 		.4byte	.LVL34
 3706 00f9 74000000 		.4byte	.LVL36
 3707 00fd 0400     		.2byte	0x4
 3708 00ff F3       		.byte	0xf3
 3709 0100 01       		.uleb128 0x1
 3710 0101 51       		.byte	0x51
 3711 0102 9F       		.byte	0x9f
 3712 0103 74000000 		.4byte	.LVL36
 3713 0107 B8000000 		.4byte	.LFE2
 3714 010b 0100     		.2byte	0x1
 3715 010d 51       		.byte	0x51
 3716 010e 00000000 		.4byte	0
 3717 0112 00000000 		.4byte	0
 3718              	.LLST8:
 3719 0116 00000000 		.4byte	.LVL30
 3720 011a 0C000000 		.4byte	.LVL31
 3721 011e 0200     		.2byte	0x2
 3722 0120 30       		.byte	0x30
 3723 0121 9F       		.byte	0x9f
 3724 0122 0C000000 		.4byte	.LVL31
 3725 0126 10000000 		.4byte	.LVL32
 3726 012a 0200     		.2byte	0x2
 3727 012c 31       		.byte	0x31
 3728 012d 9F       		.byte	0x9f
 3729 012e 10000000 		.4byte	.LVL32
 3730 0132 B8000000 		.4byte	.LFE2
 3731 0136 0200     		.2byte	0x2
 3732 0138 32       		.byte	0x32
 3733 0139 9F       		.byte	0x9f
 3734 013a 00000000 		.4byte	0
 3735 013e 00000000 		.4byte	0
 3736              	.LLST9:
 3737 0142 00000000 		.4byte	.LVL37
 3738 0146 0A000000 		.4byte	.LVL38
 3739 014a 0200     		.2byte	0x2
 3740 014c 30       		.byte	0x30
 3741 014d 9F       		.byte	0x9f
 3742 014e 0A000000 		.4byte	.LVL38
 3743 0152 0E000000 		.4byte	.LVL39
 3744 0156 0200     		.2byte	0x2
 3745 0158 31       		.byte	0x31
 3746 0159 9F       		.byte	0x9f
 3747 015a 0E000000 		.4byte	.LVL39
 3748 015e 64000000 		.4byte	.LFE3
 3749 0162 0200     		.2byte	0x2
 3750 0164 32       		.byte	0x32
 3751 0165 9F       		.byte	0x9f
 3752 0166 00000000 		.4byte	0
 3753 016a 00000000 		.4byte	0
 3754              	.LLST10:
 3755 016e 06000000 		.4byte	.LVL40
 3756 0172 4F000000 		.4byte	.LVL41-1
 3757 0176 0100     		.2byte	0x1
 3758 0178 50       		.byte	0x50
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 114


 3759 0179 00000000 		.4byte	0
 3760 017d 00000000 		.4byte	0
 3761              	.LLST11:
 3762 0181 06000000 		.4byte	.LVL43
 3763 0185 10000000 		.4byte	.LVL44
 3764 0189 0100     		.2byte	0x1
 3765 018b 50       		.byte	0x50
 3766 018c 00000000 		.4byte	0
 3767 0190 00000000 		.4byte	0
 3768              	.LLST12:
 3769 0194 00000000 		.4byte	.LVL45
 3770 0198 10000000 		.4byte	.LVL46
 3771 019c 0200     		.2byte	0x2
 3772 019e 30       		.byte	0x30
 3773 019f 9F       		.byte	0x9f
 3774 01a0 10000000 		.4byte	.LVL46
 3775 01a4 18000000 		.4byte	.LFE7
 3776 01a8 0100     		.2byte	0x1
 3777 01aa 50       		.byte	0x50
 3778 01ab 00000000 		.4byte	0
 3779 01af 00000000 		.4byte	0
 3780              	.LLST13:
 3781 01b3 00000000 		.4byte	.LVL48
 3782 01b7 04000000 		.4byte	.LVL49
 3783 01bb 0100     		.2byte	0x1
 3784 01bd 50       		.byte	0x50
 3785 01be 04000000 		.4byte	.LVL49
 3786 01c2 0C000000 		.4byte	.LFE8
 3787 01c6 0400     		.2byte	0x4
 3788 01c8 F3       		.byte	0xf3
 3789 01c9 01       		.uleb128 0x1
 3790 01ca 50       		.byte	0x50
 3791 01cb 9F       		.byte	0x9f
 3792 01cc 00000000 		.4byte	0
 3793 01d0 00000000 		.4byte	0
 3794              	.LLST14:
 3795 01d4 00000000 		.4byte	.LVL50
 3796 01d8 06000000 		.4byte	.LVL51
 3797 01dc 0100     		.2byte	0x1
 3798 01de 50       		.byte	0x50
 3799 01df 06000000 		.4byte	.LVL51
 3800 01e3 14000000 		.4byte	.LFE9
 3801 01e7 0400     		.2byte	0x4
 3802 01e9 F3       		.byte	0xf3
 3803 01ea 01       		.uleb128 0x1
 3804 01eb 50       		.byte	0x50
 3805 01ec 9F       		.byte	0x9f
 3806 01ed 00000000 		.4byte	0
 3807 01f1 00000000 		.4byte	0
 3808              	.LLST15:
 3809 01f5 00000000 		.4byte	.LVL52
 3810 01f9 0A000000 		.4byte	.LVL54
 3811 01fd 0100     		.2byte	0x1
 3812 01ff 50       		.byte	0x50
 3813 0200 0A000000 		.4byte	.LVL54
 3814 0204 20000000 		.4byte	.LVL59
 3815 0208 0400     		.2byte	0x4
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 115


 3816 020a F3       		.byte	0xf3
 3817 020b 01       		.uleb128 0x1
 3818 020c 50       		.byte	0x50
 3819 020d 9F       		.byte	0x9f
 3820 020e 20000000 		.4byte	.LVL59
 3821 0212 22000000 		.4byte	.LVL60
 3822 0216 0100     		.2byte	0x1
 3823 0218 50       		.byte	0x50
 3824 0219 22000000 		.4byte	.LVL60
 3825 021d 28000000 		.4byte	.LFE10
 3826 0221 0400     		.2byte	0x4
 3827 0223 F3       		.byte	0xf3
 3828 0224 01       		.uleb128 0x1
 3829 0225 50       		.byte	0x50
 3830 0226 9F       		.byte	0x9f
 3831 0227 00000000 		.4byte	0
 3832 022b 00000000 		.4byte	0
 3833              	.LLST16:
 3834 022f 00000000 		.4byte	.LVL52
 3835 0233 22000000 		.4byte	.LVL60
 3836 0237 0200     		.2byte	0x2
 3837 0239 30       		.byte	0x30
 3838 023a 9F       		.byte	0x9f
 3839 023b 22000000 		.4byte	.LVL60
 3840 023f 28000000 		.4byte	.LFE10
 3841 0243 0100     		.2byte	0x1
 3842 0245 50       		.byte	0x50
 3843 0246 00000000 		.4byte	0
 3844 024a 00000000 		.4byte	0
 3845              	.LLST17:
 3846 024e 06000000 		.4byte	.LVL53
 3847 0252 0A000000 		.4byte	.LVL54
 3848 0256 0100     		.2byte	0x1
 3849 0258 50       		.byte	0x50
 3850 0259 0A000000 		.4byte	.LVL54
 3851 025d 1E000000 		.4byte	.LVL58
 3852 0261 0400     		.2byte	0x4
 3853 0263 F3       		.byte	0xf3
 3854 0264 01       		.uleb128 0x1
 3855 0265 50       		.byte	0x50
 3856 0266 9F       		.byte	0x9f
 3857 0267 00000000 		.4byte	0
 3858 026b 00000000 		.4byte	0
 3859              	.LLST18:
 3860 026f 10000000 		.4byte	.LVL55
 3861 0273 16000000 		.4byte	.LVL56
 3862 0277 0800     		.2byte	0x8
 3863 0279 70       		.byte	0x70
 3864 027a 00       		.sleb128 0
 3865 027b 3F       		.byte	0x3f
 3866 027c 1A       		.byte	0x1a
 3867 027d 08       		.byte	0x8
 3868 027e FF       		.byte	0xff
 3869 027f 1A       		.byte	0x1a
 3870 0280 9F       		.byte	0x9f
 3871 0281 16000000 		.4byte	.LVL56
 3872 0285 1A000000 		.4byte	.LVL57
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 116


 3873 0289 0B00     		.2byte	0xb
 3874 028b 73       		.byte	0x73
 3875 028c 00       		.sleb128 0
 3876 028d 08       		.byte	0x8
 3877 028e FF       		.byte	0xff
 3878 028f 1A       		.byte	0x1a
 3879 0290 70       		.byte	0x70
 3880 0291 00       		.sleb128 0
 3881 0292 38       		.byte	0x38
 3882 0293 24       		.byte	0x24
 3883 0294 21       		.byte	0x21
 3884 0295 9F       		.byte	0x9f
 3885 0296 00000000 		.4byte	0
 3886 029a 00000000 		.4byte	0
 3887              	.LLST19:
 3888 029e 00000000 		.4byte	.LVL61
 3889 02a2 58000000 		.4byte	.LVL67
 3890 02a6 0100     		.2byte	0x1
 3891 02a8 50       		.byte	0x50
 3892 02a9 58000000 		.4byte	.LVL67
 3893 02ad 68000000 		.4byte	.LVL68
 3894 02b1 0400     		.2byte	0x4
 3895 02b3 F3       		.byte	0xf3
 3896 02b4 01       		.uleb128 0x1
 3897 02b5 50       		.byte	0x50
 3898 02b6 9F       		.byte	0x9f
 3899 02b7 68000000 		.4byte	.LVL68
 3900 02bb 80000000 		.4byte	.LFE11
 3901 02bf 0100     		.2byte	0x1
 3902 02c1 50       		.byte	0x50
 3903 02c2 00000000 		.4byte	0
 3904 02c6 00000000 		.4byte	0
 3905              	.LLST20:
 3906 02ca 00000000 		.4byte	.LVL61
 3907 02ce 4C000000 		.4byte	.LVL63
 3908 02d2 0100     		.2byte	0x1
 3909 02d4 51       		.byte	0x51
 3910 02d5 4C000000 		.4byte	.LVL63
 3911 02d9 68000000 		.4byte	.LVL68
 3912 02dd 0400     		.2byte	0x4
 3913 02df F3       		.byte	0xf3
 3914 02e0 01       		.uleb128 0x1
 3915 02e1 51       		.byte	0x51
 3916 02e2 9F       		.byte	0x9f
 3917 02e3 68000000 		.4byte	.LVL68
 3918 02e7 80000000 		.4byte	.LFE11
 3919 02eb 0100     		.2byte	0x1
 3920 02ed 51       		.byte	0x51
 3921 02ee 00000000 		.4byte	0
 3922 02f2 00000000 		.4byte	0
 3923              	.LLST21:
 3924 02f6 00000000 		.4byte	.LVL61
 3925 02fa 4C000000 		.4byte	.LVL63
 3926 02fe 0100     		.2byte	0x1
 3927 0300 52       		.byte	0x52
 3928 0301 68000000 		.4byte	.LVL68
 3929 0305 6A000000 		.4byte	.LVL69
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 117


 3930 0309 0100     		.2byte	0x1
 3931 030b 52       		.byte	0x52
 3932 030c 6A000000 		.4byte	.LVL69
 3933 0310 70000000 		.4byte	.LVL70
 3934 0314 0400     		.2byte	0x4
 3935 0316 F3       		.byte	0xf3
 3936 0317 01       		.uleb128 0x1
 3937 0318 52       		.byte	0x52
 3938 0319 9F       		.byte	0x9f
 3939 031a 70000000 		.4byte	.LVL70
 3940 031e 80000000 		.4byte	.LFE11
 3941 0322 0100     		.2byte	0x1
 3942 0324 52       		.byte	0x52
 3943 0325 00000000 		.4byte	0
 3944 0329 00000000 		.4byte	0
 3945              	.LLST22:
 3946 032d 3E000000 		.4byte	.LVL62
 3947 0331 4C000000 		.4byte	.LVL63
 3948 0335 0200     		.2byte	0x2
 3949 0337 30       		.byte	0x30
 3950 0338 9F       		.byte	0x9f
 3951 0339 4C000000 		.4byte	.LVL63
 3952 033d 50000000 		.4byte	.LVL64
 3953 0341 0900     		.2byte	0x9
 3954 0343 71       		.byte	0x71
 3955 0344 00       		.sleb128 0
 3956 0345 F3       		.byte	0xf3
 3957 0346 01       		.uleb128 0x1
 3958 0347 51       		.byte	0x51
 3959 0348 31       		.byte	0x31
 3960 0349 1C       		.byte	0x1c
 3961 034a 1C       		.byte	0x1c
 3962 034b 9F       		.byte	0x9f
 3963 034c 54000000 		.4byte	.LVL65
 3964 0350 56000000 		.4byte	.LVL66
 3965 0354 0900     		.2byte	0x9
 3966 0356 71       		.byte	0x71
 3967 0357 00       		.sleb128 0
 3968 0358 F3       		.byte	0xf3
 3969 0359 01       		.uleb128 0x1
 3970 035a 51       		.byte	0x51
 3971 035b 31       		.byte	0x31
 3972 035c 1C       		.byte	0x1c
 3973 035d 1C       		.byte	0x1c
 3974 035e 9F       		.byte	0x9f
 3975 035f 00000000 		.4byte	0
 3976 0363 00000000 		.4byte	0
 3977              	.LLST23:
 3978 0367 00000000 		.4byte	.LVL71
 3979 036b 44000000 		.4byte	.LVL78
 3980 036f 0100     		.2byte	0x1
 3981 0371 50       		.byte	0x50
 3982 0372 44000000 		.4byte	.LVL78
 3983 0376 58000000 		.4byte	.LVL79
 3984 037a 0400     		.2byte	0x4
 3985 037c F3       		.byte	0xf3
 3986 037d 01       		.uleb128 0x1
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 118


 3987 037e 50       		.byte	0x50
 3988 037f 9F       		.byte	0x9f
 3989 0380 58000000 		.4byte	.LVL79
 3990 0384 5C000000 		.4byte	.LVL81
 3991 0388 0100     		.2byte	0x1
 3992 038a 50       		.byte	0x50
 3993 038b 5C000000 		.4byte	.LVL81
 3994 038f 5E000000 		.4byte	.LVL82
 3995 0393 0400     		.2byte	0x4
 3996 0395 F3       		.byte	0xf3
 3997 0396 01       		.uleb128 0x1
 3998 0397 50       		.byte	0x50
 3999 0398 9F       		.byte	0x9f
 4000 0399 5E000000 		.4byte	.LVL82
 4001 039d 62000000 		.4byte	.LVL84
 4002 03a1 0100     		.2byte	0x1
 4003 03a3 50       		.byte	0x50
 4004 03a4 62000000 		.4byte	.LVL84
 4005 03a8 64000000 		.4byte	.LVL85
 4006 03ac 0400     		.2byte	0x4
 4007 03ae F3       		.byte	0xf3
 4008 03af 01       		.uleb128 0x1
 4009 03b0 50       		.byte	0x50
 4010 03b1 9F       		.byte	0x9f
 4011 03b2 64000000 		.4byte	.LVL85
 4012 03b6 84000000 		.4byte	.LFE12
 4013 03ba 0100     		.2byte	0x1
 4014 03bc 50       		.byte	0x50
 4015 03bd 00000000 		.4byte	0
 4016 03c1 00000000 		.4byte	0
 4017              	.LLST24:
 4018 03c5 00000000 		.4byte	.LVL71
 4019 03c9 34000000 		.4byte	.LVL75
 4020 03cd 0100     		.2byte	0x1
 4021 03cf 51       		.byte	0x51
 4022 03d0 34000000 		.4byte	.LVL75
 4023 03d4 58000000 		.4byte	.LVL79
 4024 03d8 0400     		.2byte	0x4
 4025 03da F3       		.byte	0xf3
 4026 03db 01       		.uleb128 0x1
 4027 03dc 51       		.byte	0x51
 4028 03dd 9F       		.byte	0x9f
 4029 03de 58000000 		.4byte	.LVL79
 4030 03e2 84000000 		.4byte	.LFE12
 4031 03e6 0100     		.2byte	0x1
 4032 03e8 51       		.byte	0x51
 4033 03e9 00000000 		.4byte	0
 4034 03ed 00000000 		.4byte	0
 4035              	.LLST25:
 4036 03f1 00000000 		.4byte	.LVL71
 4037 03f5 26000000 		.4byte	.LVL74
 4038 03f9 0100     		.2byte	0x1
 4039 03fb 52       		.byte	0x52
 4040 03fc 26000000 		.4byte	.LVL74
 4041 0400 66000000 		.4byte	.LVL86
 4042 0404 0100     		.2byte	0x1
 4043 0406 52       		.byte	0x52
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 119


 4044 0407 66000000 		.4byte	.LVL86
 4045 040b 84000000 		.4byte	.LFE12
 4046 040f 0400     		.2byte	0x4
 4047 0411 F3       		.byte	0xf3
 4048 0412 01       		.uleb128 0x1
 4049 0413 52       		.byte	0x52
 4050 0414 9F       		.byte	0x9f
 4051 0415 00000000 		.4byte	0
 4052 0419 00000000 		.4byte	0
 4053              	.LLST26:
 4054 041d 08000000 		.4byte	.LVL72
 4055 0421 12000000 		.4byte	.LVL73
 4056 0425 0100     		.2byte	0x1
 4057 0427 50       		.byte	0x50
 4058 0428 00000000 		.4byte	0
 4059 042c 00000000 		.4byte	0
 4060              	.LLST27:
 4061 0430 08000000 		.4byte	.LVL72
 4062 0434 12000000 		.4byte	.LVL73
 4063 0438 0200     		.2byte	0x2
 4064 043a 30       		.byte	0x30
 4065 043b 9F       		.byte	0x9f
 4066 043c 00000000 		.4byte	0
 4067 0440 00000000 		.4byte	0
 4068              	.LLST29:
 4069 0444 26000000 		.4byte	.LVL74
 4070 0448 34000000 		.4byte	.LVL75
 4071 044c 0200     		.2byte	0x2
 4072 044e 30       		.byte	0x30
 4073 044f 9F       		.byte	0x9f
 4074 0450 34000000 		.4byte	.LVL75
 4075 0454 3E000000 		.4byte	.LVL77
 4076 0458 0900     		.2byte	0x9
 4077 045a 71       		.byte	0x71
 4078 045b 00       		.sleb128 0
 4079 045c F3       		.byte	0xf3
 4080 045d 01       		.uleb128 0x1
 4081 045e 51       		.byte	0x51
 4082 045f 31       		.byte	0x31
 4083 0460 1C       		.byte	0x1c
 4084 0461 1C       		.byte	0x1c
 4085 0462 9F       		.byte	0x9f
 4086 0463 3E000000 		.4byte	.LVL77
 4087 0467 58000000 		.4byte	.LVL79
 4088 046b 0200     		.2byte	0x2
 4089 046d 30       		.byte	0x30
 4090 046e 9F       		.byte	0x9f
 4091 046f 00000000 		.4byte	0
 4092 0473 00000000 		.4byte	0
 4093              	.LLST30:
 4094 0477 3E000000 		.4byte	.LVL77
 4095 047b 44000000 		.4byte	.LVL78
 4096 047f 0100     		.2byte	0x1
 4097 0481 50       		.byte	0x50
 4098 0482 00000000 		.4byte	0
 4099 0486 00000000 		.4byte	0
 4100              	.LLST31:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 120


 4101 048a 64000000 		.4byte	.LVL85
 4102 048e 74000000 		.4byte	.LVL89
 4103 0492 0100     		.2byte	0x1
 4104 0494 50       		.byte	0x50
 4105 0495 00000000 		.4byte	0
 4106 0499 00000000 		.4byte	0
 4107              	.LLST32:
 4108 049d 66000000 		.4byte	.LVL86
 4109 04a1 6C000000 		.4byte	.LVL87
 4110 04a5 0800     		.2byte	0x8
 4111 04a7 72       		.byte	0x72
 4112 04a8 00       		.sleb128 0
 4113 04a9 3F       		.byte	0x3f
 4114 04aa 1A       		.byte	0x1a
 4115 04ab 08       		.byte	0x8
 4116 04ac FF       		.byte	0xff
 4117 04ad 1A       		.byte	0x1a
 4118 04ae 9F       		.byte	0x9f
 4119 04af 6C000000 		.4byte	.LVL87
 4120 04b3 70000000 		.4byte	.LVL88
 4121 04b7 0B00     		.2byte	0xb
 4122 04b9 73       		.byte	0x73
 4123 04ba 00       		.sleb128 0
 4124 04bb 08       		.byte	0x8
 4125 04bc FF       		.byte	0xff
 4126 04bd 1A       		.byte	0x1a
 4127 04be 72       		.byte	0x72
 4128 04bf 00       		.sleb128 0
 4129 04c0 38       		.byte	0x38
 4130 04c1 24       		.byte	0x24
 4131 04c2 21       		.byte	0x21
 4132 04c3 9F       		.byte	0x9f
 4133 04c4 00000000 		.4byte	0
 4134 04c8 00000000 		.4byte	0
 4135              	.LLST33:
 4136 04cc 00000000 		.4byte	.LVL90
 4137 04d0 1A000000 		.4byte	.LVL91
 4138 04d4 0100     		.2byte	0x1
 4139 04d6 50       		.byte	0x50
 4140 04d7 1A000000 		.4byte	.LVL91
 4141 04db 2C000000 		.4byte	.LFE13
 4142 04df 0400     		.2byte	0x4
 4143 04e1 F3       		.byte	0xf3
 4144 04e2 01       		.uleb128 0x1
 4145 04e3 50       		.byte	0x50
 4146 04e4 9F       		.byte	0x9f
 4147 04e5 00000000 		.4byte	0
 4148 04e9 00000000 		.4byte	0
 4149              	.LLST34:
 4150 04ed 00000000 		.4byte	.LVL92
 4151 04f1 0A000000 		.4byte	.LVL93
 4152 04f5 0100     		.2byte	0x1
 4153 04f7 50       		.byte	0x50
 4154 04f8 0A000000 		.4byte	.LVL93
 4155 04fc 18000000 		.4byte	.LFE14
 4156 0500 0400     		.2byte	0x4
 4157 0502 F3       		.byte	0xf3
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 121


 4158 0503 01       		.uleb128 0x1
 4159 0504 50       		.byte	0x50
 4160 0505 9F       		.byte	0x9f
 4161 0506 00000000 		.4byte	0
 4162 050a 00000000 		.4byte	0
 4163              	.LLST35:
 4164 050e 00000000 		.4byte	.LVL95
 4165 0512 0A000000 		.4byte	.LVL96
 4166 0516 0100     		.2byte	0x1
 4167 0518 50       		.byte	0x50
 4168 0519 0A000000 		.4byte	.LVL96
 4169 051d 16000000 		.4byte	.LVL98
 4170 0521 0400     		.2byte	0x4
 4171 0523 F3       		.byte	0xf3
 4172 0524 01       		.uleb128 0x1
 4173 0525 50       		.byte	0x50
 4174 0526 9F       		.byte	0x9f
 4175 0527 16000000 		.4byte	.LVL98
 4176 052b 18000000 		.4byte	.LVL99
 4177 052f 0100     		.2byte	0x1
 4178 0531 50       		.byte	0x50
 4179 0532 18000000 		.4byte	.LVL99
 4180 0536 20000000 		.4byte	.LFE16
 4181 053a 0400     		.2byte	0x4
 4182 053c F3       		.byte	0xf3
 4183 053d 01       		.uleb128 0x1
 4184 053e 50       		.byte	0x50
 4185 053f 9F       		.byte	0x9f
 4186 0540 00000000 		.4byte	0
 4187 0544 00000000 		.4byte	0
 4188              	.LLST36:
 4189 0548 00000000 		.4byte	.LVL95
 4190 054c 14000000 		.4byte	.LVL97
 4191 0550 0200     		.2byte	0x2
 4192 0552 30       		.byte	0x30
 4193 0553 9F       		.byte	0x9f
 4194 0554 14000000 		.4byte	.LVL97
 4195 0558 16000000 		.4byte	.LVL98
 4196 055c 0100     		.2byte	0x1
 4197 055e 50       		.byte	0x50
 4198 055f 16000000 		.4byte	.LVL98
 4199 0563 18000000 		.4byte	.LVL99
 4200 0567 0200     		.2byte	0x2
 4201 0569 30       		.byte	0x30
 4202 056a 9F       		.byte	0x9f
 4203 056b 18000000 		.4byte	.LVL99
 4204 056f 20000000 		.4byte	.LFE16
 4205 0573 0100     		.2byte	0x1
 4206 0575 50       		.byte	0x50
 4207 0576 00000000 		.4byte	0
 4208 057a 00000000 		.4byte	0
 4209              	.LLST37:
 4210 057e 00000000 		.4byte	.LVL101
 4211 0582 04000000 		.4byte	.LVL102
 4212 0586 0200     		.2byte	0x2
 4213 0588 30       		.byte	0x30
 4214 0589 9F       		.byte	0x9f
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 122


 4215 058a 04000000 		.4byte	.LVL102
 4216 058e 08000000 		.4byte	.LVL103
 4217 0592 0900     		.2byte	0x9
 4218 0594 70       		.byte	0x70
 4219 0595 00       		.sleb128 0
 4220 0596 32       		.byte	0x32
 4221 0597 1A       		.byte	0x1a
 4222 0598 48       		.byte	0x48
 4223 0599 24       		.byte	0x24
 4224 059a 30       		.byte	0x30
 4225 059b 2E       		.byte	0x2e
 4226 059c 9F       		.byte	0x9f
 4227 059d 00000000 		.4byte	0
 4228 05a1 00000000 		.4byte	0
 4229              		.section	.debug_aranges,"",%progbits
 4230 0000 C4000000 		.4byte	0xc4
 4231 0004 0200     		.2byte	0x2
 4232 0006 00000000 		.4byte	.Ldebug_info0
 4233 000a 04       		.byte	0x4
 4234 000b 00       		.byte	0
 4235 000c 0000     		.2byte	0
 4236 000e 0000     		.2byte	0
 4237 0010 00000000 		.4byte	.LFB1
 4238 0014 50010000 		.4byte	.LFE1-.LFB1
 4239 0018 00000000 		.4byte	.LFB0
 4240 001c D0000000 		.4byte	.LFE0-.LFB0
 4241 0020 00000000 		.4byte	.LFB2
 4242 0024 B8000000 		.4byte	.LFE2-.LFB2
 4243 0028 00000000 		.4byte	.LFB3
 4244 002c 64000000 		.4byte	.LFE3-.LFB3
 4245 0030 00000000 		.4byte	.LFB4
 4246 0034 C0000000 		.4byte	.LFE4-.LFB4
 4247 0038 00000000 		.4byte	.LFB5
 4248 003c 18000000 		.4byte	.LFE5-.LFB5
 4249 0040 00000000 		.4byte	.LFB6
 4250 0044 0C000000 		.4byte	.LFE6-.LFB6
 4251 0048 00000000 		.4byte	.LFB7
 4252 004c 18000000 		.4byte	.LFE7-.LFB7
 4253 0050 00000000 		.4byte	.LFB8
 4254 0054 0C000000 		.4byte	.LFE8-.LFB8
 4255 0058 00000000 		.4byte	.LFB9
 4256 005c 14000000 		.4byte	.LFE9-.LFB9
 4257 0060 00000000 		.4byte	.LFB10
 4258 0064 28000000 		.4byte	.LFE10-.LFB10
 4259 0068 00000000 		.4byte	.LFB11
 4260 006c 80000000 		.4byte	.LFE11-.LFB11
 4261 0070 00000000 		.4byte	.LFB12
 4262 0074 84000000 		.4byte	.LFE12-.LFB12
 4263 0078 00000000 		.4byte	.LFB13
 4264 007c 2C000000 		.4byte	.LFE13-.LFB13
 4265 0080 00000000 		.4byte	.LFB14
 4266 0084 18000000 		.4byte	.LFE14-.LFB14
 4267 0088 00000000 		.4byte	.LFB15
 4268 008c 0C000000 		.4byte	.LFE15-.LFB15
 4269 0090 00000000 		.4byte	.LFB16
 4270 0094 20000000 		.4byte	.LFE16-.LFB16
 4271 0098 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 123


 4272 009c 1C000000 		.4byte	.LFE17-.LFB17
 4273 00a0 00000000 		.4byte	.LFB18
 4274 00a4 10000000 		.4byte	.LFE18-.LFB18
 4275 00a8 00000000 		.4byte	.LFB19
 4276 00ac 10000000 		.4byte	.LFE19-.LFB19
 4277 00b0 00000000 		.4byte	.LFB20
 4278 00b4 10000000 		.4byte	.LFE20-.LFB20
 4279 00b8 00000000 		.4byte	.LFB21
 4280 00bc 10000000 		.4byte	.LFE21-.LFB21
 4281 00c0 00000000 		.4byte	0
 4282 00c4 00000000 		.4byte	0
 4283              		.section	.debug_ranges,"",%progbits
 4284              	.Ldebug_ranges0:
 4285 0000 3E000000 		.4byte	.LBB34
 4286 0004 4E000000 		.4byte	.LBE34
 4287 0008 50000000 		.4byte	.LBB37
 4288 000c 54000000 		.4byte	.LBE37
 4289 0010 00000000 		.4byte	0
 4290 0014 00000000 		.4byte	0
 4291 0018 00000000 		.4byte	.LFB1
 4292 001c 50010000 		.4byte	.LFE1
 4293 0020 00000000 		.4byte	.LFB0
 4294 0024 D0000000 		.4byte	.LFE0
 4295 0028 00000000 		.4byte	.LFB2
 4296 002c B8000000 		.4byte	.LFE2
 4297 0030 00000000 		.4byte	.LFB3
 4298 0034 64000000 		.4byte	.LFE3
 4299 0038 00000000 		.4byte	.LFB4
 4300 003c C0000000 		.4byte	.LFE4
 4301 0040 00000000 		.4byte	.LFB5
 4302 0044 18000000 		.4byte	.LFE5
 4303 0048 00000000 		.4byte	.LFB6
 4304 004c 0C000000 		.4byte	.LFE6
 4305 0050 00000000 		.4byte	.LFB7
 4306 0054 18000000 		.4byte	.LFE7
 4307 0058 00000000 		.4byte	.LFB8
 4308 005c 0C000000 		.4byte	.LFE8
 4309 0060 00000000 		.4byte	.LFB9
 4310 0064 14000000 		.4byte	.LFE9
 4311 0068 00000000 		.4byte	.LFB10
 4312 006c 28000000 		.4byte	.LFE10
 4313 0070 00000000 		.4byte	.LFB11
 4314 0074 80000000 		.4byte	.LFE11
 4315 0078 00000000 		.4byte	.LFB12
 4316 007c 84000000 		.4byte	.LFE12
 4317 0080 00000000 		.4byte	.LFB13
 4318 0084 2C000000 		.4byte	.LFE13
 4319 0088 00000000 		.4byte	.LFB14
 4320 008c 18000000 		.4byte	.LFE14
 4321 0090 00000000 		.4byte	.LFB15
 4322 0094 0C000000 		.4byte	.LFE15
 4323 0098 00000000 		.4byte	.LFB16
 4324 009c 20000000 		.4byte	.LFE16
 4325 00a0 00000000 		.4byte	.LFB17
 4326 00a4 1C000000 		.4byte	.LFE17
 4327 00a8 00000000 		.4byte	.LFB18
 4328 00ac 10000000 		.4byte	.LFE18
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 124


 4329 00b0 00000000 		.4byte	.LFB19
 4330 00b4 10000000 		.4byte	.LFE19
 4331 00b8 00000000 		.4byte	.LFB20
 4332 00bc 10000000 		.4byte	.LFE20
 4333 00c0 00000000 		.4byte	.LFB21
 4334 00c4 10000000 		.4byte	.LFE21
 4335 00c8 00000000 		.4byte	0
 4336 00cc 00000000 		.4byte	0
 4337              		.section	.debug_line,"",%progbits
 4338              	.Ldebug_line0:
 4339 0000 E7030000 		.section	.debug_str,"MS",%progbits,1
 4339      02007D00 
 4339      00000201 
 4339      FB0E0D00 
 4339      01010101 
 4340              	.LASF22:
 4341 0000 6570546F 		.ascii	"epToggle\000"
 4341      67676C65 
 4341      00
 4342              	.LASF62:
 4343 0009 696E7465 		.ascii	"interfaceNumber\000"
 4343      72666163 
 4343      654E756D 
 4343      62657200 
 4344              	.LASF52:
 4345 0019 636E7472 		.ascii	"cntr\000"
 4345      00
 4346              	.LASF60:
 4347 001e 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 4347      4152545F 
 4347      4973436F 
 4347      6E666967 
 4347      75726174 
 4348              	.LASF83:
 4349 003d 55534255 		.ascii	"USBUART_configuration\000"
 4349      4152545F 
 4349      636F6E66 
 4349      69677572 
 4349      6174696F 
 4350              	.LASF85:
 4351 0053 55534255 		.ascii	"USBUART_deviceStatus\000"
 4351      4152545F 
 4351      64657669 
 4351      63655374 
 4351      61747573 
 4352              	.LASF94:
 4353 0068 43794578 		.ascii	"CyExitCriticalSection\000"
 4353      69744372 
 4353      69746963 
 4353      616C5365 
 4353      6374696F 
 4354              	.LASF65:
 4355 007e 70446174 		.ascii	"pData\000"
 4355      6100
 4356              	.LASF34:
 4357 0084 6570496E 		.ascii	"epIntEn\000"
 4357      74456E00 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 125


 4358              	.LASF2:
 4359 008c 73686F72 		.ascii	"short int\000"
 4359      7420696E 
 4359      7400
 4360              	.LASF18:
 4361 0096 73697A65 		.ascii	"sizetype\000"
 4361      74797065 
 4361      00
 4362              	.LASF46:
 4363 009f 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 4363      4152545F 
 4363      6172625F 
 4363      6570735F 
 4363      73747275 
 4364              	.LASF24:
 4365 00b6 65704D6F 		.ascii	"epMode\000"
 4365      646500
 4366              	.LASF45:
 4367 00bd 61726245 		.ascii	"arbEp\000"
 4367      7000
 4368              	.LASF73:
 4369 00c3 706F7765 		.ascii	"powerStatus\000"
 4369      72537461 
 4369      74757300 
 4370              	.LASF17:
 4371 00cf 6C6F6E67 		.ascii	"long double\000"
 4371      20646F75 
 4371      626C6500 
 4372              	.LASF74:
 4373 00db 55534255 		.ascii	"USBUART_RWUEnabled\000"
 4373      4152545F 
 4373      52575545 
 4373      6E61626C 
 4373      656400
 4374              	.LASF51:
 4375 00ee 6D6F6465 		.ascii	"mode\000"
 4375      00
 4376              	.LASF44:
 4377 00f3 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 4377      4152545F 
 4377      7369655F 
 4377      6570735F 
 4377      73747275 
 4378              	.LASF78:
 4379 010a 55534255 		.ascii	"USBUART_EnableSofInt\000"
 4379      4152545F 
 4379      456E6162 
 4379      6C65536F 
 4379      66496E74 
 4380              	.LASF54:
 4381 011f 55534255 		.ascii	"USBUART_Start\000"
 4381      4152545F 
 4381      53746172 
 4381      7400
 4382              	.LASF88:
 4383 012d 55534255 		.ascii	"USBUART_interfaceSetting\000"
 4383      4152545F 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 126


 4383      696E7465 
 4383      72666163 
 4383      65536574 
 4384              	.LASF10:
 4385 0146 75696E74 		.ascii	"uint16\000"
 4385      313600
 4386              	.LASF39:
 4387 014d 72775261 		.ascii	"rwRa\000"
 4387      00
 4388              	.LASF72:
 4389 0152 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 4389      4152545F 
 4389      53657450 
 4389      6F776572 
 4389      53746174 
 4390              	.LASF32:
 4391 0169 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 4391      4152545F 
 4391      7369655F 
 4391      65705F73 
 4391      74727563 
 4392              	.LASF95:
 4393 017f 4379496E 		.ascii	"CyIntSetPriority\000"
 4393      74536574 
 4393      5072696F 
 4393      72697479 
 4393      00
 4394              	.LASF43:
 4395 0190 73696545 		.ascii	"sieEp\000"
 4395      7000
 4396              	.LASF82:
 4397 0196 55534255 		.ascii	"USBUART_transferState\000"
 4397      4152545F 
 4397      7472616E 
 4397      73666572 
 4397      53746174 
 4398              	.LASF66:
 4399 01ac 6C656E67 		.ascii	"length\000"
 4399      746800
 4400              	.LASF50:
 4401 01b3 64657669 		.ascii	"device\000"
 4401      636500
 4402              	.LASF12:
 4403 01ba 666C6F61 		.ascii	"float\000"
 4403      7400
 4404              	.LASF76:
 4405 01c0 55534255 		.ascii	"USBUART_GetConfiguration\000"
 4405      4152545F 
 4405      47657443 
 4405      6F6E6669 
 4405      67757261 
 4406              	.LASF48:
 4407 01d9 55534255 		.ascii	"USBUART_EnableOutEP\000"
 4407      4152545F 
 4407      456E6162 
 4407      6C654F75 
 4407      74455000 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 127


 4408              	.LASF79:
 4409 01ed 55534255 		.ascii	"USBUART_DisableSofInt\000"
 4409      4152545F 
 4409      44697361 
 4409      626C6553 
 4409      6F66496E 
 4410              	.LASF6:
 4411 0203 6C6F6E67 		.ascii	"long long int\000"
 4411      206C6F6E 
 4411      6720696E 
 4411      7400
 4412              	.LASF84:
 4413 0211 55534255 		.ascii	"USBUART_configurationChanged\000"
 4413      4152545F 
 4413      636F6E66 
 4413      69677572 
 4413      6174696F 
 4414              	.LASF31:
 4415 022e 65704372 		.ascii	"epCr0\000"
 4415      3000
 4416              	.LASF33:
 4417 0234 65704366 		.ascii	"epCfg\000"
 4417      6700
 4418              	.LASF100:
 4419 023a 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 4419      72617465 
 4419      645F536F 
 4419      75726365 
 4419      5C50536F 
 4420              	.LASF81:
 4421 025b 55534255 		.ascii	"USBUART_device\000"
 4421      4152545F 
 4421      64657669 
 4421      636500
 4422              	.LASF75:
 4423 026a 72657375 		.ascii	"result\000"
 4423      6C7400
 4424              	.LASF80:
 4425 0271 55534255 		.ascii	"USBUART_initVar\000"
 4425      4152545F 
 4425      696E6974 
 4425      56617200 
 4426              	.LASF99:
 4427 0281 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4427      43313120 
 4427      352E342E 
 4427      31203230 
 4427      31363036 
 4428 02b4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4428      20726576 
 4428      6973696F 
 4428      6E203233 
 4428      37373135 
 4429 02e7 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 4429      66756E63 
 4429      74696F6E 
 4429      2D736563 
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 128


 4429      74696F6E 
 4430              	.LASF71:
 4431 030f 55534255 		.ascii	"USBUART_GetEPAckState\000"
 4431      4152545F 
 4431      47657445 
 4431      5041636B 
 4431      53746174 
 4432              	.LASF89:
 4433 0325 55534255 		.ascii	"USBUART_deviceAddress\000"
 4433      4152545F 
 4433      64657669 
 4433      63654164 
 4433      64726573 
 4434              	.LASF25:
 4435 033b 62756666 		.ascii	"buffOffset\000"
 4435      4F666673 
 4435      657400
 4436              	.LASF93:
 4437 0346 43794465 		.ascii	"CyDelayUs\000"
 4437      6C617955 
 4437      7300
 4438              	.LASF1:
 4439 0350 756E7369 		.ascii	"unsigned char\000"
 4439      676E6564 
 4439      20636861 
 4439      7200
 4440              	.LASF35:
 4441 035e 65705372 		.ascii	"epSr\000"
 4441      00
 4442              	.LASF53:
 4443 0363 55534255 		.ascii	"USBUART_Init\000"
 4443      4152545F 
 4443      496E6974 
 4443      00
 4444              	.LASF0:
 4445 0370 7369676E 		.ascii	"signed char\000"
 4445      65642063 
 4445      68617200 
 4446              	.LASF55:
 4447 037c 55534255 		.ascii	"USBUART_ReInitComponent\000"
 4447      4152545F 
 4447      5265496E 
 4447      6974436F 
 4447      6D706F6E 
 4448              	.LASF7:
 4449 0394 6C6F6E67 		.ascii	"long long unsigned int\000"
 4449      206C6F6E 
 4449      6720756E 
 4449      7369676E 
 4449      65642069 
 4450              	.LASF42:
 4451 03ab 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 4451      4152545F 
 4451      6172625F 
 4451      65705F73 
 4451      74727563 
 4452              	.LASF8:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 129


 4453 03c1 756E7369 		.ascii	"unsigned int\000"
 4453      676E6564 
 4453      20696E74 
 4453      00
 4454              	.LASF41:
 4455 03ce 72774472 		.ascii	"rwDr\000"
 4455      00
 4456              	.LASF37:
 4457 03d3 72775761 		.ascii	"rwWa\000"
 4457      00
 4458              	.LASF97:
 4459 03d8 43794465 		.ascii	"CyDelayCycles\000"
 4459      6C617943 
 4459      79636C65 
 4459      7300
 4460              	.LASF16:
 4461 03e6 72656733 		.ascii	"reg32\000"
 4461      3200
 4462              	.LASF91:
 4463 03ec 55534255 		.ascii	"USBUART_lastPacketSize\000"
 4463      4152545F 
 4463      6C617374 
 4463      5061636B 
 4463      65745369 
 4464              	.LASF3:
 4465 0403 73686F72 		.ascii	"short unsigned int\000"
 4465      7420756E 
 4465      7369676E 
 4465      65642069 
 4465      6E7400
 4466              	.LASF40:
 4467 0416 72775261 		.ascii	"rwRaMsb\000"
 4467      4D736200 
 4468              	.LASF19:
 4469 041e 61747472 		.ascii	"attrib\000"
 4469      696200
 4470              	.LASF64:
 4471 0425 55534255 		.ascii	"USBUART_LoadInEP\000"
 4471      4152545F 
 4471      4C6F6164 
 4471      496E4550 
 4471      00
 4472              	.LASF14:
 4473 0436 63686172 		.ascii	"char\000"
 4473      00
 4474              	.LASF4:
 4475 043b 6C6F6E67 		.ascii	"long int\000"
 4475      20696E74 
 4475      00
 4476              	.LASF63:
 4477 0444 55534255 		.ascii	"USBUART_GetEPState\000"
 4477      4152545F 
 4477      47657445 
 4477      50537461 
 4477      746500
 4478              	.LASF47:
 4479 0457 65704E75 		.ascii	"epNumber\000"
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 130


 4479      6D626572 
 4479      00
 4480              	.LASF101:
 4481 0460 433A5C55 		.ascii	"C:\\Users\\ingan\\Documents\\PSoC Creator\\MegaDriv"
 4481      73657273 
 4481      5C696E67 
 4481      616E5C44 
 4481      6F63756D 
 4482 048e 655F706C 		.ascii	"e_player\\USBFS_UART01.cydsn\000"
 4482      61796572 
 4482      5C555342 
 4482      46535F55 
 4482      41525430 
 4483              	.LASF23:
 4484 04aa 61646472 		.ascii	"addr\000"
 4484      00
 4485              	.LASF29:
 4486 04af 6570436E 		.ascii	"epCnt0\000"
 4486      743000
 4487              	.LASF9:
 4488 04b6 75696E74 		.ascii	"uint8\000"
 4488      3800
 4489              	.LASF67:
 4490 04bc 55534255 		.ascii	"USBUART_ReadOutEP\000"
 4490      4152545F 
 4490      52656164 
 4490      4F757445 
 4490      5000
 4491              	.LASF58:
 4492 04ce 63723152 		.ascii	"cr1Reg\000"
 4492      656700
 4493              	.LASF30:
 4494 04d5 6570436E 		.ascii	"epCnt1\000"
 4494      743100
 4495              	.LASF21:
 4496 04dc 68774570 		.ascii	"hwEpState\000"
 4496      53746174 
 4496      6500
 4497              	.LASF86:
 4498 04e6 55534255 		.ascii	"USBUART_hidProtocol\000"
 4498      4152545F 
 4498      68696450 
 4498      726F746F 
 4498      636F6C00 
 4499              	.LASF11:
 4500 04fa 75696E74 		.ascii	"uint32\000"
 4500      333200
 4501              	.LASF15:
 4502 0501 72656738 		.ascii	"reg8\000"
 4502      00
 4503              	.LASF5:
 4504 0506 6C6F6E67 		.ascii	"long unsigned int\000"
 4504      20756E73 
 4504      69676E65 
 4504      6420696E 
 4504      7400
 4505              	.LASF13:
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 131


 4506 0518 646F7562 		.ascii	"double\000"
 4506      6C6500
 4507              	.LASF77:
 4508 051f 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 4508      4152545F 
 4508      47657444 
 4508      65766963 
 4508      65416464 
 4509              	.LASF61:
 4510 0538 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 4510      4152545F 
 4510      47657449 
 4510      6E746572 
 4510      66616365 
 4511              	.LASF20:
 4512 0554 61706945 		.ascii	"apiEpState\000"
 4512      70537461 
 4512      746500
 4513              	.LASF98:
 4514 055f 55534255 		.ascii	"USBUART_Dp_ClearInterrupt\000"
 4514      4152545F 
 4514      44705F43 
 4514      6C656172 
 4514      496E7465 
 4515              	.LASF26:
 4516 0579 62756666 		.ascii	"bufferSize\000"
 4516      65725369 
 4516      7A6500
 4517              	.LASF49:
 4518 0584 55534255 		.ascii	"USBUART_InitComponent\000"
 4518      4152545F 
 4518      496E6974 
 4518      436F6D70 
 4518      6F6E656E 
 4519              	.LASF28:
 4520 059a 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 4520      42554152 
 4520      545F4550 
 4520      5F43544C 
 4520      5F424C4F 
 4521              	.LASF96:
 4522 05b1 4379496E 		.ascii	"CyIntSetVector\000"
 4522      74536574 
 4522      56656374 
 4522      6F7200
 4523              	.LASF59:
 4524 05c0 55534255 		.ascii	"USBUART_CheckActivity\000"
 4524      4152545F 
 4524      43686563 
 4524      6B416374 
 4524      69766974 
 4525              	.LASF102:
 4526 05d6 55534255 		.ascii	"USBUART_GetEPCount\000"
 4526      4152545F 
 4526      47657445 
 4526      50436F75 
 4526      6E7400
ARM GAS  C:\Users\ingan\AppData\Local\Temp\ccXNXGhp.s 			page 132


 4527              	.LASF92:
 4528 05e9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4528      74657243 
 4528      72697469 
 4528      63616C53 
 4528      65637469 
 4529              	.LASF87:
 4530 0600 55534255 		.ascii	"USBUART_interfaceNumber\000"
 4530      4152545F 
 4530      696E7465 
 4530      72666163 
 4530      654E756D 
 4531              	.LASF38:
 4532 0618 72775761 		.ascii	"rwWaMsb\000"
 4532      4D736200 
 4533              	.LASF69:
 4534 0620 55534255 		.ascii	"USBUART_Force\000"
 4534      4152545F 
 4534      466F7263 
 4534      6500
 4535              	.LASF36:
 4536 062e 72657365 		.ascii	"reserved\000"
 4536      72766564 
 4536      00
 4537              	.LASF27:
 4538 0637 696E7465 		.ascii	"interface\000"
 4538      72666163 
 4538      6500
 4539              	.LASF70:
 4540 0641 62537461 		.ascii	"bState\000"
 4540      746500
 4541              	.LASF56:
 4542 0648 656E6162 		.ascii	"enableInterrupts\000"
 4542      6C65496E 
 4542      74657272 
 4542      75707473 
 4542      00
 4543              	.LASF68:
 4544 0659 55534255 		.ascii	"USBUART_DisableOutEP\000"
 4544      4152545F 
 4544      44697361 
 4544      626C654F 
 4544      75744550 
 4545              	.LASF90:
 4546 066e 55534255 		.ascii	"USBUART_EP\000"
 4546      4152545F 
 4546      455000
 4547              	.LASF57:
 4548 0679 55534255 		.ascii	"USBUART_Stop\000"
 4548      4152545F 
 4548      53746F70 
 4548      00
 4549              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
